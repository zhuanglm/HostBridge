// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculate_results_request.proto

#ifndef PROTOBUF_calculate_5fresults_5frequest_2eproto__INCLUDED
#define PROTOBUF_calculate_5fresults_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "coox_model.pb.h"
#include "point.pb.h"
// @@protoc_insertion_point(includes)

namespace to {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_calculate_5fresults_5frequest_2eproto();
void protobuf_AssignDesc_calculate_5fresults_5frequest_2eproto();
void protobuf_ShutdownFile_calculate_5fresults_5frequest_2eproto();

class CalculateResultsRequest;

// ===================================================================

class CalculateResultsRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:to.CalculateResultsRequest) */ {
 public:
  CalculateResultsRequest();
  virtual ~CalculateResultsRequest();

  CalculateResultsRequest(const CalculateResultsRequest& from);

  inline CalculateResultsRequest& operator=(const CalculateResultsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const CalculateResultsRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CalculateResultsRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CalculateResultsRequest* other);

  // implements Message ----------------------------------------------

  inline CalculateResultsRequest* New() const { return New(NULL); }

  CalculateResultsRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CalculateResultsRequest& from);
  void MergeFrom(const CalculateResultsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CalculateResultsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .to.CooxModel cooxModel = 1;
  bool has_cooxmodel() const;
  void clear_cooxmodel();
  static const int kCooxModelFieldNumber = 1;
  const ::to::CooxModel& cooxmodel() const;
  ::to::CooxModel* mutable_cooxmodel();
  ::to::CooxModel* release_cooxmodel();
  void set_allocated_cooxmodel(::to::CooxModel* cooxmodel);

  // optional float opl = 2;
  void clear_opl();
  static const int kOplFieldNumber = 2;
  float opl() const;
  void set_opl(float value);

  // repeated .to.Point reference = 3;
  int reference_size() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 3;
  const ::to::Point& reference(int index) const;
  ::to::Point* mutable_reference(int index);
  ::to::Point* add_reference();
  ::google::protobuf::RepeatedPtrField< ::to::Point >*
      mutable_reference();
  const ::google::protobuf::RepeatedPtrField< ::to::Point >&
      reference() const;

  // repeated .to.Point sample = 4;
  int sample_size() const;
  void clear_sample();
  static const int kSampleFieldNumber = 4;
  const ::to::Point& sample(int index) const;
  ::to::Point* mutable_sample(int index);
  ::to::Point* add_sample();
  ::google::protobuf::RepeatedPtrField< ::to::Point >*
      mutable_sample();
  const ::google::protobuf::RepeatedPtrField< ::to::Point >&
      sample() const;

  // optional bool allowNegativeValues = 5;
  void clear_allownegativevalues();
  static const int kAllowNegativeValuesFieldNumber = 5;
  bool allownegativevalues() const;
  void set_allownegativevalues(bool value);

  // @@protoc_insertion_point(class_scope:to.CalculateResultsRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::to::CooxModel* cooxmodel_;
  ::google::protobuf::RepeatedPtrField< ::to::Point > reference_;
  float opl_;
  bool allownegativevalues_;
  ::google::protobuf::RepeatedPtrField< ::to::Point > sample_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_calculate_5fresults_5frequest_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_calculate_5fresults_5frequest_2eproto();
  #endif
  friend void protobuf_AssignDesc_calculate_5fresults_5frequest_2eproto();
  friend void protobuf_ShutdownFile_calculate_5fresults_5frequest_2eproto();

  void InitAsDefaultInstance();
  static CalculateResultsRequest* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CalculateResultsRequest

// optional .to.CooxModel cooxModel = 1;
inline bool CalculateResultsRequest::has_cooxmodel() const {
  return !_is_default_instance_ && cooxmodel_ != NULL;
}
inline void CalculateResultsRequest::clear_cooxmodel() {
  if (GetArenaNoVirtual() == NULL && cooxmodel_ != NULL) delete cooxmodel_;
  cooxmodel_ = NULL;
}
inline const ::to::CooxModel& CalculateResultsRequest::cooxmodel() const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.cooxModel)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cooxmodel_ != NULL ? *cooxmodel_ : *default_instance().cooxmodel_;
#else
  return cooxmodel_ != NULL ? *cooxmodel_ : *default_instance_->cooxmodel_;
#endif
}
inline ::to::CooxModel* CalculateResultsRequest::mutable_cooxmodel() {
  
  if (cooxmodel_ == NULL) {
    cooxmodel_ = new ::to::CooxModel;
  }
  // @@protoc_insertion_point(field_mutable:to.CalculateResultsRequest.cooxModel)
  return cooxmodel_;
}
inline ::to::CooxModel* CalculateResultsRequest::release_cooxmodel() {
  // @@protoc_insertion_point(field_release:to.CalculateResultsRequest.cooxModel)
  
  ::to::CooxModel* temp = cooxmodel_;
  cooxmodel_ = NULL;
  return temp;
}
inline void CalculateResultsRequest::set_allocated_cooxmodel(::to::CooxModel* cooxmodel) {
  delete cooxmodel_;
  cooxmodel_ = cooxmodel;
  if (cooxmodel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:to.CalculateResultsRequest.cooxModel)
}

// optional float opl = 2;
inline void CalculateResultsRequest::clear_opl() {
  opl_ = 0;
}
inline float CalculateResultsRequest::opl() const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.opl)
  return opl_;
}
inline void CalculateResultsRequest::set_opl(float value) {
  
  opl_ = value;
  // @@protoc_insertion_point(field_set:to.CalculateResultsRequest.opl)
}

// repeated .to.Point reference = 3;
inline int CalculateResultsRequest::reference_size() const {
  return reference_.size();
}
inline void CalculateResultsRequest::clear_reference() {
  reference_.Clear();
}
inline const ::to::Point& CalculateResultsRequest::reference(int index) const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.reference)
  return reference_.Get(index);
}
inline ::to::Point* CalculateResultsRequest::mutable_reference(int index) {
  // @@protoc_insertion_point(field_mutable:to.CalculateResultsRequest.reference)
  return reference_.Mutable(index);
}
inline ::to::Point* CalculateResultsRequest::add_reference() {
  // @@protoc_insertion_point(field_add:to.CalculateResultsRequest.reference)
  return reference_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::to::Point >*
CalculateResultsRequest::mutable_reference() {
  // @@protoc_insertion_point(field_mutable_list:to.CalculateResultsRequest.reference)
  return &reference_;
}
inline const ::google::protobuf::RepeatedPtrField< ::to::Point >&
CalculateResultsRequest::reference() const {
  // @@protoc_insertion_point(field_list:to.CalculateResultsRequest.reference)
  return reference_;
}

// repeated .to.Point sample = 4;
inline int CalculateResultsRequest::sample_size() const {
  return sample_.size();
}
inline void CalculateResultsRequest::clear_sample() {
  sample_.Clear();
}
inline const ::to::Point& CalculateResultsRequest::sample(int index) const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.sample)
  return sample_.Get(index);
}
inline ::to::Point* CalculateResultsRequest::mutable_sample(int index) {
  // @@protoc_insertion_point(field_mutable:to.CalculateResultsRequest.sample)
  return sample_.Mutable(index);
}
inline ::to::Point* CalculateResultsRequest::add_sample() {
  // @@protoc_insertion_point(field_add:to.CalculateResultsRequest.sample)
  return sample_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::to::Point >*
CalculateResultsRequest::mutable_sample() {
  // @@protoc_insertion_point(field_mutable_list:to.CalculateResultsRequest.sample)
  return &sample_;
}
inline const ::google::protobuf::RepeatedPtrField< ::to::Point >&
CalculateResultsRequest::sample() const {
  // @@protoc_insertion_point(field_list:to.CalculateResultsRequest.sample)
  return sample_;
}

// optional bool allowNegativeValues = 5;
inline void CalculateResultsRequest::clear_allownegativevalues() {
  allownegativevalues_ = false;
}
inline bool CalculateResultsRequest::allownegativevalues() const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.allowNegativeValues)
  return allownegativevalues_;
}
inline void CalculateResultsRequest::set_allownegativevalues(bool value) {
  
  allownegativevalues_ = value;
  // @@protoc_insertion_point(field_set:to.CalculateResultsRequest.allowNegativeValues)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace to

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_calculate_5fresults_5frequest_2eproto__INCLUDED
