// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coox_model.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "coox_model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace to {

void protobuf_ShutdownFile_coox_5fmodel_2eproto() {
  delete CooxModel::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_coox_5fmodel_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_coox_5fmodel_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_coox_5fmodel_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  CooxModel::default_instance_ = new CooxModel();
  CooxModel::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_coox_5fmodel_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_coox_5fmodel_2eproto_once_);
void protobuf_AddDesc_coox_5fmodel_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_coox_5fmodel_2eproto_once_,
                 &protobuf_AddDesc_coox_5fmodel_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_coox_5fmodel_2eproto {
  StaticDescriptorInitializer_coox_5fmodel_2eproto() {
    protobuf_AddDesc_coox_5fmodel_2eproto();
  }
} static_descriptor_initializer_coox_5fmodel_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CooxModel::kPixelMinFieldNumber;
const int CooxModel::kPixelMaxFieldNumber;
const int CooxModel::kCoeffStartFieldNumber;
const int CooxModel::kCoeffEndFieldNumber;
const int CooxModel::kCoefficients0FieldNumber;
const int CooxModel::kCoefficients1FieldNumber;
const int CooxModel::kCoefficients2FieldNumber;
const int CooxModel::kCoefficients3FieldNumber;
const int CooxModel::kCoefficients4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CooxModel::CooxModel()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:to.CooxModel)
}

void CooxModel::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CooxModel::CooxModel(const CooxModel& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:to.CooxModel)
}

void CooxModel::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  pixelmin_ = 0;
  pixelmax_ = 0;
  coeffstart_ = 0;
  coeffend_ = 0;
}

CooxModel::~CooxModel() {
  // @@protoc_insertion_point(destructor:to.CooxModel)
  SharedDtor();
}

void CooxModel::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CooxModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CooxModel& CooxModel::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_coox_5fmodel_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_coox_5fmodel_2eproto();
#endif
  return *default_instance_;
}

CooxModel* CooxModel::default_instance_ = NULL;

CooxModel* CooxModel::New(::google::protobuf::Arena* arena) const {
  CooxModel* n = new CooxModel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CooxModel::Clear() {
// @@protoc_insertion_point(message_clear_start:to.CooxModel)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CooxModel, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CooxModel*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(pixelmin_, coeffend_);

#undef ZR_HELPER_
#undef ZR_

  coefficients0_.Clear();
  coefficients1_.Clear();
  coefficients2_.Clear();
  coefficients3_.Clear();
  coefficients4_.Clear();
}

bool CooxModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:to.CooxModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 PixelMin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixelmin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PixelMax;
        break;
      }

      // optional int32 PixelMax = 2;
      case 2: {
        if (tag == 16) {
         parse_PixelMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixelmax_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CoeffStart;
        break;
      }

      // optional int32 CoeffStart = 3;
      case 3: {
        if (tag == 24) {
         parse_CoeffStart:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coeffstart_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CoeffEnd;
        break;
      }

      // optional int32 CoeffEnd = 4;
      case 4: {
        if (tag == 32) {
         parse_CoeffEnd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coeffend_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Coefficients0;
        break;
      }

      // repeated float Coefficients0 = 5;
      case 5: {
        if (tag == 42) {
         parse_Coefficients0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_coefficients0())));
        } else if (tag == 45) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42, input, this->mutable_coefficients0())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Coefficients1;
        break;
      }

      // repeated float Coefficients1 = 6;
      case 6: {
        if (tag == 50) {
         parse_Coefficients1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_coefficients1())));
        } else if (tag == 53) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50, input, this->mutable_coefficients1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Coefficients2;
        break;
      }

      // repeated float Coefficients2 = 7;
      case 7: {
        if (tag == 58) {
         parse_Coefficients2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_coefficients2())));
        } else if (tag == 61) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 58, input, this->mutable_coefficients2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Coefficients3;
        break;
      }

      // repeated float Coefficients3 = 8;
      case 8: {
        if (tag == 66) {
         parse_Coefficients3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_coefficients3())));
        } else if (tag == 69) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66, input, this->mutable_coefficients3())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Coefficients4;
        break;
      }

      // repeated float Coefficients4 = 9;
      case 9: {
        if (tag == 74) {
         parse_Coefficients4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_coefficients4())));
        } else if (tag == 77) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 74, input, this->mutable_coefficients4())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:to.CooxModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:to.CooxModel)
  return false;
#undef DO_
}

void CooxModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:to.CooxModel)
  // optional int32 PixelMin = 1;
  if (this->pixelmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pixelmin(), output);
  }

  // optional int32 PixelMax = 2;
  if (this->pixelmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixelmax(), output);
  }

  // optional int32 CoeffStart = 3;
  if (this->coeffstart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->coeffstart(), output);
  }

  // optional int32 CoeffEnd = 4;
  if (this->coeffend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->coeffend(), output);
  }

  // repeated float Coefficients0 = 5;
  if (this->coefficients0_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_coefficients0_cached_byte_size_);
  }
  for (int i = 0; i < this->coefficients0_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->coefficients0(i), output);
  }

  // repeated float Coefficients1 = 6;
  if (this->coefficients1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_coefficients1_cached_byte_size_);
  }
  for (int i = 0; i < this->coefficients1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->coefficients1(i), output);
  }

  // repeated float Coefficients2 = 7;
  if (this->coefficients2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_coefficients2_cached_byte_size_);
  }
  for (int i = 0; i < this->coefficients2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->coefficients2(i), output);
  }

  // repeated float Coefficients3 = 8;
  if (this->coefficients3_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_coefficients3_cached_byte_size_);
  }
  for (int i = 0; i < this->coefficients3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->coefficients3(i), output);
  }

  // repeated float Coefficients4 = 9;
  if (this->coefficients4_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_coefficients4_cached_byte_size_);
  }
  for (int i = 0; i < this->coefficients4_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->coefficients4(i), output);
  }

  // @@protoc_insertion_point(serialize_end:to.CooxModel)
}

int CooxModel::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:to.CooxModel)
  int total_size = 0;

  // optional int32 PixelMin = 1;
  if (this->pixelmin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pixelmin());
  }

  // optional int32 PixelMax = 2;
  if (this->pixelmax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pixelmax());
  }

  // optional int32 CoeffStart = 3;
  if (this->coeffstart() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->coeffstart());
  }

  // optional int32 CoeffEnd = 4;
  if (this->coeffend() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->coeffend());
  }

  // repeated float Coefficients0 = 5;
  {
    int data_size = 0;
    data_size = 4 * this->coefficients0_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _coefficients0_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float Coefficients1 = 6;
  {
    int data_size = 0;
    data_size = 4 * this->coefficients1_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _coefficients1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float Coefficients2 = 7;
  {
    int data_size = 0;
    data_size = 4 * this->coefficients2_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _coefficients2_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float Coefficients3 = 8;
  {
    int data_size = 0;
    data_size = 4 * this->coefficients3_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _coefficients3_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float Coefficients4 = 9;
  {
    int data_size = 0;
    data_size = 4 * this->coefficients4_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _coefficients4_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CooxModel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CooxModel*>(&from));
}

void CooxModel::MergeFrom(const CooxModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:to.CooxModel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  coefficients0_.MergeFrom(from.coefficients0_);
  coefficients1_.MergeFrom(from.coefficients1_);
  coefficients2_.MergeFrom(from.coefficients2_);
  coefficients3_.MergeFrom(from.coefficients3_);
  coefficients4_.MergeFrom(from.coefficients4_);
  if (from.pixelmin() != 0) {
    set_pixelmin(from.pixelmin());
  }
  if (from.pixelmax() != 0) {
    set_pixelmax(from.pixelmax());
  }
  if (from.coeffstart() != 0) {
    set_coeffstart(from.coeffstart());
  }
  if (from.coeffend() != 0) {
    set_coeffend(from.coeffend());
  }
}

void CooxModel::CopyFrom(const CooxModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to.CooxModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CooxModel::IsInitialized() const {

  return true;
}

void CooxModel::Swap(CooxModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CooxModel::InternalSwap(CooxModel* other) {
  std::swap(pixelmin_, other->pixelmin_);
  std::swap(pixelmax_, other->pixelmax_);
  std::swap(coeffstart_, other->coeffstart_);
  std::swap(coeffend_, other->coeffend_);
  coefficients0_.UnsafeArenaSwap(&other->coefficients0_);
  coefficients1_.UnsafeArenaSwap(&other->coefficients1_);
  coefficients2_.UnsafeArenaSwap(&other->coefficients2_);
  coefficients3_.UnsafeArenaSwap(&other->coefficients3_);
  coefficients4_.UnsafeArenaSwap(&other->coefficients4_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CooxModel::GetTypeName() const {
  return "to.CooxModel";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CooxModel

// optional int32 PixelMin = 1;
void CooxModel::clear_pixelmin() {
  pixelmin_ = 0;
}
 ::google::protobuf::int32 CooxModel::pixelmin() const {
  // @@protoc_insertion_point(field_get:to.CooxModel.PixelMin)
  return pixelmin_;
}
 void CooxModel::set_pixelmin(::google::protobuf::int32 value) {
  
  pixelmin_ = value;
  // @@protoc_insertion_point(field_set:to.CooxModel.PixelMin)
}

// optional int32 PixelMax = 2;
void CooxModel::clear_pixelmax() {
  pixelmax_ = 0;
}
 ::google::protobuf::int32 CooxModel::pixelmax() const {
  // @@protoc_insertion_point(field_get:to.CooxModel.PixelMax)
  return pixelmax_;
}
 void CooxModel::set_pixelmax(::google::protobuf::int32 value) {
  
  pixelmax_ = value;
  // @@protoc_insertion_point(field_set:to.CooxModel.PixelMax)
}

// optional int32 CoeffStart = 3;
void CooxModel::clear_coeffstart() {
  coeffstart_ = 0;
}
 ::google::protobuf::int32 CooxModel::coeffstart() const {
  // @@protoc_insertion_point(field_get:to.CooxModel.CoeffStart)
  return coeffstart_;
}
 void CooxModel::set_coeffstart(::google::protobuf::int32 value) {
  
  coeffstart_ = value;
  // @@protoc_insertion_point(field_set:to.CooxModel.CoeffStart)
}

// optional int32 CoeffEnd = 4;
void CooxModel::clear_coeffend() {
  coeffend_ = 0;
}
 ::google::protobuf::int32 CooxModel::coeffend() const {
  // @@protoc_insertion_point(field_get:to.CooxModel.CoeffEnd)
  return coeffend_;
}
 void CooxModel::set_coeffend(::google::protobuf::int32 value) {
  
  coeffend_ = value;
  // @@protoc_insertion_point(field_set:to.CooxModel.CoeffEnd)
}

// repeated float Coefficients0 = 5;
int CooxModel::coefficients0_size() const {
  return coefficients0_.size();
}
void CooxModel::clear_coefficients0() {
  coefficients0_.Clear();
}
 float CooxModel::coefficients0(int index) const {
  // @@protoc_insertion_point(field_get:to.CooxModel.Coefficients0)
  return coefficients0_.Get(index);
}
 void CooxModel::set_coefficients0(int index, float value) {
  coefficients0_.Set(index, value);
  // @@protoc_insertion_point(field_set:to.CooxModel.Coefficients0)
}
 void CooxModel::add_coefficients0(float value) {
  coefficients0_.Add(value);
  // @@protoc_insertion_point(field_add:to.CooxModel.Coefficients0)
}
 const ::google::protobuf::RepeatedField< float >&
CooxModel::coefficients0() const {
  // @@protoc_insertion_point(field_list:to.CooxModel.Coefficients0)
  return coefficients0_;
}
 ::google::protobuf::RepeatedField< float >*
CooxModel::mutable_coefficients0() {
  // @@protoc_insertion_point(field_mutable_list:to.CooxModel.Coefficients0)
  return &coefficients0_;
}

// repeated float Coefficients1 = 6;
int CooxModel::coefficients1_size() const {
  return coefficients1_.size();
}
void CooxModel::clear_coefficients1() {
  coefficients1_.Clear();
}
 float CooxModel::coefficients1(int index) const {
  // @@protoc_insertion_point(field_get:to.CooxModel.Coefficients1)
  return coefficients1_.Get(index);
}
 void CooxModel::set_coefficients1(int index, float value) {
  coefficients1_.Set(index, value);
  // @@protoc_insertion_point(field_set:to.CooxModel.Coefficients1)
}
 void CooxModel::add_coefficients1(float value) {
  coefficients1_.Add(value);
  // @@protoc_insertion_point(field_add:to.CooxModel.Coefficients1)
}
 const ::google::protobuf::RepeatedField< float >&
CooxModel::coefficients1() const {
  // @@protoc_insertion_point(field_list:to.CooxModel.Coefficients1)
  return coefficients1_;
}
 ::google::protobuf::RepeatedField< float >*
CooxModel::mutable_coefficients1() {
  // @@protoc_insertion_point(field_mutable_list:to.CooxModel.Coefficients1)
  return &coefficients1_;
}

// repeated float Coefficients2 = 7;
int CooxModel::coefficients2_size() const {
  return coefficients2_.size();
}
void CooxModel::clear_coefficients2() {
  coefficients2_.Clear();
}
 float CooxModel::coefficients2(int index) const {
  // @@protoc_insertion_point(field_get:to.CooxModel.Coefficients2)
  return coefficients2_.Get(index);
}
 void CooxModel::set_coefficients2(int index, float value) {
  coefficients2_.Set(index, value);
  // @@protoc_insertion_point(field_set:to.CooxModel.Coefficients2)
}
 void CooxModel::add_coefficients2(float value) {
  coefficients2_.Add(value);
  // @@protoc_insertion_point(field_add:to.CooxModel.Coefficients2)
}
 const ::google::protobuf::RepeatedField< float >&
CooxModel::coefficients2() const {
  // @@protoc_insertion_point(field_list:to.CooxModel.Coefficients2)
  return coefficients2_;
}
 ::google::protobuf::RepeatedField< float >*
CooxModel::mutable_coefficients2() {
  // @@protoc_insertion_point(field_mutable_list:to.CooxModel.Coefficients2)
  return &coefficients2_;
}

// repeated float Coefficients3 = 8;
int CooxModel::coefficients3_size() const {
  return coefficients3_.size();
}
void CooxModel::clear_coefficients3() {
  coefficients3_.Clear();
}
 float CooxModel::coefficients3(int index) const {
  // @@protoc_insertion_point(field_get:to.CooxModel.Coefficients3)
  return coefficients3_.Get(index);
}
 void CooxModel::set_coefficients3(int index, float value) {
  coefficients3_.Set(index, value);
  // @@protoc_insertion_point(field_set:to.CooxModel.Coefficients3)
}
 void CooxModel::add_coefficients3(float value) {
  coefficients3_.Add(value);
  // @@protoc_insertion_point(field_add:to.CooxModel.Coefficients3)
}
 const ::google::protobuf::RepeatedField< float >&
CooxModel::coefficients3() const {
  // @@protoc_insertion_point(field_list:to.CooxModel.Coefficients3)
  return coefficients3_;
}
 ::google::protobuf::RepeatedField< float >*
CooxModel::mutable_coefficients3() {
  // @@protoc_insertion_point(field_mutable_list:to.CooxModel.Coefficients3)
  return &coefficients3_;
}

// repeated float Coefficients4 = 9;
int CooxModel::coefficients4_size() const {
  return coefficients4_.size();
}
void CooxModel::clear_coefficients4() {
  coefficients4_.Clear();
}
 float CooxModel::coefficients4(int index) const {
  // @@protoc_insertion_point(field_get:to.CooxModel.Coefficients4)
  return coefficients4_.Get(index);
}
 void CooxModel::set_coefficients4(int index, float value) {
  coefficients4_.Set(index, value);
  // @@protoc_insertion_point(field_set:to.CooxModel.Coefficients4)
}
 void CooxModel::add_coefficients4(float value) {
  coefficients4_.Add(value);
  // @@protoc_insertion_point(field_add:to.CooxModel.Coefficients4)
}
 const ::google::protobuf::RepeatedField< float >&
CooxModel::coefficients4() const {
  // @@protoc_insertion_point(field_list:to.CooxModel.Coefficients4)
  return coefficients4_;
}
 ::google::protobuf::RepeatedField< float >*
CooxModel::mutable_coefficients4() {
  // @@protoc_insertion_point(field_mutable_list:to.CooxModel.Coefficients4)
  return &coefficients4_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace to

// @@protoc_insertion_point(global_scope)
