// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculate_results_request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "calculate_results_request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace to {

void protobuf_ShutdownFile_calculate_5fresults_5frequest_2eproto() {
  delete CalculateResultsRequest::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_calculate_5fresults_5frequest_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_calculate_5fresults_5frequest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_calculate_5fresults_5frequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::to::protobuf_AddDesc_coox_5fmodel_2eproto();
  ::to::protobuf_AddDesc_point_2eproto();
  CalculateResultsRequest::default_instance_ = new CalculateResultsRequest();
  CalculateResultsRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_calculate_5fresults_5frequest_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_calculate_5fresults_5frequest_2eproto_once_);
void protobuf_AddDesc_calculate_5fresults_5frequest_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_calculate_5fresults_5frequest_2eproto_once_,
                 &protobuf_AddDesc_calculate_5fresults_5frequest_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_calculate_5fresults_5frequest_2eproto {
  StaticDescriptorInitializer_calculate_5fresults_5frequest_2eproto() {
    protobuf_AddDesc_calculate_5fresults_5frequest_2eproto();
  }
} static_descriptor_initializer_calculate_5fresults_5frequest_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalculateResultsRequest::kCooxModelFieldNumber;
const int CalculateResultsRequest::kOplFieldNumber;
const int CalculateResultsRequest::kReferenceFieldNumber;
const int CalculateResultsRequest::kSampleFieldNumber;
const int CalculateResultsRequest::kAllowNegativeValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalculateResultsRequest::CalculateResultsRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:to.CalculateResultsRequest)
}

void CalculateResultsRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  cooxmodel_ = const_cast< ::to::CooxModel*>(
      ::to::CooxModel::internal_default_instance());
#else
  cooxmodel_ = const_cast< ::to::CooxModel*>(&::to::CooxModel::default_instance());
#endif
}

CalculateResultsRequest::CalculateResultsRequest(const CalculateResultsRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:to.CalculateResultsRequest)
}

void CalculateResultsRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  cooxmodel_ = NULL;
  opl_ = 0;
  allownegativevalues_ = false;
}

CalculateResultsRequest::~CalculateResultsRequest() {
  // @@protoc_insertion_point(destructor:to.CalculateResultsRequest)
  SharedDtor();
}

void CalculateResultsRequest::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete cooxmodel_;
  }
}

void CalculateResultsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CalculateResultsRequest& CalculateResultsRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_calculate_5fresults_5frequest_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_calculate_5fresults_5frequest_2eproto();
#endif
  return *default_instance_;
}

CalculateResultsRequest* CalculateResultsRequest::default_instance_ = NULL;

CalculateResultsRequest* CalculateResultsRequest::New(::google::protobuf::Arena* arena) const {
  CalculateResultsRequest* n = new CalculateResultsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalculateResultsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:to.CalculateResultsRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CalculateResultsRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CalculateResultsRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(opl_, allownegativevalues_);
  if (GetArenaNoVirtual() == NULL && cooxmodel_ != NULL) delete cooxmodel_;
  cooxmodel_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  reference_.Clear();
  sample_.Clear();
}

bool CalculateResultsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:to.CalculateResultsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .to.CooxModel cooxModel = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cooxmodel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_opl;
        break;
      }

      // optional float opl = 2;
      case 2: {
        if (tag == 21) {
         parse_opl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &opl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reference;
        break;
      }

      // repeated .to.Point reference = 3;
      case 3: {
        if (tag == 26) {
         parse_reference:
          DO_(input->IncrementRecursionDepth());
         parse_loop_reference:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_reference()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_reference;
        if (input->ExpectTag(34)) goto parse_loop_sample;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .to.Point sample = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_sample:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sample()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_sample;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_allowNegativeValues;
        break;
      }

      // optional bool allowNegativeValues = 5;
      case 5: {
        if (tag == 40) {
         parse_allowNegativeValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allownegativevalues_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:to.CalculateResultsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:to.CalculateResultsRequest)
  return false;
#undef DO_
}

void CalculateResultsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:to.CalculateResultsRequest)
  // optional .to.CooxModel cooxModel = 1;
  if (this->has_cooxmodel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->cooxmodel_, output);
  }

  // optional float opl = 2;
  if (this->opl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->opl(), output);
  }

  // repeated .to.Point reference = 3;
  for (unsigned int i = 0, n = this->reference_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->reference(i), output);
  }

  // repeated .to.Point sample = 4;
  for (unsigned int i = 0, n = this->sample_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->sample(i), output);
  }

  // optional bool allowNegativeValues = 5;
  if (this->allownegativevalues() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->allownegativevalues(), output);
  }

  // @@protoc_insertion_point(serialize_end:to.CalculateResultsRequest)
}

int CalculateResultsRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:to.CalculateResultsRequest)
  int total_size = 0;

  // optional .to.CooxModel cooxModel = 1;
  if (this->has_cooxmodel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cooxmodel_);
  }

  // optional float opl = 2;
  if (this->opl() != 0) {
    total_size += 1 + 4;
  }

  // optional bool allowNegativeValues = 5;
  if (this->allownegativevalues() != 0) {
    total_size += 1 + 1;
  }

  // repeated .to.Point reference = 3;
  total_size += 1 * this->reference_size();
  for (int i = 0; i < this->reference_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reference(i));
  }

  // repeated .to.Point sample = 4;
  total_size += 1 * this->sample_size();
  for (int i = 0; i < this->sample_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sample(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalculateResultsRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CalculateResultsRequest*>(&from));
}

void CalculateResultsRequest::MergeFrom(const CalculateResultsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:to.CalculateResultsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  reference_.MergeFrom(from.reference_);
  sample_.MergeFrom(from.sample_);
  if (from.has_cooxmodel()) {
    mutable_cooxmodel()->::to::CooxModel::MergeFrom(from.cooxmodel());
  }
  if (from.opl() != 0) {
    set_opl(from.opl());
  }
  if (from.allownegativevalues() != 0) {
    set_allownegativevalues(from.allownegativevalues());
  }
}

void CalculateResultsRequest::CopyFrom(const CalculateResultsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to.CalculateResultsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateResultsRequest::IsInitialized() const {

  return true;
}

void CalculateResultsRequest::Swap(CalculateResultsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalculateResultsRequest::InternalSwap(CalculateResultsRequest* other) {
  std::swap(cooxmodel_, other->cooxmodel_);
  std::swap(opl_, other->opl_);
  reference_.UnsafeArenaSwap(&other->reference_);
  sample_.UnsafeArenaSwap(&other->sample_);
  std::swap(allownegativevalues_, other->allownegativevalues_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CalculateResultsRequest::GetTypeName() const {
  return "to.CalculateResultsRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalculateResultsRequest

// optional .to.CooxModel cooxModel = 1;
bool CalculateResultsRequest::has_cooxmodel() const {
  return !_is_default_instance_ && cooxmodel_ != NULL;
}
void CalculateResultsRequest::clear_cooxmodel() {
  if (GetArenaNoVirtual() == NULL && cooxmodel_ != NULL) delete cooxmodel_;
  cooxmodel_ = NULL;
}
const ::to::CooxModel& CalculateResultsRequest::cooxmodel() const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.cooxModel)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cooxmodel_ != NULL ? *cooxmodel_ : *default_instance().cooxmodel_;
#else
  return cooxmodel_ != NULL ? *cooxmodel_ : *default_instance_->cooxmodel_;
#endif
}
::to::CooxModel* CalculateResultsRequest::mutable_cooxmodel() {
  
  if (cooxmodel_ == NULL) {
    cooxmodel_ = new ::to::CooxModel;
  }
  // @@protoc_insertion_point(field_mutable:to.CalculateResultsRequest.cooxModel)
  return cooxmodel_;
}
::to::CooxModel* CalculateResultsRequest::release_cooxmodel() {
  // @@protoc_insertion_point(field_release:to.CalculateResultsRequest.cooxModel)
  
  ::to::CooxModel* temp = cooxmodel_;
  cooxmodel_ = NULL;
  return temp;
}
void CalculateResultsRequest::set_allocated_cooxmodel(::to::CooxModel* cooxmodel) {
  delete cooxmodel_;
  cooxmodel_ = cooxmodel;
  if (cooxmodel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:to.CalculateResultsRequest.cooxModel)
}

// optional float opl = 2;
void CalculateResultsRequest::clear_opl() {
  opl_ = 0;
}
 float CalculateResultsRequest::opl() const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.opl)
  return opl_;
}
 void CalculateResultsRequest::set_opl(float value) {
  
  opl_ = value;
  // @@protoc_insertion_point(field_set:to.CalculateResultsRequest.opl)
}

// repeated .to.Point reference = 3;
int CalculateResultsRequest::reference_size() const {
  return reference_.size();
}
void CalculateResultsRequest::clear_reference() {
  reference_.Clear();
}
const ::to::Point& CalculateResultsRequest::reference(int index) const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.reference)
  return reference_.Get(index);
}
::to::Point* CalculateResultsRequest::mutable_reference(int index) {
  // @@protoc_insertion_point(field_mutable:to.CalculateResultsRequest.reference)
  return reference_.Mutable(index);
}
::to::Point* CalculateResultsRequest::add_reference() {
  // @@protoc_insertion_point(field_add:to.CalculateResultsRequest.reference)
  return reference_.Add();
}
::google::protobuf::RepeatedPtrField< ::to::Point >*
CalculateResultsRequest::mutable_reference() {
  // @@protoc_insertion_point(field_mutable_list:to.CalculateResultsRequest.reference)
  return &reference_;
}
const ::google::protobuf::RepeatedPtrField< ::to::Point >&
CalculateResultsRequest::reference() const {
  // @@protoc_insertion_point(field_list:to.CalculateResultsRequest.reference)
  return reference_;
}

// repeated .to.Point sample = 4;
int CalculateResultsRequest::sample_size() const {
  return sample_.size();
}
void CalculateResultsRequest::clear_sample() {
  sample_.Clear();
}
const ::to::Point& CalculateResultsRequest::sample(int index) const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.sample)
  return sample_.Get(index);
}
::to::Point* CalculateResultsRequest::mutable_sample(int index) {
  // @@protoc_insertion_point(field_mutable:to.CalculateResultsRequest.sample)
  return sample_.Mutable(index);
}
::to::Point* CalculateResultsRequest::add_sample() {
  // @@protoc_insertion_point(field_add:to.CalculateResultsRequest.sample)
  return sample_.Add();
}
::google::protobuf::RepeatedPtrField< ::to::Point >*
CalculateResultsRequest::mutable_sample() {
  // @@protoc_insertion_point(field_mutable_list:to.CalculateResultsRequest.sample)
  return &sample_;
}
const ::google::protobuf::RepeatedPtrField< ::to::Point >&
CalculateResultsRequest::sample() const {
  // @@protoc_insertion_point(field_list:to.CalculateResultsRequest.sample)
  return sample_;
}

// optional bool allowNegativeValues = 5;
void CalculateResultsRequest::clear_allownegativevalues() {
  allownegativevalues_ = false;
}
 bool CalculateResultsRequest::allownegativevalues() const {
  // @@protoc_insertion_point(field_get:to.CalculateResultsRequest.allowNegativeValues)
  return allownegativevalues_;
}
 void CalculateResultsRequest::set_allownegativevalues(bool value) {
  
  allownegativevalues_ = value;
  // @@protoc_insertion_point(field_set:to.CalculateResultsRequest.allowNegativeValues)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace to

// @@protoc_insertion_point(global_scope)
