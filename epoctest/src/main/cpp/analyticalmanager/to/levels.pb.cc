// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: levels.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "levels.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace to {

void protobuf_ShutdownFile_levels_2eproto() {
  delete Levels::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_levels_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_levels_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_levels_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  Levels::default_instance_ = new Levels();
  Levels::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_levels_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_levels_2eproto_once_);
void protobuf_AddDesc_levels_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_levels_2eproto_once_,
                 &protobuf_AddDesc_levels_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_levels_2eproto {
  StaticDescriptorInitializer_levels_2eproto() {
    protobuf_AddDesc_levels_2eproto();
  }
} static_descriptor_initializer_levels_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Levels::kCalMeanFieldNumber;
const int Levels::kCalSlopeFieldNumber;
const int Levels::kCalNoiseFieldNumber;
const int Levels::kCalSecondFieldNumber;
const int Levels::kCalExFieldNumber;
const int Levels::kSampleMeanFieldNumber;
const int Levels::kSampleSlopeFieldNumber;
const int Levels::kSampleNoiseFieldNumber;
const int Levels::kSampleSecondFieldNumber;
const int Levels::kSampleExFieldNumber;
const int Levels::kPostMeanFieldNumber;
const int Levels::kPostSlopeFieldNumber;
const int Levels::kPostNoiseFieldNumber;
const int Levels::kPostSecondFieldNumber;
const int Levels::kPostExFieldNumber;
const int Levels::kAdditionalMeanFieldNumber;
const int Levels::kAdditionalSlopeFieldNumber;
const int Levels::kAdditionalNoiseFieldNumber;
const int Levels::kAdditionalSecondFieldNumber;
const int Levels::kAdditionalExFieldNumber;
const int Levels::kAdditionalFirstFieldNumber;
const int Levels::kAdditionalLastFieldNumber;
const int Levels::kPeakMeanFieldNumber;
const int Levels::kPeakSlopeFieldNumber;
const int Levels::kPeakNoiseFieldNumber;
const int Levels::kPeakSecondFieldNumber;
const int Levels::kPeakExFieldNumber;
const int Levels::kResponseFieldNumber;
const int Levels::kUncorrectedResponseFieldNumber;
const int Levels::kCalLastFieldNumber;
const int Levels::kCalFirstFieldNumber;
const int Levels::kSampleFirstFieldNumber;
const int Levels::kSampleLastFieldNumber;
const int Levels::kPostFirstFieldNumber;
const int Levels::kPostLastFieldNumber;
const int Levels::kPeakFirstFieldNumber;
const int Levels::kPeakLastFieldNumber;
const int Levels::kCalWindowMovedBackFieldNumber;
const int Levels::kOutput1FieldNumber;
const int Levels::kOutput2FieldNumber;
const int Levels::kOutput3FieldNumber;
const int Levels::kOutput4FieldNumber;
const int Levels::kOutput5FieldNumber;
const int Levels::kOutput6FieldNumber;
const int Levels::kOutput7FieldNumber;
const int Levels::kOutput8FieldNumber;
const int Levels::kOutput9FieldNumber;
const int Levels::kOutput10FieldNumber;
const int Levels::kOutput11FieldNumber;
const int Levels::kOutput12FieldNumber;
const int Levels::kOutput13FieldNumber;
const int Levels::kOutput14FieldNumber;
const int Levels::kOutput15FieldNumber;
const int Levels::kOutput16FieldNumber;
const int Levels::kOutput17FieldNumber;
const int Levels::kOutput18FieldNumber;
const int Levels::kOutput19FieldNumber;
const int Levels::kOutput20FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Levels::Levels()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:to.Levels)
}

void Levels::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Levels::Levels(const Levels& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:to.Levels)
}

void Levels::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  calmean_ = 0;
  calslope_ = 0;
  calnoise_ = 0;
  calsecond_ = 0;
  calex_ = 0;
  samplemean_ = 0;
  sampleslope_ = 0;
  samplenoise_ = 0;
  samplesecond_ = 0;
  sampleex_ = 0;
  postmean_ = 0;
  postslope_ = 0;
  postnoise_ = 0;
  postsecond_ = 0;
  postex_ = 0;
  additionalmean_ = 0;
  additionalslope_ = 0;
  additionalnoise_ = 0;
  additionalsecond_ = 0;
  additionalex_ = 0;
  additionalfirst_ = 0;
  additionallast_ = 0;
  peakmean_ = 0;
  peakslope_ = 0;
  peaknoise_ = 0;
  peaksecond_ = 0;
  peakex_ = 0;
  response_ = 0;
  uncorrectedresponse_ = 0;
  callast_ = 0;
  calfirst_ = 0;
  samplefirst_ = 0;
  samplelast_ = 0;
  postfirst_ = 0;
  postlast_ = 0;
  peakfirst_ = 0;
  peaklast_ = 0;
  calwindowmovedback_ = 0;
  output1_ = 0;
  output2_ = 0;
  output3_ = 0;
  output4_ = 0;
  output5_ = 0;
  output6_ = 0;
  output7_ = 0;
  output8_ = 0;
  output9_ = 0;
  output10_ = 0;
  output11_ = 0;
  output12_ = 0;
  output13_ = 0;
  output14_ = 0;
  output15_ = 0;
  output16_ = 0;
  output17_ = 0;
  output18_ = 0;
  output19_ = 0;
  output20_ = 0;
}

Levels::~Levels() {
  // @@protoc_insertion_point(destructor:to.Levels)
  SharedDtor();
}

void Levels::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Levels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Levels& Levels::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_levels_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_levels_2eproto();
#endif
  return *default_instance_;
}

Levels* Levels::default_instance_ = NULL;

Levels* Levels::New(::google::protobuf::Arena* arena) const {
  Levels* n = new Levels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Levels::Clear() {
// @@protoc_insertion_point(message_clear_start:to.Levels)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Levels, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Levels*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(calmean_, samplenoise_);
  ZR_(samplesecond_, additionalmean_);
  ZR_(additionalslope_, peakslope_);
  ZR_(peaknoise_, samplefirst_);
  ZR_(samplelast_, output2_);
  calwindowmovedback_ = 0;
  ZR_(output3_, output10_);
  ZR_(output11_, output18_);
  ZR_(output19_, output20_);

#undef ZR_HELPER_
#undef ZR_

}

bool Levels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:to.Levels)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double calMean = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calmean_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_calSlope;
        break;
      }

      // optional double calSlope = 2;
      case 2: {
        if (tag == 17) {
         parse_calSlope:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calslope_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_calNoise;
        break;
      }

      // optional double calNoise = 3;
      case 3: {
        if (tag == 25) {
         parse_calNoise:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calnoise_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_calSecond;
        break;
      }

      // optional double calSecond = 4;
      case 4: {
        if (tag == 33) {
         parse_calSecond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calsecond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_calEx;
        break;
      }

      // optional double calEx = 5;
      case 5: {
        if (tag == 41) {
         parse_calEx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_sampleMean;
        break;
      }

      // optional double sampleMean = 6;
      case 6: {
        if (tag == 49) {
         parse_sampleMean:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplemean_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_sampleSlope;
        break;
      }

      // optional double sampleSlope = 7;
      case 7: {
        if (tag == 57) {
         parse_sampleSlope:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sampleslope_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_sampleNoise;
        break;
      }

      // optional double sampleNoise = 8;
      case 8: {
        if (tag == 65) {
         parse_sampleNoise:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplenoise_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_sampleSecond;
        break;
      }

      // optional double sampleSecond = 9;
      case 9: {
        if (tag == 73) {
         parse_sampleSecond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplesecond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_sampleEx;
        break;
      }

      // optional double sampleEx = 10;
      case 10: {
        if (tag == 81) {
         parse_sampleEx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sampleex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_postMean;
        break;
      }

      // optional double postMean = 11;
      case 11: {
        if (tag == 89) {
         parse_postMean:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postmean_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_postSlope;
        break;
      }

      // optional double postSlope = 12;
      case 12: {
        if (tag == 97) {
         parse_postSlope:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postslope_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_postNoise;
        break;
      }

      // optional double postNoise = 13;
      case 13: {
        if (tag == 105) {
         parse_postNoise:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postnoise_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_postSecond;
        break;
      }

      // optional double postSecond = 14;
      case 14: {
        if (tag == 113) {
         parse_postSecond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postsecond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_postEx;
        break;
      }

      // optional double postEx = 15;
      case 15: {
        if (tag == 121) {
         parse_postEx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_additionalMean;
        break;
      }

      // optional double additionalMean = 16;
      case 16: {
        if (tag == 129) {
         parse_additionalMean:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &additionalmean_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_additionalSlope;
        break;
      }

      // optional double additionalSlope = 17;
      case 17: {
        if (tag == 137) {
         parse_additionalSlope:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &additionalslope_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_additionalNoise;
        break;
      }

      // optional double additionalNoise = 18;
      case 18: {
        if (tag == 145) {
         parse_additionalNoise:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &additionalnoise_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_additionalSecond;
        break;
      }

      // optional double additionalSecond = 19;
      case 19: {
        if (tag == 153) {
         parse_additionalSecond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &additionalsecond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_additionalEx;
        break;
      }

      // optional double additionalEx = 20;
      case 20: {
        if (tag == 161) {
         parse_additionalEx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &additionalex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_additionalFirst;
        break;
      }

      // optional int32 additionalFirst = 21;
      case 21: {
        if (tag == 168) {
         parse_additionalFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &additionalfirst_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_additionalLast;
        break;
      }

      // optional int32 additionalLast = 22;
      case 22: {
        if (tag == 176) {
         parse_additionalLast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &additionallast_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_peakMean;
        break;
      }

      // optional double peakMean = 23;
      case 23: {
        if (tag == 185) {
         parse_peakMean:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peakmean_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_peakSlope;
        break;
      }

      // optional double peakSlope = 24;
      case 24: {
        if (tag == 193) {
         parse_peakSlope:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peakslope_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(201)) goto parse_peakNoise;
        break;
      }

      // optional double peakNoise = 25;
      case 25: {
        if (tag == 201) {
         parse_peakNoise:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peaknoise_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(209)) goto parse_peakSecond;
        break;
      }

      // optional double peakSecond = 26;
      case 26: {
        if (tag == 209) {
         parse_peakSecond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peaksecond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(217)) goto parse_peakEx;
        break;
      }

      // optional double peakEx = 27;
      case 27: {
        if (tag == 217) {
         parse_peakEx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peakex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(225)) goto parse_response;
        break;
      }

      // optional double response = 28;
      case 28: {
        if (tag == 225) {
         parse_response:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &response_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(233)) goto parse_uncorrectedResponse;
        break;
      }

      // optional double uncorrectedResponse = 29;
      case 29: {
        if (tag == 233) {
         parse_uncorrectedResponse:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &uncorrectedresponse_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_calLast;
        break;
      }

      // optional int32 calLast = 30;
      case 30: {
        if (tag == 240) {
         parse_calLast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &callast_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_calFirst;
        break;
      }

      // optional int32 calFirst = 31;
      case 31: {
        if (tag == 248) {
         parse_calFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &calfirst_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_sampleFirst;
        break;
      }

      // optional int32 sampleFirst = 32;
      case 32: {
        if (tag == 256) {
         parse_sampleFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &samplefirst_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_sampleLast;
        break;
      }

      // optional int32 sampleLast = 33;
      case 33: {
        if (tag == 264) {
         parse_sampleLast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &samplelast_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_postFirst;
        break;
      }

      // optional int32 postFirst = 34;
      case 34: {
        if (tag == 272) {
         parse_postFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &postfirst_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_postLast;
        break;
      }

      // optional int32 postLast = 35;
      case 35: {
        if (tag == 280) {
         parse_postLast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &postlast_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_peakFirst;
        break;
      }

      // optional int32 peakFirst = 36;
      case 36: {
        if (tag == 288) {
         parse_peakFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peakfirst_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(296)) goto parse_peakLast;
        break;
      }

      // optional int32 peakLast = 37;
      case 37: {
        if (tag == 296) {
         parse_peakLast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peaklast_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(304)) goto parse_calWindowMovedBack;
        break;
      }

      // optional int32 calWindowMovedBack = 38;
      case 38: {
        if (tag == 304) {
         parse_calWindowMovedBack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &calwindowmovedback_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(313)) goto parse_output1;
        break;
      }

      // optional double output1 = 39;
      case 39: {
        if (tag == 313) {
         parse_output1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(321)) goto parse_output2;
        break;
      }

      // optional double output2 = 40;
      case 40: {
        if (tag == 321) {
         parse_output2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(329)) goto parse_output3;
        break;
      }

      // optional double output3 = 41;
      case 41: {
        if (tag == 329) {
         parse_output3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(337)) goto parse_output4;
        break;
      }

      // optional double output4 = 42;
      case 42: {
        if (tag == 337) {
         parse_output4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(345)) goto parse_output5;
        break;
      }

      // optional double output5 = 43;
      case 43: {
        if (tag == 345) {
         parse_output5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(353)) goto parse_output6;
        break;
      }

      // optional double output6 = 44;
      case 44: {
        if (tag == 353) {
         parse_output6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output6_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(361)) goto parse_output7;
        break;
      }

      // optional double output7 = 45;
      case 45: {
        if (tag == 361) {
         parse_output7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output7_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(369)) goto parse_output8;
        break;
      }

      // optional double output8 = 46;
      case 46: {
        if (tag == 369) {
         parse_output8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output8_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(377)) goto parse_output9;
        break;
      }

      // optional double output9 = 47;
      case 47: {
        if (tag == 377) {
         parse_output9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output9_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(385)) goto parse_output10;
        break;
      }

      // optional double output10 = 48;
      case 48: {
        if (tag == 385) {
         parse_output10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output10_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(393)) goto parse_output11;
        break;
      }

      // optional double output11 = 49;
      case 49: {
        if (tag == 393) {
         parse_output11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output11_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(401)) goto parse_output12;
        break;
      }

      // optional double output12 = 50;
      case 50: {
        if (tag == 401) {
         parse_output12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output12_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(409)) goto parse_output13;
        break;
      }

      // optional double output13 = 51;
      case 51: {
        if (tag == 409) {
         parse_output13:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output13_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(417)) goto parse_output14;
        break;
      }

      // optional double output14 = 52;
      case 52: {
        if (tag == 417) {
         parse_output14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output14_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(425)) goto parse_output15;
        break;
      }

      // optional double output15 = 53;
      case 53: {
        if (tag == 425) {
         parse_output15:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output15_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(433)) goto parse_output16;
        break;
      }

      // optional double output16 = 54;
      case 54: {
        if (tag == 433) {
         parse_output16:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output16_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(441)) goto parse_output17;
        break;
      }

      // optional double output17 = 55;
      case 55: {
        if (tag == 441) {
         parse_output17:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output17_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(449)) goto parse_output18;
        break;
      }

      // optional double output18 = 56;
      case 56: {
        if (tag == 449) {
         parse_output18:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output18_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(457)) goto parse_output19;
        break;
      }

      // optional double output19 = 57;
      case 57: {
        if (tag == 457) {
         parse_output19:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output19_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(465)) goto parse_output20;
        break;
      }

      // optional double output20 = 58;
      case 58: {
        if (tag == 465) {
         parse_output20:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &output20_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:to.Levels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:to.Levels)
  return false;
#undef DO_
}

void Levels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:to.Levels)
  // optional double calMean = 1;
  if (this->calmean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->calmean(), output);
  }

  // optional double calSlope = 2;
  if (this->calslope() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->calslope(), output);
  }

  // optional double calNoise = 3;
  if (this->calnoise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->calnoise(), output);
  }

  // optional double calSecond = 4;
  if (this->calsecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->calsecond(), output);
  }

  // optional double calEx = 5;
  if (this->calex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->calex(), output);
  }

  // optional double sampleMean = 6;
  if (this->samplemean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->samplemean(), output);
  }

  // optional double sampleSlope = 7;
  if (this->sampleslope() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->sampleslope(), output);
  }

  // optional double sampleNoise = 8;
  if (this->samplenoise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->samplenoise(), output);
  }

  // optional double sampleSecond = 9;
  if (this->samplesecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->samplesecond(), output);
  }

  // optional double sampleEx = 10;
  if (this->sampleex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->sampleex(), output);
  }

  // optional double postMean = 11;
  if (this->postmean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->postmean(), output);
  }

  // optional double postSlope = 12;
  if (this->postslope() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->postslope(), output);
  }

  // optional double postNoise = 13;
  if (this->postnoise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->postnoise(), output);
  }

  // optional double postSecond = 14;
  if (this->postsecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->postsecond(), output);
  }

  // optional double postEx = 15;
  if (this->postex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->postex(), output);
  }

  // optional double additionalMean = 16;
  if (this->additionalmean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->additionalmean(), output);
  }

  // optional double additionalSlope = 17;
  if (this->additionalslope() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->additionalslope(), output);
  }

  // optional double additionalNoise = 18;
  if (this->additionalnoise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->additionalnoise(), output);
  }

  // optional double additionalSecond = 19;
  if (this->additionalsecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->additionalsecond(), output);
  }

  // optional double additionalEx = 20;
  if (this->additionalex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->additionalex(), output);
  }

  // optional int32 additionalFirst = 21;
  if (this->additionalfirst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->additionalfirst(), output);
  }

  // optional int32 additionalLast = 22;
  if (this->additionallast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->additionallast(), output);
  }

  // optional double peakMean = 23;
  if (this->peakmean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->peakmean(), output);
  }

  // optional double peakSlope = 24;
  if (this->peakslope() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->peakslope(), output);
  }

  // optional double peakNoise = 25;
  if (this->peaknoise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->peaknoise(), output);
  }

  // optional double peakSecond = 26;
  if (this->peaksecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->peaksecond(), output);
  }

  // optional double peakEx = 27;
  if (this->peakex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->peakex(), output);
  }

  // optional double response = 28;
  if (this->response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(28, this->response(), output);
  }

  // optional double uncorrectedResponse = 29;
  if (this->uncorrectedresponse() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->uncorrectedresponse(), output);
  }

  // optional int32 calLast = 30;
  if (this->callast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->callast(), output);
  }

  // optional int32 calFirst = 31;
  if (this->calfirst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->calfirst(), output);
  }

  // optional int32 sampleFirst = 32;
  if (this->samplefirst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->samplefirst(), output);
  }

  // optional int32 sampleLast = 33;
  if (this->samplelast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->samplelast(), output);
  }

  // optional int32 postFirst = 34;
  if (this->postfirst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->postfirst(), output);
  }

  // optional int32 postLast = 35;
  if (this->postlast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->postlast(), output);
  }

  // optional int32 peakFirst = 36;
  if (this->peakfirst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->peakfirst(), output);
  }

  // optional int32 peakLast = 37;
  if (this->peaklast() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(37, this->peaklast(), output);
  }

  // optional int32 calWindowMovedBack = 38;
  if (this->calwindowmovedback() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->calwindowmovedback(), output);
  }

  // optional double output1 = 39;
  if (this->output1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(39, this->output1(), output);
  }

  // optional double output2 = 40;
  if (this->output2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(40, this->output2(), output);
  }

  // optional double output3 = 41;
  if (this->output3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(41, this->output3(), output);
  }

  // optional double output4 = 42;
  if (this->output4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(42, this->output4(), output);
  }

  // optional double output5 = 43;
  if (this->output5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(43, this->output5(), output);
  }

  // optional double output6 = 44;
  if (this->output6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(44, this->output6(), output);
  }

  // optional double output7 = 45;
  if (this->output7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(45, this->output7(), output);
  }

  // optional double output8 = 46;
  if (this->output8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(46, this->output8(), output);
  }

  // optional double output9 = 47;
  if (this->output9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(47, this->output9(), output);
  }

  // optional double output10 = 48;
  if (this->output10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(48, this->output10(), output);
  }

  // optional double output11 = 49;
  if (this->output11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(49, this->output11(), output);
  }

  // optional double output12 = 50;
  if (this->output12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(50, this->output12(), output);
  }

  // optional double output13 = 51;
  if (this->output13() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(51, this->output13(), output);
  }

  // optional double output14 = 52;
  if (this->output14() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(52, this->output14(), output);
  }

  // optional double output15 = 53;
  if (this->output15() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(53, this->output15(), output);
  }

  // optional double output16 = 54;
  if (this->output16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(54, this->output16(), output);
  }

  // optional double output17 = 55;
  if (this->output17() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(55, this->output17(), output);
  }

  // optional double output18 = 56;
  if (this->output18() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(56, this->output18(), output);
  }

  // optional double output19 = 57;
  if (this->output19() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(57, this->output19(), output);
  }

  // optional double output20 = 58;
  if (this->output20() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(58, this->output20(), output);
  }

  // @@protoc_insertion_point(serialize_end:to.Levels)
}

int Levels::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:to.Levels)
  int total_size = 0;

  // optional double calMean = 1;
  if (this->calmean() != 0) {
    total_size += 1 + 8;
  }

  // optional double calSlope = 2;
  if (this->calslope() != 0) {
    total_size += 1 + 8;
  }

  // optional double calNoise = 3;
  if (this->calnoise() != 0) {
    total_size += 1 + 8;
  }

  // optional double calSecond = 4;
  if (this->calsecond() != 0) {
    total_size += 1 + 8;
  }

  // optional double calEx = 5;
  if (this->calex() != 0) {
    total_size += 1 + 8;
  }

  // optional double sampleMean = 6;
  if (this->samplemean() != 0) {
    total_size += 1 + 8;
  }

  // optional double sampleSlope = 7;
  if (this->sampleslope() != 0) {
    total_size += 1 + 8;
  }

  // optional double sampleNoise = 8;
  if (this->samplenoise() != 0) {
    total_size += 1 + 8;
  }

  // optional double sampleSecond = 9;
  if (this->samplesecond() != 0) {
    total_size += 1 + 8;
  }

  // optional double sampleEx = 10;
  if (this->sampleex() != 0) {
    total_size += 1 + 8;
  }

  // optional double postMean = 11;
  if (this->postmean() != 0) {
    total_size += 1 + 8;
  }

  // optional double postSlope = 12;
  if (this->postslope() != 0) {
    total_size += 1 + 8;
  }

  // optional double postNoise = 13;
  if (this->postnoise() != 0) {
    total_size += 1 + 8;
  }

  // optional double postSecond = 14;
  if (this->postsecond() != 0) {
    total_size += 1 + 8;
  }

  // optional double postEx = 15;
  if (this->postex() != 0) {
    total_size += 1 + 8;
  }

  // optional double additionalMean = 16;
  if (this->additionalmean() != 0) {
    total_size += 2 + 8;
  }

  // optional double additionalSlope = 17;
  if (this->additionalslope() != 0) {
    total_size += 2 + 8;
  }

  // optional double additionalNoise = 18;
  if (this->additionalnoise() != 0) {
    total_size += 2 + 8;
  }

  // optional double additionalSecond = 19;
  if (this->additionalsecond() != 0) {
    total_size += 2 + 8;
  }

  // optional double additionalEx = 20;
  if (this->additionalex() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 additionalFirst = 21;
  if (this->additionalfirst() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->additionalfirst());
  }

  // optional int32 additionalLast = 22;
  if (this->additionallast() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->additionallast());
  }

  // optional double peakMean = 23;
  if (this->peakmean() != 0) {
    total_size += 2 + 8;
  }

  // optional double peakSlope = 24;
  if (this->peakslope() != 0) {
    total_size += 2 + 8;
  }

  // optional double peakNoise = 25;
  if (this->peaknoise() != 0) {
    total_size += 2 + 8;
  }

  // optional double peakSecond = 26;
  if (this->peaksecond() != 0) {
    total_size += 2 + 8;
  }

  // optional double peakEx = 27;
  if (this->peakex() != 0) {
    total_size += 2 + 8;
  }

  // optional double response = 28;
  if (this->response() != 0) {
    total_size += 2 + 8;
  }

  // optional double uncorrectedResponse = 29;
  if (this->uncorrectedresponse() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 calLast = 30;
  if (this->callast() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->callast());
  }

  // optional int32 calFirst = 31;
  if (this->calfirst() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->calfirst());
  }

  // optional int32 sampleFirst = 32;
  if (this->samplefirst() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->samplefirst());
  }

  // optional int32 sampleLast = 33;
  if (this->samplelast() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->samplelast());
  }

  // optional int32 postFirst = 34;
  if (this->postfirst() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->postfirst());
  }

  // optional int32 postLast = 35;
  if (this->postlast() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->postlast());
  }

  // optional int32 peakFirst = 36;
  if (this->peakfirst() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peakfirst());
  }

  // optional int32 peakLast = 37;
  if (this->peaklast() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->peaklast());
  }

  // optional int32 calWindowMovedBack = 38;
  if (this->calwindowmovedback() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->calwindowmovedback());
  }

  // optional double output1 = 39;
  if (this->output1() != 0) {
    total_size += 2 + 8;
  }

  // optional double output2 = 40;
  if (this->output2() != 0) {
    total_size += 2 + 8;
  }

  // optional double output3 = 41;
  if (this->output3() != 0) {
    total_size += 2 + 8;
  }

  // optional double output4 = 42;
  if (this->output4() != 0) {
    total_size += 2 + 8;
  }

  // optional double output5 = 43;
  if (this->output5() != 0) {
    total_size += 2 + 8;
  }

  // optional double output6 = 44;
  if (this->output6() != 0) {
    total_size += 2 + 8;
  }

  // optional double output7 = 45;
  if (this->output7() != 0) {
    total_size += 2 + 8;
  }

  // optional double output8 = 46;
  if (this->output8() != 0) {
    total_size += 2 + 8;
  }

  // optional double output9 = 47;
  if (this->output9() != 0) {
    total_size += 2 + 8;
  }

  // optional double output10 = 48;
  if (this->output10() != 0) {
    total_size += 2 + 8;
  }

  // optional double output11 = 49;
  if (this->output11() != 0) {
    total_size += 2 + 8;
  }

  // optional double output12 = 50;
  if (this->output12() != 0) {
    total_size += 2 + 8;
  }

  // optional double output13 = 51;
  if (this->output13() != 0) {
    total_size += 2 + 8;
  }

  // optional double output14 = 52;
  if (this->output14() != 0) {
    total_size += 2 + 8;
  }

  // optional double output15 = 53;
  if (this->output15() != 0) {
    total_size += 2 + 8;
  }

  // optional double output16 = 54;
  if (this->output16() != 0) {
    total_size += 2 + 8;
  }

  // optional double output17 = 55;
  if (this->output17() != 0) {
    total_size += 2 + 8;
  }

  // optional double output18 = 56;
  if (this->output18() != 0) {
    total_size += 2 + 8;
  }

  // optional double output19 = 57;
  if (this->output19() != 0) {
    total_size += 2 + 8;
  }

  // optional double output20 = 58;
  if (this->output20() != 0) {
    total_size += 2 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Levels::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Levels*>(&from));
}

void Levels::MergeFrom(const Levels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:to.Levels)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.calmean() != 0) {
    set_calmean(from.calmean());
  }
  if (from.calslope() != 0) {
    set_calslope(from.calslope());
  }
  if (from.calnoise() != 0) {
    set_calnoise(from.calnoise());
  }
  if (from.calsecond() != 0) {
    set_calsecond(from.calsecond());
  }
  if (from.calex() != 0) {
    set_calex(from.calex());
  }
  if (from.samplemean() != 0) {
    set_samplemean(from.samplemean());
  }
  if (from.sampleslope() != 0) {
    set_sampleslope(from.sampleslope());
  }
  if (from.samplenoise() != 0) {
    set_samplenoise(from.samplenoise());
  }
  if (from.samplesecond() != 0) {
    set_samplesecond(from.samplesecond());
  }
  if (from.sampleex() != 0) {
    set_sampleex(from.sampleex());
  }
  if (from.postmean() != 0) {
    set_postmean(from.postmean());
  }
  if (from.postslope() != 0) {
    set_postslope(from.postslope());
  }
  if (from.postnoise() != 0) {
    set_postnoise(from.postnoise());
  }
  if (from.postsecond() != 0) {
    set_postsecond(from.postsecond());
  }
  if (from.postex() != 0) {
    set_postex(from.postex());
  }
  if (from.additionalmean() != 0) {
    set_additionalmean(from.additionalmean());
  }
  if (from.additionalslope() != 0) {
    set_additionalslope(from.additionalslope());
  }
  if (from.additionalnoise() != 0) {
    set_additionalnoise(from.additionalnoise());
  }
  if (from.additionalsecond() != 0) {
    set_additionalsecond(from.additionalsecond());
  }
  if (from.additionalex() != 0) {
    set_additionalex(from.additionalex());
  }
  if (from.additionalfirst() != 0) {
    set_additionalfirst(from.additionalfirst());
  }
  if (from.additionallast() != 0) {
    set_additionallast(from.additionallast());
  }
  if (from.peakmean() != 0) {
    set_peakmean(from.peakmean());
  }
  if (from.peakslope() != 0) {
    set_peakslope(from.peakslope());
  }
  if (from.peaknoise() != 0) {
    set_peaknoise(from.peaknoise());
  }
  if (from.peaksecond() != 0) {
    set_peaksecond(from.peaksecond());
  }
  if (from.peakex() != 0) {
    set_peakex(from.peakex());
  }
  if (from.response() != 0) {
    set_response(from.response());
  }
  if (from.uncorrectedresponse() != 0) {
    set_uncorrectedresponse(from.uncorrectedresponse());
  }
  if (from.callast() != 0) {
    set_callast(from.callast());
  }
  if (from.calfirst() != 0) {
    set_calfirst(from.calfirst());
  }
  if (from.samplefirst() != 0) {
    set_samplefirst(from.samplefirst());
  }
  if (from.samplelast() != 0) {
    set_samplelast(from.samplelast());
  }
  if (from.postfirst() != 0) {
    set_postfirst(from.postfirst());
  }
  if (from.postlast() != 0) {
    set_postlast(from.postlast());
  }
  if (from.peakfirst() != 0) {
    set_peakfirst(from.peakfirst());
  }
  if (from.peaklast() != 0) {
    set_peaklast(from.peaklast());
  }
  if (from.calwindowmovedback() != 0) {
    set_calwindowmovedback(from.calwindowmovedback());
  }
  if (from.output1() != 0) {
    set_output1(from.output1());
  }
  if (from.output2() != 0) {
    set_output2(from.output2());
  }
  if (from.output3() != 0) {
    set_output3(from.output3());
  }
  if (from.output4() != 0) {
    set_output4(from.output4());
  }
  if (from.output5() != 0) {
    set_output5(from.output5());
  }
  if (from.output6() != 0) {
    set_output6(from.output6());
  }
  if (from.output7() != 0) {
    set_output7(from.output7());
  }
  if (from.output8() != 0) {
    set_output8(from.output8());
  }
  if (from.output9() != 0) {
    set_output9(from.output9());
  }
  if (from.output10() != 0) {
    set_output10(from.output10());
  }
  if (from.output11() != 0) {
    set_output11(from.output11());
  }
  if (from.output12() != 0) {
    set_output12(from.output12());
  }
  if (from.output13() != 0) {
    set_output13(from.output13());
  }
  if (from.output14() != 0) {
    set_output14(from.output14());
  }
  if (from.output15() != 0) {
    set_output15(from.output15());
  }
  if (from.output16() != 0) {
    set_output16(from.output16());
  }
  if (from.output17() != 0) {
    set_output17(from.output17());
  }
  if (from.output18() != 0) {
    set_output18(from.output18());
  }
  if (from.output19() != 0) {
    set_output19(from.output19());
  }
  if (from.output20() != 0) {
    set_output20(from.output20());
  }
}

void Levels::CopyFrom(const Levels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to.Levels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Levels::IsInitialized() const {

  return true;
}

void Levels::Swap(Levels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Levels::InternalSwap(Levels* other) {
  std::swap(calmean_, other->calmean_);
  std::swap(calslope_, other->calslope_);
  std::swap(calnoise_, other->calnoise_);
  std::swap(calsecond_, other->calsecond_);
  std::swap(calex_, other->calex_);
  std::swap(samplemean_, other->samplemean_);
  std::swap(sampleslope_, other->sampleslope_);
  std::swap(samplenoise_, other->samplenoise_);
  std::swap(samplesecond_, other->samplesecond_);
  std::swap(sampleex_, other->sampleex_);
  std::swap(postmean_, other->postmean_);
  std::swap(postslope_, other->postslope_);
  std::swap(postnoise_, other->postnoise_);
  std::swap(postsecond_, other->postsecond_);
  std::swap(postex_, other->postex_);
  std::swap(additionalmean_, other->additionalmean_);
  std::swap(additionalslope_, other->additionalslope_);
  std::swap(additionalnoise_, other->additionalnoise_);
  std::swap(additionalsecond_, other->additionalsecond_);
  std::swap(additionalex_, other->additionalex_);
  std::swap(additionalfirst_, other->additionalfirst_);
  std::swap(additionallast_, other->additionallast_);
  std::swap(peakmean_, other->peakmean_);
  std::swap(peakslope_, other->peakslope_);
  std::swap(peaknoise_, other->peaknoise_);
  std::swap(peaksecond_, other->peaksecond_);
  std::swap(peakex_, other->peakex_);
  std::swap(response_, other->response_);
  std::swap(uncorrectedresponse_, other->uncorrectedresponse_);
  std::swap(callast_, other->callast_);
  std::swap(calfirst_, other->calfirst_);
  std::swap(samplefirst_, other->samplefirst_);
  std::swap(samplelast_, other->samplelast_);
  std::swap(postfirst_, other->postfirst_);
  std::swap(postlast_, other->postlast_);
  std::swap(peakfirst_, other->peakfirst_);
  std::swap(peaklast_, other->peaklast_);
  std::swap(calwindowmovedback_, other->calwindowmovedback_);
  std::swap(output1_, other->output1_);
  std::swap(output2_, other->output2_);
  std::swap(output3_, other->output3_);
  std::swap(output4_, other->output4_);
  std::swap(output5_, other->output5_);
  std::swap(output6_, other->output6_);
  std::swap(output7_, other->output7_);
  std::swap(output8_, other->output8_);
  std::swap(output9_, other->output9_);
  std::swap(output10_, other->output10_);
  std::swap(output11_, other->output11_);
  std::swap(output12_, other->output12_);
  std::swap(output13_, other->output13_);
  std::swap(output14_, other->output14_);
  std::swap(output15_, other->output15_);
  std::swap(output16_, other->output16_);
  std::swap(output17_, other->output17_);
  std::swap(output18_, other->output18_);
  std::swap(output19_, other->output19_);
  std::swap(output20_, other->output20_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Levels::GetTypeName() const {
  return "to.Levels";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Levels

// optional double calMean = 1;
void Levels::clear_calmean() {
  calmean_ = 0;
}
 double Levels::calmean() const {
  // @@protoc_insertion_point(field_get:to.Levels.calMean)
  return calmean_;
}
 void Levels::set_calmean(double value) {
  
  calmean_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.calMean)
}

// optional double calSlope = 2;
void Levels::clear_calslope() {
  calslope_ = 0;
}
 double Levels::calslope() const {
  // @@protoc_insertion_point(field_get:to.Levels.calSlope)
  return calslope_;
}
 void Levels::set_calslope(double value) {
  
  calslope_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.calSlope)
}

// optional double calNoise = 3;
void Levels::clear_calnoise() {
  calnoise_ = 0;
}
 double Levels::calnoise() const {
  // @@protoc_insertion_point(field_get:to.Levels.calNoise)
  return calnoise_;
}
 void Levels::set_calnoise(double value) {
  
  calnoise_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.calNoise)
}

// optional double calSecond = 4;
void Levels::clear_calsecond() {
  calsecond_ = 0;
}
 double Levels::calsecond() const {
  // @@protoc_insertion_point(field_get:to.Levels.calSecond)
  return calsecond_;
}
 void Levels::set_calsecond(double value) {
  
  calsecond_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.calSecond)
}

// optional double calEx = 5;
void Levels::clear_calex() {
  calex_ = 0;
}
 double Levels::calex() const {
  // @@protoc_insertion_point(field_get:to.Levels.calEx)
  return calex_;
}
 void Levels::set_calex(double value) {
  
  calex_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.calEx)
}

// optional double sampleMean = 6;
void Levels::clear_samplemean() {
  samplemean_ = 0;
}
 double Levels::samplemean() const {
  // @@protoc_insertion_point(field_get:to.Levels.sampleMean)
  return samplemean_;
}
 void Levels::set_samplemean(double value) {
  
  samplemean_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.sampleMean)
}

// optional double sampleSlope = 7;
void Levels::clear_sampleslope() {
  sampleslope_ = 0;
}
 double Levels::sampleslope() const {
  // @@protoc_insertion_point(field_get:to.Levels.sampleSlope)
  return sampleslope_;
}
 void Levels::set_sampleslope(double value) {
  
  sampleslope_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.sampleSlope)
}

// optional double sampleNoise = 8;
void Levels::clear_samplenoise() {
  samplenoise_ = 0;
}
 double Levels::samplenoise() const {
  // @@protoc_insertion_point(field_get:to.Levels.sampleNoise)
  return samplenoise_;
}
 void Levels::set_samplenoise(double value) {
  
  samplenoise_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.sampleNoise)
}

// optional double sampleSecond = 9;
void Levels::clear_samplesecond() {
  samplesecond_ = 0;
}
 double Levels::samplesecond() const {
  // @@protoc_insertion_point(field_get:to.Levels.sampleSecond)
  return samplesecond_;
}
 void Levels::set_samplesecond(double value) {
  
  samplesecond_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.sampleSecond)
}

// optional double sampleEx = 10;
void Levels::clear_sampleex() {
  sampleex_ = 0;
}
 double Levels::sampleex() const {
  // @@protoc_insertion_point(field_get:to.Levels.sampleEx)
  return sampleex_;
}
 void Levels::set_sampleex(double value) {
  
  sampleex_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.sampleEx)
}

// optional double postMean = 11;
void Levels::clear_postmean() {
  postmean_ = 0;
}
 double Levels::postmean() const {
  // @@protoc_insertion_point(field_get:to.Levels.postMean)
  return postmean_;
}
 void Levels::set_postmean(double value) {
  
  postmean_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.postMean)
}

// optional double postSlope = 12;
void Levels::clear_postslope() {
  postslope_ = 0;
}
 double Levels::postslope() const {
  // @@protoc_insertion_point(field_get:to.Levels.postSlope)
  return postslope_;
}
 void Levels::set_postslope(double value) {
  
  postslope_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.postSlope)
}

// optional double postNoise = 13;
void Levels::clear_postnoise() {
  postnoise_ = 0;
}
 double Levels::postnoise() const {
  // @@protoc_insertion_point(field_get:to.Levels.postNoise)
  return postnoise_;
}
 void Levels::set_postnoise(double value) {
  
  postnoise_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.postNoise)
}

// optional double postSecond = 14;
void Levels::clear_postsecond() {
  postsecond_ = 0;
}
 double Levels::postsecond() const {
  // @@protoc_insertion_point(field_get:to.Levels.postSecond)
  return postsecond_;
}
 void Levels::set_postsecond(double value) {
  
  postsecond_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.postSecond)
}

// optional double postEx = 15;
void Levels::clear_postex() {
  postex_ = 0;
}
 double Levels::postex() const {
  // @@protoc_insertion_point(field_get:to.Levels.postEx)
  return postex_;
}
 void Levels::set_postex(double value) {
  
  postex_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.postEx)
}

// optional double additionalMean = 16;
void Levels::clear_additionalmean() {
  additionalmean_ = 0;
}
 double Levels::additionalmean() const {
  // @@protoc_insertion_point(field_get:to.Levels.additionalMean)
  return additionalmean_;
}
 void Levels::set_additionalmean(double value) {
  
  additionalmean_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.additionalMean)
}

// optional double additionalSlope = 17;
void Levels::clear_additionalslope() {
  additionalslope_ = 0;
}
 double Levels::additionalslope() const {
  // @@protoc_insertion_point(field_get:to.Levels.additionalSlope)
  return additionalslope_;
}
 void Levels::set_additionalslope(double value) {
  
  additionalslope_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.additionalSlope)
}

// optional double additionalNoise = 18;
void Levels::clear_additionalnoise() {
  additionalnoise_ = 0;
}
 double Levels::additionalnoise() const {
  // @@protoc_insertion_point(field_get:to.Levels.additionalNoise)
  return additionalnoise_;
}
 void Levels::set_additionalnoise(double value) {
  
  additionalnoise_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.additionalNoise)
}

// optional double additionalSecond = 19;
void Levels::clear_additionalsecond() {
  additionalsecond_ = 0;
}
 double Levels::additionalsecond() const {
  // @@protoc_insertion_point(field_get:to.Levels.additionalSecond)
  return additionalsecond_;
}
 void Levels::set_additionalsecond(double value) {
  
  additionalsecond_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.additionalSecond)
}

// optional double additionalEx = 20;
void Levels::clear_additionalex() {
  additionalex_ = 0;
}
 double Levels::additionalex() const {
  // @@protoc_insertion_point(field_get:to.Levels.additionalEx)
  return additionalex_;
}
 void Levels::set_additionalex(double value) {
  
  additionalex_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.additionalEx)
}

// optional int32 additionalFirst = 21;
void Levels::clear_additionalfirst() {
  additionalfirst_ = 0;
}
 ::google::protobuf::int32 Levels::additionalfirst() const {
  // @@protoc_insertion_point(field_get:to.Levels.additionalFirst)
  return additionalfirst_;
}
 void Levels::set_additionalfirst(::google::protobuf::int32 value) {
  
  additionalfirst_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.additionalFirst)
}

// optional int32 additionalLast = 22;
void Levels::clear_additionallast() {
  additionallast_ = 0;
}
 ::google::protobuf::int32 Levels::additionallast() const {
  // @@protoc_insertion_point(field_get:to.Levels.additionalLast)
  return additionallast_;
}
 void Levels::set_additionallast(::google::protobuf::int32 value) {
  
  additionallast_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.additionalLast)
}

// optional double peakMean = 23;
void Levels::clear_peakmean() {
  peakmean_ = 0;
}
 double Levels::peakmean() const {
  // @@protoc_insertion_point(field_get:to.Levels.peakMean)
  return peakmean_;
}
 void Levels::set_peakmean(double value) {
  
  peakmean_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.peakMean)
}

// optional double peakSlope = 24;
void Levels::clear_peakslope() {
  peakslope_ = 0;
}
 double Levels::peakslope() const {
  // @@protoc_insertion_point(field_get:to.Levels.peakSlope)
  return peakslope_;
}
 void Levels::set_peakslope(double value) {
  
  peakslope_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.peakSlope)
}

// optional double peakNoise = 25;
void Levels::clear_peaknoise() {
  peaknoise_ = 0;
}
 double Levels::peaknoise() const {
  // @@protoc_insertion_point(field_get:to.Levels.peakNoise)
  return peaknoise_;
}
 void Levels::set_peaknoise(double value) {
  
  peaknoise_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.peakNoise)
}

// optional double peakSecond = 26;
void Levels::clear_peaksecond() {
  peaksecond_ = 0;
}
 double Levels::peaksecond() const {
  // @@protoc_insertion_point(field_get:to.Levels.peakSecond)
  return peaksecond_;
}
 void Levels::set_peaksecond(double value) {
  
  peaksecond_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.peakSecond)
}

// optional double peakEx = 27;
void Levels::clear_peakex() {
  peakex_ = 0;
}
 double Levels::peakex() const {
  // @@protoc_insertion_point(field_get:to.Levels.peakEx)
  return peakex_;
}
 void Levels::set_peakex(double value) {
  
  peakex_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.peakEx)
}

// optional double response = 28;
void Levels::clear_response() {
  response_ = 0;
}
 double Levels::response() const {
  // @@protoc_insertion_point(field_get:to.Levels.response)
  return response_;
}
 void Levels::set_response(double value) {
  
  response_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.response)
}

// optional double uncorrectedResponse = 29;
void Levels::clear_uncorrectedresponse() {
  uncorrectedresponse_ = 0;
}
 double Levels::uncorrectedresponse() const {
  // @@protoc_insertion_point(field_get:to.Levels.uncorrectedResponse)
  return uncorrectedresponse_;
}
 void Levels::set_uncorrectedresponse(double value) {
  
  uncorrectedresponse_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.uncorrectedResponse)
}

// optional int32 calLast = 30;
void Levels::clear_callast() {
  callast_ = 0;
}
 ::google::protobuf::int32 Levels::callast() const {
  // @@protoc_insertion_point(field_get:to.Levels.calLast)
  return callast_;
}
 void Levels::set_callast(::google::protobuf::int32 value) {
  
  callast_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.calLast)
}

// optional int32 calFirst = 31;
void Levels::clear_calfirst() {
  calfirst_ = 0;
}
 ::google::protobuf::int32 Levels::calfirst() const {
  // @@protoc_insertion_point(field_get:to.Levels.calFirst)
  return calfirst_;
}
 void Levels::set_calfirst(::google::protobuf::int32 value) {
  
  calfirst_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.calFirst)
}

// optional int32 sampleFirst = 32;
void Levels::clear_samplefirst() {
  samplefirst_ = 0;
}
 ::google::protobuf::int32 Levels::samplefirst() const {
  // @@protoc_insertion_point(field_get:to.Levels.sampleFirst)
  return samplefirst_;
}
 void Levels::set_samplefirst(::google::protobuf::int32 value) {
  
  samplefirst_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.sampleFirst)
}

// optional int32 sampleLast = 33;
void Levels::clear_samplelast() {
  samplelast_ = 0;
}
 ::google::protobuf::int32 Levels::samplelast() const {
  // @@protoc_insertion_point(field_get:to.Levels.sampleLast)
  return samplelast_;
}
 void Levels::set_samplelast(::google::protobuf::int32 value) {
  
  samplelast_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.sampleLast)
}

// optional int32 postFirst = 34;
void Levels::clear_postfirst() {
  postfirst_ = 0;
}
 ::google::protobuf::int32 Levels::postfirst() const {
  // @@protoc_insertion_point(field_get:to.Levels.postFirst)
  return postfirst_;
}
 void Levels::set_postfirst(::google::protobuf::int32 value) {
  
  postfirst_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.postFirst)
}

// optional int32 postLast = 35;
void Levels::clear_postlast() {
  postlast_ = 0;
}
 ::google::protobuf::int32 Levels::postlast() const {
  // @@protoc_insertion_point(field_get:to.Levels.postLast)
  return postlast_;
}
 void Levels::set_postlast(::google::protobuf::int32 value) {
  
  postlast_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.postLast)
}

// optional int32 peakFirst = 36;
void Levels::clear_peakfirst() {
  peakfirst_ = 0;
}
 ::google::protobuf::int32 Levels::peakfirst() const {
  // @@protoc_insertion_point(field_get:to.Levels.peakFirst)
  return peakfirst_;
}
 void Levels::set_peakfirst(::google::protobuf::int32 value) {
  
  peakfirst_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.peakFirst)
}

// optional int32 peakLast = 37;
void Levels::clear_peaklast() {
  peaklast_ = 0;
}
 ::google::protobuf::int32 Levels::peaklast() const {
  // @@protoc_insertion_point(field_get:to.Levels.peakLast)
  return peaklast_;
}
 void Levels::set_peaklast(::google::protobuf::int32 value) {
  
  peaklast_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.peakLast)
}

// optional int32 calWindowMovedBack = 38;
void Levels::clear_calwindowmovedback() {
  calwindowmovedback_ = 0;
}
 ::google::protobuf::int32 Levels::calwindowmovedback() const {
  // @@protoc_insertion_point(field_get:to.Levels.calWindowMovedBack)
  return calwindowmovedback_;
}
 void Levels::set_calwindowmovedback(::google::protobuf::int32 value) {
  
  calwindowmovedback_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.calWindowMovedBack)
}

// optional double output1 = 39;
void Levels::clear_output1() {
  output1_ = 0;
}
 double Levels::output1() const {
  // @@protoc_insertion_point(field_get:to.Levels.output1)
  return output1_;
}
 void Levels::set_output1(double value) {
  
  output1_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output1)
}

// optional double output2 = 40;
void Levels::clear_output2() {
  output2_ = 0;
}
 double Levels::output2() const {
  // @@protoc_insertion_point(field_get:to.Levels.output2)
  return output2_;
}
 void Levels::set_output2(double value) {
  
  output2_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output2)
}

// optional double output3 = 41;
void Levels::clear_output3() {
  output3_ = 0;
}
 double Levels::output3() const {
  // @@protoc_insertion_point(field_get:to.Levels.output3)
  return output3_;
}
 void Levels::set_output3(double value) {
  
  output3_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output3)
}

// optional double output4 = 42;
void Levels::clear_output4() {
  output4_ = 0;
}
 double Levels::output4() const {
  // @@protoc_insertion_point(field_get:to.Levels.output4)
  return output4_;
}
 void Levels::set_output4(double value) {
  
  output4_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output4)
}

// optional double output5 = 43;
void Levels::clear_output5() {
  output5_ = 0;
}
 double Levels::output5() const {
  // @@protoc_insertion_point(field_get:to.Levels.output5)
  return output5_;
}
 void Levels::set_output5(double value) {
  
  output5_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output5)
}

// optional double output6 = 44;
void Levels::clear_output6() {
  output6_ = 0;
}
 double Levels::output6() const {
  // @@protoc_insertion_point(field_get:to.Levels.output6)
  return output6_;
}
 void Levels::set_output6(double value) {
  
  output6_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output6)
}

// optional double output7 = 45;
void Levels::clear_output7() {
  output7_ = 0;
}
 double Levels::output7() const {
  // @@protoc_insertion_point(field_get:to.Levels.output7)
  return output7_;
}
 void Levels::set_output7(double value) {
  
  output7_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output7)
}

// optional double output8 = 46;
void Levels::clear_output8() {
  output8_ = 0;
}
 double Levels::output8() const {
  // @@protoc_insertion_point(field_get:to.Levels.output8)
  return output8_;
}
 void Levels::set_output8(double value) {
  
  output8_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output8)
}

// optional double output9 = 47;
void Levels::clear_output9() {
  output9_ = 0;
}
 double Levels::output9() const {
  // @@protoc_insertion_point(field_get:to.Levels.output9)
  return output9_;
}
 void Levels::set_output9(double value) {
  
  output9_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output9)
}

// optional double output10 = 48;
void Levels::clear_output10() {
  output10_ = 0;
}
 double Levels::output10() const {
  // @@protoc_insertion_point(field_get:to.Levels.output10)
  return output10_;
}
 void Levels::set_output10(double value) {
  
  output10_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output10)
}

// optional double output11 = 49;
void Levels::clear_output11() {
  output11_ = 0;
}
 double Levels::output11() const {
  // @@protoc_insertion_point(field_get:to.Levels.output11)
  return output11_;
}
 void Levels::set_output11(double value) {
  
  output11_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output11)
}

// optional double output12 = 50;
void Levels::clear_output12() {
  output12_ = 0;
}
 double Levels::output12() const {
  // @@protoc_insertion_point(field_get:to.Levels.output12)
  return output12_;
}
 void Levels::set_output12(double value) {
  
  output12_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output12)
}

// optional double output13 = 51;
void Levels::clear_output13() {
  output13_ = 0;
}
 double Levels::output13() const {
  // @@protoc_insertion_point(field_get:to.Levels.output13)
  return output13_;
}
 void Levels::set_output13(double value) {
  
  output13_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output13)
}

// optional double output14 = 52;
void Levels::clear_output14() {
  output14_ = 0;
}
 double Levels::output14() const {
  // @@protoc_insertion_point(field_get:to.Levels.output14)
  return output14_;
}
 void Levels::set_output14(double value) {
  
  output14_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output14)
}

// optional double output15 = 53;
void Levels::clear_output15() {
  output15_ = 0;
}
 double Levels::output15() const {
  // @@protoc_insertion_point(field_get:to.Levels.output15)
  return output15_;
}
 void Levels::set_output15(double value) {
  
  output15_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output15)
}

// optional double output16 = 54;
void Levels::clear_output16() {
  output16_ = 0;
}
 double Levels::output16() const {
  // @@protoc_insertion_point(field_get:to.Levels.output16)
  return output16_;
}
 void Levels::set_output16(double value) {
  
  output16_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output16)
}

// optional double output17 = 55;
void Levels::clear_output17() {
  output17_ = 0;
}
 double Levels::output17() const {
  // @@protoc_insertion_point(field_get:to.Levels.output17)
  return output17_;
}
 void Levels::set_output17(double value) {
  
  output17_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output17)
}

// optional double output18 = 56;
void Levels::clear_output18() {
  output18_ = 0;
}
 double Levels::output18() const {
  // @@protoc_insertion_point(field_get:to.Levels.output18)
  return output18_;
}
 void Levels::set_output18(double value) {
  
  output18_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output18)
}

// optional double output19 = 57;
void Levels::clear_output19() {
  output19_ = 0;
}
 double Levels::output19() const {
  // @@protoc_insertion_point(field_get:to.Levels.output19)
  return output19_;
}
 void Levels::set_output19(double value) {
  
  output19_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output19)
}

// optional double output20 = 58;
void Levels::clear_output20() {
  output20_ = 0;
}
 double Levels::output20() const {
  // @@protoc_insertion_point(field_get:to.Levels.output20)
  return output20_;
}
 void Levels::set_output20(double value) {
  
  output20_ = value;
  // @@protoc_insertion_point(field_set:to.Levels.output20)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace to

// @@protoc_insertion_point(global_scope)
