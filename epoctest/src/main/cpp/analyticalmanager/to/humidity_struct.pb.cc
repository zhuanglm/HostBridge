// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: humidity_struct.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "humidity_struct.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace to {

void protobuf_ShutdownFile_humidity_5fstruct_2eproto() {
  delete HumidityStruct::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_humidity_5fstruct_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_humidity_5fstruct_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_humidity_5fstruct_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  HumidityStruct::default_instance_ = new HumidityStruct();
  HumidityStruct::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_humidity_5fstruct_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_humidity_5fstruct_2eproto_once_);
void protobuf_AddDesc_humidity_5fstruct_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_humidity_5fstruct_2eproto_once_,
                 &protobuf_AddDesc_humidity_5fstruct_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_humidity_5fstruct_2eproto {
  StaticDescriptorInitializer_humidity_5fstruct_2eproto() {
    protobuf_AddDesc_humidity_5fstruct_2eproto();
  }
} static_descriptor_initializer_humidity_5fstruct_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HumidityStruct::kSensorTypeFieldNumber;
const int HumidityStruct::kWindowStartFieldNumber;
const int HumidityStruct::kWindowSizeFieldNumber;
const int HumidityStruct::kLowFieldNumber;
const int HumidityStruct::kHighFieldNumber;
const int HumidityStruct::kExtra1FieldNumber;
const int HumidityStruct::kExtra2FieldNumber;
const int HumidityStruct::kExtra3FieldNumber;
const int HumidityStruct::kExtra4FieldNumber;
const int HumidityStruct::kExtra5FieldNumber;
const int HumidityStruct::kExtra6FieldNumber;
const int HumidityStruct::kExtra7FieldNumber;
const int HumidityStruct::kExtra8FieldNumber;
const int HumidityStruct::kExtra9FieldNumber;
const int HumidityStruct::kExtra10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HumidityStruct::HumidityStruct()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:to.HumidityStruct)
}

void HumidityStruct::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HumidityStruct::HumidityStruct(const HumidityStruct& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:to.HumidityStruct)
}

void HumidityStruct::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sensortype_ = 0;
  windowstart_ = 0;
  windowsize_ = 0;
  low_ = 0;
  high_ = 0;
  extra1_ = 0;
  extra2_ = 0;
  extra3_ = 0;
  extra4_ = 0;
  extra5_ = 0;
  extra6_ = 0;
  extra7_ = 0;
  extra8_ = 0;
  extra9_ = 0;
  extra10_ = 0;
}

HumidityStruct::~HumidityStruct() {
  // @@protoc_insertion_point(destructor:to.HumidityStruct)
  SharedDtor();
}

void HumidityStruct::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void HumidityStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const HumidityStruct& HumidityStruct::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_humidity_5fstruct_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_humidity_5fstruct_2eproto();
#endif
  return *default_instance_;
}

HumidityStruct* HumidityStruct::default_instance_ = NULL;

HumidityStruct* HumidityStruct::New(::google::protobuf::Arena* arena) const {
  HumidityStruct* n = new HumidityStruct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HumidityStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:to.HumidityStruct)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HumidityStruct, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HumidityStruct*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sensortype_, extra3_);
  windowsize_ = 0;
  ZR_(extra4_, extra10_);

#undef ZR_HELPER_
#undef ZR_

}

bool HumidityStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:to.HumidityStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sensorType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensortype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_windowStart;
        break;
      }

      // optional int32 windowStart = 2;
      case 2: {
        if (tag == 16) {
         parse_windowStart:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &windowstart_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_windowSize;
        break;
      }

      // optional int32 windowSize = 3;
      case 3: {
        if (tag == 24) {
         parse_windowSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &windowsize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_low;
        break;
      }

      // optional double low = 4;
      case 4: {
        if (tag == 33) {
         parse_low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &low_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_high;
        break;
      }

      // optional double high = 5;
      case 5: {
        if (tag == 41) {
         parse_high:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &high_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_extra1;
        break;
      }

      // optional double extra1 = 6;
      case 6: {
        if (tag == 49) {
         parse_extra1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_extra2;
        break;
      }

      // optional double extra2 = 7;
      case 7: {
        if (tag == 57) {
         parse_extra2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_extra3;
        break;
      }

      // optional double extra3 = 8;
      case 8: {
        if (tag == 65) {
         parse_extra3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_extra4;
        break;
      }

      // optional double extra4 = 9;
      case 9: {
        if (tag == 73) {
         parse_extra4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_extra5;
        break;
      }

      // optional double extra5 = 10;
      case 10: {
        if (tag == 81) {
         parse_extra5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_extra6;
        break;
      }

      // optional double extra6 = 11;
      case 11: {
        if (tag == 89) {
         parse_extra6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra6_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_extra7;
        break;
      }

      // optional double extra7 = 12;
      case 12: {
        if (tag == 97) {
         parse_extra7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra7_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_extra8;
        break;
      }

      // optional double extra8 = 13;
      case 13: {
        if (tag == 105) {
         parse_extra8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra8_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_extra9;
        break;
      }

      // optional double extra9 = 14;
      case 14: {
        if (tag == 113) {
         parse_extra9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra9_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_extra10;
        break;
      }

      // optional double extra10 = 15;
      case 15: {
        if (tag == 121) {
         parse_extra10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extra10_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:to.HumidityStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:to.HumidityStruct)
  return false;
#undef DO_
}

void HumidityStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:to.HumidityStruct)
  // optional int32 sensorType = 1;
  if (this->sensortype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sensortype(), output);
  }

  // optional int32 windowStart = 2;
  if (this->windowstart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->windowstart(), output);
  }

  // optional int32 windowSize = 3;
  if (this->windowsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->windowsize(), output);
  }

  // optional double low = 4;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->low(), output);
  }

  // optional double high = 5;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->high(), output);
  }

  // optional double extra1 = 6;
  if (this->extra1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->extra1(), output);
  }

  // optional double extra2 = 7;
  if (this->extra2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->extra2(), output);
  }

  // optional double extra3 = 8;
  if (this->extra3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->extra3(), output);
  }

  // optional double extra4 = 9;
  if (this->extra4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->extra4(), output);
  }

  // optional double extra5 = 10;
  if (this->extra5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->extra5(), output);
  }

  // optional double extra6 = 11;
  if (this->extra6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->extra6(), output);
  }

  // optional double extra7 = 12;
  if (this->extra7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->extra7(), output);
  }

  // optional double extra8 = 13;
  if (this->extra8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->extra8(), output);
  }

  // optional double extra9 = 14;
  if (this->extra9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->extra9(), output);
  }

  // optional double extra10 = 15;
  if (this->extra10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->extra10(), output);
  }

  // @@protoc_insertion_point(serialize_end:to.HumidityStruct)
}

int HumidityStruct::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:to.HumidityStruct)
  int total_size = 0;

  // optional int32 sensorType = 1;
  if (this->sensortype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sensortype());
  }

  // optional int32 windowStart = 2;
  if (this->windowstart() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->windowstart());
  }

  // optional int32 windowSize = 3;
  if (this->windowsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->windowsize());
  }

  // optional double low = 4;
  if (this->low() != 0) {
    total_size += 1 + 8;
  }

  // optional double high = 5;
  if (this->high() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra1 = 6;
  if (this->extra1() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra2 = 7;
  if (this->extra2() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra3 = 8;
  if (this->extra3() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra4 = 9;
  if (this->extra4() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra5 = 10;
  if (this->extra5() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra6 = 11;
  if (this->extra6() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra7 = 12;
  if (this->extra7() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra8 = 13;
  if (this->extra8() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra9 = 14;
  if (this->extra9() != 0) {
    total_size += 1 + 8;
  }

  // optional double extra10 = 15;
  if (this->extra10() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HumidityStruct::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const HumidityStruct*>(&from));
}

void HumidityStruct::MergeFrom(const HumidityStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:to.HumidityStruct)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sensortype() != 0) {
    set_sensortype(from.sensortype());
  }
  if (from.windowstart() != 0) {
    set_windowstart(from.windowstart());
  }
  if (from.windowsize() != 0) {
    set_windowsize(from.windowsize());
  }
  if (from.low() != 0) {
    set_low(from.low());
  }
  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.extra1() != 0) {
    set_extra1(from.extra1());
  }
  if (from.extra2() != 0) {
    set_extra2(from.extra2());
  }
  if (from.extra3() != 0) {
    set_extra3(from.extra3());
  }
  if (from.extra4() != 0) {
    set_extra4(from.extra4());
  }
  if (from.extra5() != 0) {
    set_extra5(from.extra5());
  }
  if (from.extra6() != 0) {
    set_extra6(from.extra6());
  }
  if (from.extra7() != 0) {
    set_extra7(from.extra7());
  }
  if (from.extra8() != 0) {
    set_extra8(from.extra8());
  }
  if (from.extra9() != 0) {
    set_extra9(from.extra9());
  }
  if (from.extra10() != 0) {
    set_extra10(from.extra10());
  }
}

void HumidityStruct::CopyFrom(const HumidityStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to.HumidityStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HumidityStruct::IsInitialized() const {

  return true;
}

void HumidityStruct::Swap(HumidityStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HumidityStruct::InternalSwap(HumidityStruct* other) {
  std::swap(sensortype_, other->sensortype_);
  std::swap(windowstart_, other->windowstart_);
  std::swap(windowsize_, other->windowsize_);
  std::swap(low_, other->low_);
  std::swap(high_, other->high_);
  std::swap(extra1_, other->extra1_);
  std::swap(extra2_, other->extra2_);
  std::swap(extra3_, other->extra3_);
  std::swap(extra4_, other->extra4_);
  std::swap(extra5_, other->extra5_);
  std::swap(extra6_, other->extra6_);
  std::swap(extra7_, other->extra7_);
  std::swap(extra8_, other->extra8_);
  std::swap(extra9_, other->extra9_);
  std::swap(extra10_, other->extra10_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string HumidityStruct::GetTypeName() const {
  return "to.HumidityStruct";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HumidityStruct

// optional int32 sensorType = 1;
void HumidityStruct::clear_sensortype() {
  sensortype_ = 0;
}
 ::google::protobuf::int32 HumidityStruct::sensortype() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.sensorType)
  return sensortype_;
}
 void HumidityStruct::set_sensortype(::google::protobuf::int32 value) {
  
  sensortype_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.sensorType)
}

// optional int32 windowStart = 2;
void HumidityStruct::clear_windowstart() {
  windowstart_ = 0;
}
 ::google::protobuf::int32 HumidityStruct::windowstart() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.windowStart)
  return windowstart_;
}
 void HumidityStruct::set_windowstart(::google::protobuf::int32 value) {
  
  windowstart_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.windowStart)
}

// optional int32 windowSize = 3;
void HumidityStruct::clear_windowsize() {
  windowsize_ = 0;
}
 ::google::protobuf::int32 HumidityStruct::windowsize() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.windowSize)
  return windowsize_;
}
 void HumidityStruct::set_windowsize(::google::protobuf::int32 value) {
  
  windowsize_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.windowSize)
}

// optional double low = 4;
void HumidityStruct::clear_low() {
  low_ = 0;
}
 double HumidityStruct::low() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.low)
  return low_;
}
 void HumidityStruct::set_low(double value) {
  
  low_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.low)
}

// optional double high = 5;
void HumidityStruct::clear_high() {
  high_ = 0;
}
 double HumidityStruct::high() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.high)
  return high_;
}
 void HumidityStruct::set_high(double value) {
  
  high_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.high)
}

// optional double extra1 = 6;
void HumidityStruct::clear_extra1() {
  extra1_ = 0;
}
 double HumidityStruct::extra1() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra1)
  return extra1_;
}
 void HumidityStruct::set_extra1(double value) {
  
  extra1_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra1)
}

// optional double extra2 = 7;
void HumidityStruct::clear_extra2() {
  extra2_ = 0;
}
 double HumidityStruct::extra2() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra2)
  return extra2_;
}
 void HumidityStruct::set_extra2(double value) {
  
  extra2_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra2)
}

// optional double extra3 = 8;
void HumidityStruct::clear_extra3() {
  extra3_ = 0;
}
 double HumidityStruct::extra3() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra3)
  return extra3_;
}
 void HumidityStruct::set_extra3(double value) {
  
  extra3_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra3)
}

// optional double extra4 = 9;
void HumidityStruct::clear_extra4() {
  extra4_ = 0;
}
 double HumidityStruct::extra4() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra4)
  return extra4_;
}
 void HumidityStruct::set_extra4(double value) {
  
  extra4_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra4)
}

// optional double extra5 = 10;
void HumidityStruct::clear_extra5() {
  extra5_ = 0;
}
 double HumidityStruct::extra5() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra5)
  return extra5_;
}
 void HumidityStruct::set_extra5(double value) {
  
  extra5_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra5)
}

// optional double extra6 = 11;
void HumidityStruct::clear_extra6() {
  extra6_ = 0;
}
 double HumidityStruct::extra6() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra6)
  return extra6_;
}
 void HumidityStruct::set_extra6(double value) {
  
  extra6_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra6)
}

// optional double extra7 = 12;
void HumidityStruct::clear_extra7() {
  extra7_ = 0;
}
 double HumidityStruct::extra7() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra7)
  return extra7_;
}
 void HumidityStruct::set_extra7(double value) {
  
  extra7_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra7)
}

// optional double extra8 = 13;
void HumidityStruct::clear_extra8() {
  extra8_ = 0;
}
 double HumidityStruct::extra8() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra8)
  return extra8_;
}
 void HumidityStruct::set_extra8(double value) {
  
  extra8_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra8)
}

// optional double extra9 = 14;
void HumidityStruct::clear_extra9() {
  extra9_ = 0;
}
 double HumidityStruct::extra9() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra9)
  return extra9_;
}
 void HumidityStruct::set_extra9(double value) {
  
  extra9_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra9)
}

// optional double extra10 = 15;
void HumidityStruct::clear_extra10() {
  extra10_ = 0;
}
 double HumidityStruct::extra10() const {
  // @@protoc_insertion_point(field_get:to.HumidityStruct.extra10)
  return extra10_;
}
 void HumidityStruct::set_extra10(double value) {
  
  extra10_ = value;
  // @@protoc_insertion_point(field_set:to.HumidityStruct.extra10)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace to

// @@protoc_insertion_point(global_scope)
