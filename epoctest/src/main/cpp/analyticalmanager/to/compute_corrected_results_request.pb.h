// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compute_corrected_results_request.proto

#ifndef PROTOBUF_compute_5fcorrected_5fresults_5frequest_2eproto__INCLUDED
#define PROTOBUF_compute_5fcorrected_5fresults_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "final_result.pb.h"
// @@protoc_insertion_point(includes)

namespace to {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_compute_5fcorrected_5fresults_5frequest_2eproto();
void protobuf_AssignDesc_compute_5fcorrected_5fresults_5frequest_2eproto();
void protobuf_ShutdownFile_compute_5fcorrected_5fresults_5frequest_2eproto();

class ComputeCorrectedResultsRequest;

// ===================================================================

class ComputeCorrectedResultsRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:to.ComputeCorrectedResultsRequest) */ {
 public:
  ComputeCorrectedResultsRequest();
  virtual ~ComputeCorrectedResultsRequest();

  ComputeCorrectedResultsRequest(const ComputeCorrectedResultsRequest& from);

  inline ComputeCorrectedResultsRequest& operator=(const ComputeCorrectedResultsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ComputeCorrectedResultsRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ComputeCorrectedResultsRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ComputeCorrectedResultsRequest* other);

  // implements Message ----------------------------------------------

  inline ComputeCorrectedResultsRequest* New() const { return New(NULL); }

  ComputeCorrectedResultsRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ComputeCorrectedResultsRequest& from);
  void MergeFrom(const ComputeCorrectedResultsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ComputeCorrectedResultsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .to.FinalResult measuredResults = 1;
  int measuredresults_size() const;
  void clear_measuredresults();
  static const int kMeasuredResultsFieldNumber = 1;
  const ::to::FinalResult& measuredresults(int index) const;
  ::to::FinalResult* mutable_measuredresults(int index);
  ::to::FinalResult* add_measuredresults();
  ::google::protobuf::RepeatedPtrField< ::to::FinalResult >*
      mutable_measuredresults();
  const ::google::protobuf::RepeatedPtrField< ::to::FinalResult >&
      measuredresults() const;

  // repeated .to.FinalResult correctedResults = 2;
  int correctedresults_size() const;
  void clear_correctedresults();
  static const int kCorrectedResultsFieldNumber = 2;
  const ::to::FinalResult& correctedresults(int index) const;
  ::to::FinalResult* mutable_correctedresults(int index);
  ::to::FinalResult* add_correctedresults();
  ::google::protobuf::RepeatedPtrField< ::to::FinalResult >*
      mutable_correctedresults();
  const ::google::protobuf::RepeatedPtrField< ::to::FinalResult >&
      correctedresults() const;

  // optional double temperature = 3;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 3;
  double temperature() const;
  void set_temperature(double value);

  // optional double pressure = 4;
  void clear_pressure();
  static const int kPressureFieldNumber = 4;
  double pressure() const;
  void set_pressure(double value);

  // optional double FiO2 = 5;
  void clear_fio2();
  static const int kFiO2FieldNumber = 5;
  double fio2() const;
  void set_fio2(double value);

  // optional double RQ = 6;
  void clear_rq();
  static const int kRQFieldNumber = 6;
  double rq() const;
  void set_rq(double value);

  // optional bool calculateAlveolar = 7;
  void clear_calculatealveolar();
  static const int kCalculateAlveolarFieldNumber = 7;
  bool calculatealveolar() const;
  void set_calculatealveolar(bool value);

  // @@protoc_insertion_point(class_scope:to.ComputeCorrectedResultsRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::to::FinalResult > measuredresults_;
  ::google::protobuf::RepeatedPtrField< ::to::FinalResult > correctedresults_;
  double temperature_;
  double pressure_;
  double fio2_;
  double rq_;
  bool calculatealveolar_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_compute_5fcorrected_5fresults_5frequest_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_compute_5fcorrected_5fresults_5frequest_2eproto();
  #endif
  friend void protobuf_AssignDesc_compute_5fcorrected_5fresults_5frequest_2eproto();
  friend void protobuf_ShutdownFile_compute_5fcorrected_5fresults_5frequest_2eproto();

  void InitAsDefaultInstance();
  static ComputeCorrectedResultsRequest* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ComputeCorrectedResultsRequest

// repeated .to.FinalResult measuredResults = 1;
inline int ComputeCorrectedResultsRequest::measuredresults_size() const {
  return measuredresults_.size();
}
inline void ComputeCorrectedResultsRequest::clear_measuredresults() {
  measuredresults_.Clear();
}
inline const ::to::FinalResult& ComputeCorrectedResultsRequest::measuredresults(int index) const {
  // @@protoc_insertion_point(field_get:to.ComputeCorrectedResultsRequest.measuredResults)
  return measuredresults_.Get(index);
}
inline ::to::FinalResult* ComputeCorrectedResultsRequest::mutable_measuredresults(int index) {
  // @@protoc_insertion_point(field_mutable:to.ComputeCorrectedResultsRequest.measuredResults)
  return measuredresults_.Mutable(index);
}
inline ::to::FinalResult* ComputeCorrectedResultsRequest::add_measuredresults() {
  // @@protoc_insertion_point(field_add:to.ComputeCorrectedResultsRequest.measuredResults)
  return measuredresults_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::to::FinalResult >*
ComputeCorrectedResultsRequest::mutable_measuredresults() {
  // @@protoc_insertion_point(field_mutable_list:to.ComputeCorrectedResultsRequest.measuredResults)
  return &measuredresults_;
}
inline const ::google::protobuf::RepeatedPtrField< ::to::FinalResult >&
ComputeCorrectedResultsRequest::measuredresults() const {
  // @@protoc_insertion_point(field_list:to.ComputeCorrectedResultsRequest.measuredResults)
  return measuredresults_;
}

// repeated .to.FinalResult correctedResults = 2;
inline int ComputeCorrectedResultsRequest::correctedresults_size() const {
  return correctedresults_.size();
}
inline void ComputeCorrectedResultsRequest::clear_correctedresults() {
  correctedresults_.Clear();
}
inline const ::to::FinalResult& ComputeCorrectedResultsRequest::correctedresults(int index) const {
  // @@protoc_insertion_point(field_get:to.ComputeCorrectedResultsRequest.correctedResults)
  return correctedresults_.Get(index);
}
inline ::to::FinalResult* ComputeCorrectedResultsRequest::mutable_correctedresults(int index) {
  // @@protoc_insertion_point(field_mutable:to.ComputeCorrectedResultsRequest.correctedResults)
  return correctedresults_.Mutable(index);
}
inline ::to::FinalResult* ComputeCorrectedResultsRequest::add_correctedresults() {
  // @@protoc_insertion_point(field_add:to.ComputeCorrectedResultsRequest.correctedResults)
  return correctedresults_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::to::FinalResult >*
ComputeCorrectedResultsRequest::mutable_correctedresults() {
  // @@protoc_insertion_point(field_mutable_list:to.ComputeCorrectedResultsRequest.correctedResults)
  return &correctedresults_;
}
inline const ::google::protobuf::RepeatedPtrField< ::to::FinalResult >&
ComputeCorrectedResultsRequest::correctedresults() const {
  // @@protoc_insertion_point(field_list:to.ComputeCorrectedResultsRequest.correctedResults)
  return correctedresults_;
}

// optional double temperature = 3;
inline void ComputeCorrectedResultsRequest::clear_temperature() {
  temperature_ = 0;
}
inline double ComputeCorrectedResultsRequest::temperature() const {
  // @@protoc_insertion_point(field_get:to.ComputeCorrectedResultsRequest.temperature)
  return temperature_;
}
inline void ComputeCorrectedResultsRequest::set_temperature(double value) {
  
  temperature_ = value;
  // @@protoc_insertion_point(field_set:to.ComputeCorrectedResultsRequest.temperature)
}

// optional double pressure = 4;
inline void ComputeCorrectedResultsRequest::clear_pressure() {
  pressure_ = 0;
}
inline double ComputeCorrectedResultsRequest::pressure() const {
  // @@protoc_insertion_point(field_get:to.ComputeCorrectedResultsRequest.pressure)
  return pressure_;
}
inline void ComputeCorrectedResultsRequest::set_pressure(double value) {
  
  pressure_ = value;
  // @@protoc_insertion_point(field_set:to.ComputeCorrectedResultsRequest.pressure)
}

// optional double FiO2 = 5;
inline void ComputeCorrectedResultsRequest::clear_fio2() {
  fio2_ = 0;
}
inline double ComputeCorrectedResultsRequest::fio2() const {
  // @@protoc_insertion_point(field_get:to.ComputeCorrectedResultsRequest.FiO2)
  return fio2_;
}
inline void ComputeCorrectedResultsRequest::set_fio2(double value) {
  
  fio2_ = value;
  // @@protoc_insertion_point(field_set:to.ComputeCorrectedResultsRequest.FiO2)
}

// optional double RQ = 6;
inline void ComputeCorrectedResultsRequest::clear_rq() {
  rq_ = 0;
}
inline double ComputeCorrectedResultsRequest::rq() const {
  // @@protoc_insertion_point(field_get:to.ComputeCorrectedResultsRequest.RQ)
  return rq_;
}
inline void ComputeCorrectedResultsRequest::set_rq(double value) {
  
  rq_ = value;
  // @@protoc_insertion_point(field_set:to.ComputeCorrectedResultsRequest.RQ)
}

// optional bool calculateAlveolar = 7;
inline void ComputeCorrectedResultsRequest::clear_calculatealveolar() {
  calculatealveolar_ = false;
}
inline bool ComputeCorrectedResultsRequest::calculatealveolar() const {
  // @@protoc_insertion_point(field_get:to.ComputeCorrectedResultsRequest.calculateAlveolar)
  return calculatealveolar_;
}
inline void ComputeCorrectedResultsRequest::set_calculatealveolar(bool value) {
  
  calculatealveolar_ = value;
  // @@protoc_insertion_point(field_set:to.ComputeCorrectedResultsRequest.calculateAlveolar)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace to

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_compute_5fcorrected_5fresults_5frequest_2eproto__INCLUDED
