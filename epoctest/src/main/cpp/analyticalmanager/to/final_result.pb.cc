// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: final_result.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "final_result.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace to {

void protobuf_ShutdownFile_final_5fresult_2eproto() {
  delete FinalResult::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_final_5fresult_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_final_5fresult_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_final_5fresult_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  FinalResult::default_instance_ = new FinalResult();
  FinalResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_final_5fresult_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_final_5fresult_2eproto_once_);
void protobuf_AddDesc_final_5fresult_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_final_5fresult_2eproto_once_,
                 &protobuf_AddDesc_final_5fresult_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_final_5fresult_2eproto {
  StaticDescriptorInitializer_final_5fresult_2eproto() {
    protobuf_AddDesc_final_5fresult_2eproto();
  }
} static_descriptor_initializer_final_5fresult_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinalResult::kChannelTypeFieldNumber;
const int FinalResult::kAnalyteFieldNumber;
const int FinalResult::kCorrectedWhatFieldNumber;
const int FinalResult::kReadingFieldNumber;
const int FinalResult::kReturnCodeFieldNumber;
const int FinalResult::kRequirementsFailedIQCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinalResult::FinalResult()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:to.FinalResult)
}

void FinalResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FinalResult::FinalResult(const FinalResult& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:to.FinalResult)
}

void FinalResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  channeltype_ = 0;
  analyte_ = 0;
  correctedwhat_ = 0;
  reading_ = 0;
  returncode_ = 0;
  requirementsfailediqc_ = false;
}

FinalResult::~FinalResult() {
  // @@protoc_insertion_point(destructor:to.FinalResult)
  SharedDtor();
}

void FinalResult::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void FinalResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const FinalResult& FinalResult::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_final_5fresult_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_final_5fresult_2eproto();
#endif
  return *default_instance_;
}

FinalResult* FinalResult::default_instance_ = NULL;

FinalResult* FinalResult::New(::google::protobuf::Arena* arena) const {
  FinalResult* n = new FinalResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinalResult::Clear() {
// @@protoc_insertion_point(message_clear_start:to.FinalResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FinalResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FinalResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(channeltype_, requirementsfailediqc_);

#undef ZR_HELPER_
#undef ZR_

}

bool FinalResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:to.FinalResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 channelType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channeltype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_analyte;
        break;
      }

      // optional int32 analyte = 2;
      case 2: {
        if (tag == 16) {
         parse_analyte:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &analyte_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_correctedWhat;
        break;
      }

      // optional int32 correctedWhat = 3;
      case 3: {
        if (tag == 24) {
         parse_correctedWhat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &correctedwhat_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_reading;
        break;
      }

      // optional double reading = 4;
      case 4: {
        if (tag == 33) {
         parse_reading:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reading_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_returnCode;
        break;
      }

      // optional int32 returnCode = 5;
      case 5: {
        if (tag == 40) {
         parse_returnCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &returncode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_requirementsFailedIQC;
        break;
      }

      // optional bool requirementsFailedIQC = 6;
      case 6: {
        if (tag == 48) {
         parse_requirementsFailedIQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &requirementsfailediqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:to.FinalResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:to.FinalResult)
  return false;
#undef DO_
}

void FinalResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:to.FinalResult)
  // optional int32 channelType = 1;
  if (this->channeltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->channeltype(), output);
  }

  // optional int32 analyte = 2;
  if (this->analyte() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->analyte(), output);
  }

  // optional int32 correctedWhat = 3;
  if (this->correctedwhat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->correctedwhat(), output);
  }

  // optional double reading = 4;
  if (this->reading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->reading(), output);
  }

  // optional int32 returnCode = 5;
  if (this->returncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->returncode(), output);
  }

  // optional bool requirementsFailedIQC = 6;
  if (this->requirementsfailediqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->requirementsfailediqc(), output);
  }

  // @@protoc_insertion_point(serialize_end:to.FinalResult)
}

int FinalResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:to.FinalResult)
  int total_size = 0;

  // optional int32 channelType = 1;
  if (this->channeltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channeltype());
  }

  // optional int32 analyte = 2;
  if (this->analyte() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->analyte());
  }

  // optional int32 correctedWhat = 3;
  if (this->correctedwhat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->correctedwhat());
  }

  // optional double reading = 4;
  if (this->reading() != 0) {
    total_size += 1 + 8;
  }

  // optional int32 returnCode = 5;
  if (this->returncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->returncode());
  }

  // optional bool requirementsFailedIQC = 6;
  if (this->requirementsfailediqc() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinalResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FinalResult*>(&from));
}

void FinalResult::MergeFrom(const FinalResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:to.FinalResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.channeltype() != 0) {
    set_channeltype(from.channeltype());
  }
  if (from.analyte() != 0) {
    set_analyte(from.analyte());
  }
  if (from.correctedwhat() != 0) {
    set_correctedwhat(from.correctedwhat());
  }
  if (from.reading() != 0) {
    set_reading(from.reading());
  }
  if (from.returncode() != 0) {
    set_returncode(from.returncode());
  }
  if (from.requirementsfailediqc() != 0) {
    set_requirementsfailediqc(from.requirementsfailediqc());
  }
}

void FinalResult::CopyFrom(const FinalResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to.FinalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinalResult::IsInitialized() const {

  return true;
}

void FinalResult::Swap(FinalResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinalResult::InternalSwap(FinalResult* other) {
  std::swap(channeltype_, other->channeltype_);
  std::swap(analyte_, other->analyte_);
  std::swap(correctedwhat_, other->correctedwhat_);
  std::swap(reading_, other->reading_);
  std::swap(returncode_, other->returncode_);
  std::swap(requirementsfailediqc_, other->requirementsfailediqc_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string FinalResult::GetTypeName() const {
  return "to.FinalResult";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinalResult

// optional int32 channelType = 1;
void FinalResult::clear_channeltype() {
  channeltype_ = 0;
}
 ::google::protobuf::int32 FinalResult::channeltype() const {
  // @@protoc_insertion_point(field_get:to.FinalResult.channelType)
  return channeltype_;
}
 void FinalResult::set_channeltype(::google::protobuf::int32 value) {
  
  channeltype_ = value;
  // @@protoc_insertion_point(field_set:to.FinalResult.channelType)
}

// optional int32 analyte = 2;
void FinalResult::clear_analyte() {
  analyte_ = 0;
}
 ::google::protobuf::int32 FinalResult::analyte() const {
  // @@protoc_insertion_point(field_get:to.FinalResult.analyte)
  return analyte_;
}
 void FinalResult::set_analyte(::google::protobuf::int32 value) {
  
  analyte_ = value;
  // @@protoc_insertion_point(field_set:to.FinalResult.analyte)
}

// optional int32 correctedWhat = 3;
void FinalResult::clear_correctedwhat() {
  correctedwhat_ = 0;
}
 ::google::protobuf::int32 FinalResult::correctedwhat() const {
  // @@protoc_insertion_point(field_get:to.FinalResult.correctedWhat)
  return correctedwhat_;
}
 void FinalResult::set_correctedwhat(::google::protobuf::int32 value) {
  
  correctedwhat_ = value;
  // @@protoc_insertion_point(field_set:to.FinalResult.correctedWhat)
}

// optional double reading = 4;
void FinalResult::clear_reading() {
  reading_ = 0;
}
 double FinalResult::reading() const {
  // @@protoc_insertion_point(field_get:to.FinalResult.reading)
  return reading_;
}
 void FinalResult::set_reading(double value) {
  
  reading_ = value;
  // @@protoc_insertion_point(field_set:to.FinalResult.reading)
}

// optional int32 returnCode = 5;
void FinalResult::clear_returncode() {
  returncode_ = 0;
}
 ::google::protobuf::int32 FinalResult::returncode() const {
  // @@protoc_insertion_point(field_get:to.FinalResult.returnCode)
  return returncode_;
}
 void FinalResult::set_returncode(::google::protobuf::int32 value) {
  
  returncode_ = value;
  // @@protoc_insertion_point(field_set:to.FinalResult.returnCode)
}

// optional bool requirementsFailedIQC = 6;
void FinalResult::clear_requirementsfailediqc() {
  requirementsfailediqc_ = false;
}
 bool FinalResult::requirementsfailediqc() const {
  // @@protoc_insertion_point(field_get:to.FinalResult.requirementsFailedIQC)
  return requirementsfailediqc_;
}
 void FinalResult::set_requirementsfailediqc(bool value) {
  
  requirementsfailediqc_ = value;
  // @@protoc_insertion_point(field_set:to.FinalResult.requirementsFailedIQC)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace to

// @@protoc_insertion_point(global_scope)
