// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calc_bge_request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "calc_bge_request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace to {

void protobuf_ShutdownFile_calc_5fbge_5frequest_2eproto() {
  delete CalculateBGERequest::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_calc_5fbge_5frequest_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_calc_5fbge_5frequest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_calc_5fbge_5frequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::to::protobuf_AddDesc_sensor_5freadings_2eproto();
  ::to::protobuf_AddDesc_bge_5fparameters_2eproto();
  CalculateBGERequest::default_instance_ = new CalculateBGERequest();
  CalculateBGERequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_calc_5fbge_5frequest_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_calc_5fbge_5frequest_2eproto_once_);
void protobuf_AddDesc_calc_5fbge_5frequest_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_calc_5fbge_5frequest_2eproto_once_,
                 &protobuf_AddDesc_calc_5fbge_5frequest_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_calc_5fbge_5frequest_2eproto {
  StaticDescriptorInitializer_calc_5fbge_5frequest_2eproto() {
    protobuf_AddDesc_calc_5fbge_5frequest_2eproto();
  }
} static_descriptor_initializer_calc_5fbge_5frequest_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalculateBGERequest::kSensorReadingsFieldNumber;
const int CalculateBGERequest::kParamsFieldNumber;
const int CalculateBGERequest::kAllowNegativeValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalculateBGERequest::CalculateBGERequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:to.CalculateBGERequest)
}

void CalculateBGERequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  params_ = const_cast< ::to::BGEParameters*>(
      ::to::BGEParameters::internal_default_instance());
#else
  params_ = const_cast< ::to::BGEParameters*>(&::to::BGEParameters::default_instance());
#endif
}

CalculateBGERequest::CalculateBGERequest(const CalculateBGERequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:to.CalculateBGERequest)
}

void CalculateBGERequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  params_ = NULL;
  allownegativevalues_ = false;
}

CalculateBGERequest::~CalculateBGERequest() {
  // @@protoc_insertion_point(destructor:to.CalculateBGERequest)
  SharedDtor();
}

void CalculateBGERequest::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete params_;
  }
}

void CalculateBGERequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CalculateBGERequest& CalculateBGERequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_calc_5fbge_5frequest_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_calc_5fbge_5frequest_2eproto();
#endif
  return *default_instance_;
}

CalculateBGERequest* CalculateBGERequest::default_instance_ = NULL;

CalculateBGERequest* CalculateBGERequest::New(::google::protobuf::Arena* arena) const {
  CalculateBGERequest* n = new CalculateBGERequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalculateBGERequest::Clear() {
// @@protoc_insertion_point(message_clear_start:to.CalculateBGERequest)
  if (GetArenaNoVirtual() == NULL && params_ != NULL) delete params_;
  params_ = NULL;
  allownegativevalues_ = false;
  sensorreadings_.Clear();
}

bool CalculateBGERequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:to.CalculateBGERequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .to.SensorReadings sensorReadings = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_sensorReadings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sensorreadings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_sensorReadings;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_params;
        break;
      }

      // optional .to.BGEParameters params = 2;
      case 2: {
        if (tag == 18) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_allowNegativeValues;
        break;
      }

      // optional bool allowNegativeValues = 3;
      case 3: {
        if (tag == 24) {
         parse_allowNegativeValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allownegativevalues_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:to.CalculateBGERequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:to.CalculateBGERequest)
  return false;
#undef DO_
}

void CalculateBGERequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:to.CalculateBGERequest)
  // repeated .to.SensorReadings sensorReadings = 1;
  for (unsigned int i = 0, n = this->sensorreadings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->sensorreadings(i), output);
  }

  // optional .to.BGEParameters params = 2;
  if (this->has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->params_, output);
  }

  // optional bool allowNegativeValues = 3;
  if (this->allownegativevalues() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->allownegativevalues(), output);
  }

  // @@protoc_insertion_point(serialize_end:to.CalculateBGERequest)
}

int CalculateBGERequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:to.CalculateBGERequest)
  int total_size = 0;

  // optional .to.BGEParameters params = 2;
  if (this->has_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->params_);
  }

  // optional bool allowNegativeValues = 3;
  if (this->allownegativevalues() != 0) {
    total_size += 1 + 1;
  }

  // repeated .to.SensorReadings sensorReadings = 1;
  total_size += 1 * this->sensorreadings_size();
  for (int i = 0; i < this->sensorreadings_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sensorreadings(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalculateBGERequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CalculateBGERequest*>(&from));
}

void CalculateBGERequest::MergeFrom(const CalculateBGERequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:to.CalculateBGERequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  sensorreadings_.MergeFrom(from.sensorreadings_);
  if (from.has_params()) {
    mutable_params()->::to::BGEParameters::MergeFrom(from.params());
  }
  if (from.allownegativevalues() != 0) {
    set_allownegativevalues(from.allownegativevalues());
  }
}

void CalculateBGERequest::CopyFrom(const CalculateBGERequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to.CalculateBGERequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateBGERequest::IsInitialized() const {

  return true;
}

void CalculateBGERequest::Swap(CalculateBGERequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalculateBGERequest::InternalSwap(CalculateBGERequest* other) {
  sensorreadings_.UnsafeArenaSwap(&other->sensorreadings_);
  std::swap(params_, other->params_);
  std::swap(allownegativevalues_, other->allownegativevalues_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CalculateBGERequest::GetTypeName() const {
  return "to.CalculateBGERequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalculateBGERequest

// repeated .to.SensorReadings sensorReadings = 1;
int CalculateBGERequest::sensorreadings_size() const {
  return sensorreadings_.size();
}
void CalculateBGERequest::clear_sensorreadings() {
  sensorreadings_.Clear();
}
const ::to::SensorReadings& CalculateBGERequest::sensorreadings(int index) const {
  // @@protoc_insertion_point(field_get:to.CalculateBGERequest.sensorReadings)
  return sensorreadings_.Get(index);
}
::to::SensorReadings* CalculateBGERequest::mutable_sensorreadings(int index) {
  // @@protoc_insertion_point(field_mutable:to.CalculateBGERequest.sensorReadings)
  return sensorreadings_.Mutable(index);
}
::to::SensorReadings* CalculateBGERequest::add_sensorreadings() {
  // @@protoc_insertion_point(field_add:to.CalculateBGERequest.sensorReadings)
  return sensorreadings_.Add();
}
::google::protobuf::RepeatedPtrField< ::to::SensorReadings >*
CalculateBGERequest::mutable_sensorreadings() {
  // @@protoc_insertion_point(field_mutable_list:to.CalculateBGERequest.sensorReadings)
  return &sensorreadings_;
}
const ::google::protobuf::RepeatedPtrField< ::to::SensorReadings >&
CalculateBGERequest::sensorreadings() const {
  // @@protoc_insertion_point(field_list:to.CalculateBGERequest.sensorReadings)
  return sensorreadings_;
}

// optional .to.BGEParameters params = 2;
bool CalculateBGERequest::has_params() const {
  return !_is_default_instance_ && params_ != NULL;
}
void CalculateBGERequest::clear_params() {
  if (GetArenaNoVirtual() == NULL && params_ != NULL) delete params_;
  params_ = NULL;
}
const ::to::BGEParameters& CalculateBGERequest::params() const {
  // @@protoc_insertion_point(field_get:to.CalculateBGERequest.params)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return params_ != NULL ? *params_ : *default_instance().params_;
#else
  return params_ != NULL ? *params_ : *default_instance_->params_;
#endif
}
::to::BGEParameters* CalculateBGERequest::mutable_params() {
  
  if (params_ == NULL) {
    params_ = new ::to::BGEParameters;
  }
  // @@protoc_insertion_point(field_mutable:to.CalculateBGERequest.params)
  return params_;
}
::to::BGEParameters* CalculateBGERequest::release_params() {
  // @@protoc_insertion_point(field_release:to.CalculateBGERequest.params)
  
  ::to::BGEParameters* temp = params_;
  params_ = NULL;
  return temp;
}
void CalculateBGERequest::set_allocated_params(::to::BGEParameters* params) {
  delete params_;
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:to.CalculateBGERequest.params)
}

// optional bool allowNegativeValues = 3;
void CalculateBGERequest::clear_allownegativevalues() {
  allownegativevalues_ = false;
}
 bool CalculateBGERequest::allownegativevalues() const {
  // @@protoc_insertion_point(field_get:to.CalculateBGERequest.allowNegativeValues)
  return allownegativevalues_;
}
 void CalculateBGERequest::set_allownegativevalues(bool value) {
  
  allownegativevalues_ = value;
  // @@protoc_insertion_point(field_set:to.CalculateBGERequest.allowNegativeValues)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace to

// @@protoc_insertion_point(global_scope)
