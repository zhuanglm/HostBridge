// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sensor_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace to {

void protobuf_ShutdownFile_sensor_5finfo_2eproto() {
  delete SensorInfo::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_sensor_5finfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_sensor_5finfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_sensor_5finfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  SensorInfo::default_instance_ = new SensorInfo();
  SensorInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sensor_5finfo_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_sensor_5finfo_2eproto_once_);
void protobuf_AddDesc_sensor_5finfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_sensor_5finfo_2eproto_once_,
                 &protobuf_AddDesc_sensor_5finfo_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sensor_5finfo_2eproto {
  StaticDescriptorInitializer_sensor_5finfo_2eproto() {
    protobuf_AddDesc_sensor_5finfo_2eproto();
  }
} static_descriptor_initializer_sensor_5finfo_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorInfo::kChannelTypeFieldNumber;
const int SensorInfo::kSensorTypeFieldNumber;
const int SensorInfo::kSensorDescriptorNumberFieldNumber;
const int SensorInfo::kCalDelimitFieldNumber;
const int SensorInfo::kSampleDelimitFieldNumber;
const int SensorInfo::kPostDelimitFieldNumber;
const int SensorInfo::kExtrapolationFieldNumber;
const int SensorInfo::kCalWindowSizeFieldNumber;
const int SensorInfo::kSampleWindowSizeFieldNumber;
const int SensorInfo::kPostWindowSizeFieldNumber;
const int SensorInfo::kCalCurveWeightFieldNumber;
const int SensorInfo::kSampleCurveWeightFieldNumber;
const int SensorInfo::kCalConcentrationFieldNumber;
const int SensorInfo::kOffsetFieldNumber;
const int SensorInfo::kSlopeFactorFieldNumber;
const int SensorInfo::kCalMeanLowQCFieldNumber;
const int SensorInfo::kCalMeanHighQCFieldNumber;
const int SensorInfo::kCalDriftLowQCFieldNumber;
const int SensorInfo::kCalDriftHighQCFieldNumber;
const int SensorInfo::kCalSecondLowQCFieldNumber;
const int SensorInfo::kCalSecondHighQCFieldNumber;
const int SensorInfo::kCalNoiseHighQCFieldNumber;
const int SensorInfo::kSampleMeanLowQCFieldNumber;
const int SensorInfo::kSampleMeanHighQCFieldNumber;
const int SensorInfo::kSampleDriftLowQCFieldNumber;
const int SensorInfo::kSampleDriftHighQCFieldNumber;
const int SensorInfo::kSampleSecondLowQCFieldNumber;
const int SensorInfo::kSampleSecondHighQCFieldNumber;
const int SensorInfo::kSampleNoiseHighQCFieldNumber;
const int SensorInfo::kPostMeanLowQCFieldNumber;
const int SensorInfo::kPostMeanHighQCFieldNumber;
const int SensorInfo::kPostDriftLowQCFieldNumber;
const int SensorInfo::kPostDriftHighQCFieldNumber;
const int SensorInfo::kPostSecondLowQCFieldNumber;
const int SensorInfo::kPostSecondHighQCFieldNumber;
const int SensorInfo::kPostNoiseHighQCFieldNumber;
const int SensorInfo::kDeltaDriftLowQCFieldNumber;
const int SensorInfo::kDeltaDriftHighQCFieldNumber;
const int SensorInfo::kParam1FieldNumber;
const int SensorInfo::kParam2FieldNumber;
const int SensorInfo::kParam3FieldNumber;
const int SensorInfo::kParam4FieldNumber;
const int SensorInfo::kParam5FieldNumber;
const int SensorInfo::kParam6FieldNumber;
const int SensorInfo::kParam7FieldNumber;
const int SensorInfo::kParam8FieldNumber;
const int SensorInfo::kParam9FieldNumber;
const int SensorInfo::kParam10FieldNumber;
const int SensorInfo::kParam11FieldNumber;
const int SensorInfo::kParam12FieldNumber;
const int SensorInfo::kParam13FieldNumber;
const int SensorInfo::kParam14FieldNumber;
const int SensorInfo::kParam15FieldNumber;
const int SensorInfo::kParam16FieldNumber;
const int SensorInfo::kParam17FieldNumber;
const int SensorInfo::kParam18FieldNumber;
const int SensorInfo::kParam19FieldNumber;
const int SensorInfo::kParam20FieldNumber;
const int SensorInfo::kParam21FieldNumber;
const int SensorInfo::kParam22FieldNumber;
const int SensorInfo::kParam23FieldNumber;
const int SensorInfo::kParam24FieldNumber;
const int SensorInfo::kParam25FieldNumber;
const int SensorInfo::kParam26FieldNumber;
const int SensorInfo::kParam27FieldNumber;
const int SensorInfo::kParam28FieldNumber;
const int SensorInfo::kParam29FieldNumber;
const int SensorInfo::kParam30FieldNumber;
const int SensorInfo::kParam31FieldNumber;
const int SensorInfo::kParam32FieldNumber;
const int SensorInfo::kParam33FieldNumber;
const int SensorInfo::kParam34FieldNumber;
const int SensorInfo::kParam35FieldNumber;
const int SensorInfo::kParam36FieldNumber;
const int SensorInfo::kParam37FieldNumber;
const int SensorInfo::kParam38FieldNumber;
const int SensorInfo::kParam39FieldNumber;
const int SensorInfo::kParam40FieldNumber;
const int SensorInfo::kParam41FieldNumber;
const int SensorInfo::kParam42FieldNumber;
const int SensorInfo::kParam43FieldNumber;
const int SensorInfo::kParam44FieldNumber;
const int SensorInfo::kParam45FieldNumber;
const int SensorInfo::kParam46FieldNumber;
const int SensorInfo::kParam47FieldNumber;
const int SensorInfo::kParam48FieldNumber;
const int SensorInfo::kParam49FieldNumber;
const int SensorInfo::kParam50FieldNumber;
const int SensorInfo::kParam51FieldNumber;
const int SensorInfo::kParam52FieldNumber;
const int SensorInfo::kParam53FieldNumber;
const int SensorInfo::kParam54FieldNumber;
const int SensorInfo::kParam55FieldNumber;
const int SensorInfo::kParam56FieldNumber;
const int SensorInfo::kParam57FieldNumber;
const int SensorInfo::kParam58FieldNumber;
const int SensorInfo::kParam59FieldNumber;
const int SensorInfo::kParam60FieldNumber;
const int SensorInfo::kParam61FieldNumber;
const int SensorInfo::kParam62FieldNumber;
const int SensorInfo::kParam63FieldNumber;
const int SensorInfo::kParam64FieldNumber;
const int SensorInfo::kParam65FieldNumber;
const int SensorInfo::kParam66FieldNumber;
const int SensorInfo::kParam67FieldNumber;
const int SensorInfo::kParam68FieldNumber;
const int SensorInfo::kParam69FieldNumber;
const int SensorInfo::kParam70FieldNumber;
const int SensorInfo::kParam71FieldNumber;
const int SensorInfo::kParam72FieldNumber;
const int SensorInfo::kParam73FieldNumber;
const int SensorInfo::kParam74FieldNumber;
const int SensorInfo::kParam75FieldNumber;
const int SensorInfo::kParam76FieldNumber;
const int SensorInfo::kParam77FieldNumber;
const int SensorInfo::kParam78FieldNumber;
const int SensorInfo::kParam79FieldNumber;
const int SensorInfo::kParam80FieldNumber;
const int SensorInfo::kParam81FieldNumber;
const int SensorInfo::kParam82FieldNumber;
const int SensorInfo::kParam83FieldNumber;
const int SensorInfo::kParam84FieldNumber;
const int SensorInfo::kParam85FieldNumber;
const int SensorInfo::kParam86FieldNumber;
const int SensorInfo::kParam87FieldNumber;
const int SensorInfo::kParam88FieldNumber;
const int SensorInfo::kParam89FieldNumber;
const int SensorInfo::kParam90FieldNumber;
const int SensorInfo::kParam91FieldNumber;
const int SensorInfo::kParam92FieldNumber;
const int SensorInfo::kParam93FieldNumber;
const int SensorInfo::kParam94FieldNumber;
const int SensorInfo::kParam95FieldNumber;
const int SensorInfo::kParam96FieldNumber;
const int SensorInfo::kParam97FieldNumber;
const int SensorInfo::kParam98FieldNumber;
const int SensorInfo::kParam99FieldNumber;
const int SensorInfo::kParam100FieldNumber;
const int SensorInfo::kReaderMeanLowFieldNumber;
const int SensorInfo::kReaderMeanHighFieldNumber;
const int SensorInfo::kReaderDriftLowFieldNumber;
const int SensorInfo::kReaderDriftHighFieldNumber;
const int SensorInfo::kReaderNoiseLowFieldNumber;
const int SensorInfo::kReaderNoiseHighFieldNumber;
const int SensorInfo::kTMinusFieldNumber;
const int SensorInfo::kTPlusFieldNumber;
const int SensorInfo::kPostCurvatureWeightFieldNumber;
const int SensorInfo::kBloodPointsToSkipFieldNumber;
const int SensorInfo::kBloodPointsInWindowFieldNumber;
const int SensorInfo::kBloodNoiseHighFieldNumber;
const int SensorInfo::kAqPointsToSkipFieldNumber;
const int SensorInfo::kAqPointsInWindowFieldNumber;
const int SensorInfo::kAqNoiseHighFieldNumber;
const int SensorInfo::kLateBloodPointsToSkipFieldNumber;
const int SensorInfo::kLateBloodPointsInWindowFieldNumber;
const int SensorInfo::kLateBloodNoiseHighFieldNumber;
const int SensorInfo::kLateAqPointsToSkipFieldNumber;
const int SensorInfo::kLateAqPointsInWindowFieldNumber;
const int SensorInfo::kLateAqNoiseHighFieldNumber;
const int SensorInfo::kRtPointLimitLowFieldNumber;
const int SensorInfo::kRtPointLimitHighFieldNumber;
const int SensorInfo::kD1LowFieldNumber;
const int SensorInfo::kD1HighFieldNumber;
const int SensorInfo::kP1D2LowFieldNumber;
const int SensorInfo::kP1D2HighFieldNumber;
const int SensorInfo::kP2D2LowFieldNumber;
const int SensorInfo::kP2D2HighFieldNumber;
const int SensorInfo::kP3D2LowFieldNumber;
const int SensorInfo::kP3D2HighFieldNumber;
const int SensorInfo::kAFieldNumber;
const int SensorInfo::kBFieldNumber;
const int SensorInfo::kCFieldNumber;
const int SensorInfo::kDFieldNumber;
const int SensorInfo::kFFieldNumber;
const int SensorInfo::kGFieldNumber;
const int SensorInfo::kTAmbOffsetFieldNumber;
const int SensorInfo::kInjectionTimeOffsetFieldNumber;
const int SensorInfo::kAgeOffsetFieldNumber;
const int SensorInfo::kPowerOffsetFieldNumber;
const int SensorInfo::kNeuralNetBloodFieldNumber;
const int SensorInfo::kNeuralNetAQFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorInfo::SensorInfo()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:to.SensorInfo)
}

void SensorInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SensorInfo::SensorInfo(const SensorInfo& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:to.SensorInfo)
}

void SensorInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  channeltype_ = 0;
  sensortype_ = 0;
  sensordescriptornumber_ = 0;
  caldelimit_ = 0;
  sampledelimit_ = 0;
  postdelimit_ = 0;
  extrapolation_ = 0;
  calwindowsize_ = 0;
  samplewindowsize_ = 0;
  postwindowsize_ = 0;
  calcurveweight_ = 0;
  samplecurveweight_ = 0;
  calconcentration_ = 0;
  offset_ = 0;
  slopefactor_ = 0;
  calmeanlowqc_ = 0;
  calmeanhighqc_ = 0;
  caldriftlowqc_ = 0;
  caldrifthighqc_ = 0;
  calsecondlowqc_ = 0;
  calsecondhighqc_ = 0;
  calnoisehighqc_ = 0;
  samplemeanlowqc_ = 0;
  samplemeanhighqc_ = 0;
  sampledriftlowqc_ = 0;
  sampledrifthighqc_ = 0;
  samplesecondlowqc_ = 0;
  samplesecondhighqc_ = 0;
  samplenoisehighqc_ = 0;
  postmeanlowqc_ = 0;
  postmeanhighqc_ = 0;
  postdriftlowqc_ = 0;
  postdrifthighqc_ = 0;
  postsecondlowqc_ = 0;
  postsecondhighqc_ = 0;
  postnoisehighqc_ = 0;
  deltadriftlowqc_ = 0;
  deltadrifthighqc_ = 0;
  param1_ = 0;
  param2_ = 0;
  param3_ = 0;
  param4_ = 0;
  param5_ = 0;
  param6_ = 0;
  param7_ = 0;
  param8_ = 0;
  param9_ = 0;
  param10_ = 0;
  param11_ = 0;
  param12_ = 0;
  param13_ = 0;
  param14_ = 0;
  param15_ = 0;
  param16_ = 0;
  param17_ = 0;
  param18_ = 0;
  param19_ = 0;
  param20_ = 0;
  param21_ = 0;
  param22_ = 0;
  param23_ = 0;
  param24_ = 0;
  param25_ = 0;
  param26_ = 0;
  param27_ = 0;
  param28_ = 0;
  param29_ = 0;
  param30_ = 0;
  param31_ = 0;
  param32_ = 0;
  param33_ = 0;
  param34_ = 0;
  param35_ = 0;
  param36_ = 0;
  param37_ = 0;
  param38_ = 0;
  param39_ = 0;
  param40_ = 0;
  param41_ = 0;
  param42_ = 0;
  param43_ = 0;
  param44_ = 0;
  param45_ = 0;
  param46_ = 0;
  param47_ = 0;
  param48_ = 0;
  param49_ = 0;
  param50_ = 0;
  param51_ = 0;
  param52_ = 0;
  param53_ = 0;
  param54_ = 0;
  param55_ = 0;
  param56_ = 0;
  param57_ = 0;
  param58_ = 0;
  param59_ = 0;
  param60_ = 0;
  param61_ = 0;
  param62_ = 0;
  param63_ = 0;
  param64_ = 0;
  param65_ = 0;
  param66_ = 0;
  param67_ = 0;
  param68_ = 0;
  param69_ = 0;
  param70_ = 0;
  param71_ = 0;
  param72_ = 0;
  param73_ = 0;
  param74_ = 0;
  param75_ = 0;
  param76_ = 0;
  param77_ = 0;
  param78_ = 0;
  param79_ = 0;
  param80_ = 0;
  param81_ = 0;
  param82_ = 0;
  param83_ = 0;
  param84_ = 0;
  param85_ = 0;
  param86_ = 0;
  param87_ = 0;
  param88_ = 0;
  param89_ = 0;
  param90_ = 0;
  param91_ = 0;
  param92_ = 0;
  param93_ = 0;
  param94_ = 0;
  param95_ = 0;
  param96_ = 0;
  param97_ = 0;
  param98_ = 0;
  param99_ = 0;
  param100_ = 0;
  readermeanlow_ = 0;
  readermeanhigh_ = 0;
  readerdriftlow_ = 0;
  readerdrifthigh_ = 0;
  readernoiselow_ = 0;
  readernoisehigh_ = 0;
  tminus_ = 0;
  tplus_ = 0;
  postcurvatureweight_ = 0;
  bloodpointstoskip_ = 0;
  bloodpointsinwindow_ = 0;
  bloodnoisehigh_ = 0;
  aqpointstoskip_ = 0;
  aqpointsinwindow_ = 0;
  aqnoisehigh_ = 0;
  latebloodpointstoskip_ = 0;
  latebloodpointsinwindow_ = 0;
  latebloodnoisehigh_ = 0;
  lateaqpointstoskip_ = 0;
  lateaqpointsinwindow_ = 0;
  lateaqnoisehigh_ = 0;
  rtpointlimitlow_ = 0;
  rtpointlimithigh_ = 0;
  d1low_ = 0;
  d1high_ = 0;
  p1d2low_ = 0;
  p1d2high_ = 0;
  p2d2low_ = 0;
  p2d2high_ = 0;
  p3d2low_ = 0;
  p3d2high_ = 0;
  a_ = 0;
  b_ = 0;
  c_ = 0;
  d_ = 0;
  f_ = 0;
  g_ = 0;
  tamboffset_ = 0;
  injectiontimeoffset_ = 0;
  ageoffset_ = 0;
  poweroffset_ = 0;
  neuralnetblood_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  neuralnetaq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SensorInfo::~SensorInfo() {
  // @@protoc_insertion_point(destructor:to.SensorInfo)
  SharedDtor();
}

void SensorInfo::SharedDtor() {
  neuralnetblood_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  neuralnetaq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SensorInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SensorInfo& SensorInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_sensor_5finfo_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_sensor_5finfo_2eproto();
#endif
  return *default_instance_;
}

SensorInfo* SensorInfo::default_instance_ = NULL;

SensorInfo* SensorInfo::New(::google::protobuf::Arena* arena) const {
  SensorInfo* n = new SensorInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SensorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:to.SensorInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SensorInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SensorInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(channeltype_, calwindowsize_);
  sensordescriptornumber_ = 0;
  ZR_(samplewindowsize_, calmeanlowqc_);
  ZR_(calmeanhighqc_, samplemeanhighqc_);
  ZR_(sampledriftlowqc_, postdriftlowqc_);
  ZR_(postdrifthighqc_, param2_);
  ZR_(param3_, param10_);
  ZR_(param11_, param18_);
  ZR_(param19_, param26_);
  ZR_(param27_, param33_);
  param34_ = 0;
  ZR_(param35_, param42_);
  ZR_(param43_, param50_);
  ZR_(param51_, param58_);
  ZR_(param59_, param66_);
  ZR_(param67_, param74_);
  ZR_(param75_, param82_);
  ZR_(param83_, param90_);
  ZR_(param91_, param98_);
  ZR_(param99_, readernoiselow_);
  readermeanlow_ = 0;
  readernoisehigh_ = 0;
  ZR_(tminus_, tplus_);
  ZR_(bloodpointstoskip_, aqpointstoskip_);
  aqpointsinwindow_ = 0;
  ZR_(latebloodpointstoskip_, rtpointlimitlow_);
  aqnoisehigh_ = 0;
  lateaqpointsinwindow_ = 0;
  ZR_(rtpointlimithigh_, p3d2low_);
  ZR_(p3d2high_, tamboffset_);
  ZR_(injectiontimeoffset_, poweroffset_);
  neuralnetblood_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  neuralnetaq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SensorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:to.SensorInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 channelType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channeltype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sensorType;
        break;
      }

      // optional int32 sensorType = 2;
      case 2: {
        if (tag == 16) {
         parse_sensorType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensortype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sensorDescriptorNumber;
        break;
      }

      // optional int32 sensorDescriptorNumber = 3;
      case 3: {
        if (tag == 24) {
         parse_sensorDescriptorNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensordescriptornumber_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_calDelimit;
        break;
      }

      // optional double calDelimit = 4;
      case 4: {
        if (tag == 33) {
         parse_calDelimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &caldelimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_sampleDelimit;
        break;
      }

      // optional double sampleDelimit = 5;
      case 5: {
        if (tag == 41) {
         parse_sampleDelimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sampledelimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_postDelimit;
        break;
      }

      // optional double postDelimit = 6;
      case 6: {
        if (tag == 49) {
         parse_postDelimit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postdelimit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_extrapolation;
        break;
      }

      // optional double extrapolation = 7;
      case 7: {
        if (tag == 57) {
         parse_extrapolation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &extrapolation_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_calWindowSize;
        break;
      }

      // optional double calWindowSize = 8;
      case 8: {
        if (tag == 65) {
         parse_calWindowSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calwindowsize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_sampleWindowSize;
        break;
      }

      // optional double sampleWindowSize = 9;
      case 9: {
        if (tag == 73) {
         parse_sampleWindowSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplewindowsize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_postWindowSize;
        break;
      }

      // optional double postWindowSize = 10;
      case 10: {
        if (tag == 81) {
         parse_postWindowSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postwindowsize_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_calCurveWeight;
        break;
      }

      // optional double calCurveWeight = 11;
      case 11: {
        if (tag == 89) {
         parse_calCurveWeight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calcurveweight_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_sampleCurveWeight;
        break;
      }

      // optional double sampleCurveWeight = 12;
      case 12: {
        if (tag == 97) {
         parse_sampleCurveWeight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplecurveweight_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_calConcentration;
        break;
      }

      // optional double calConcentration = 13;
      case 13: {
        if (tag == 105) {
         parse_calConcentration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calconcentration_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_offset;
        break;
      }

      // optional double offset = 14;
      case 14: {
        if (tag == 113) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_slopeFactor;
        break;
      }

      // optional double slopeFactor = 15;
      case 15: {
        if (tag == 121) {
         parse_slopeFactor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &slopefactor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_CalMeanLowQC;
        break;
      }

      // optional double CalMeanLowQC = 16;
      case 16: {
        if (tag == 129) {
         parse_CalMeanLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calmeanlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_CalMeanHighQC;
        break;
      }

      // optional double CalMeanHighQC = 17;
      case 17: {
        if (tag == 137) {
         parse_CalMeanHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calmeanhighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_CalDriftLowQC;
        break;
      }

      // optional double CalDriftLowQC = 18;
      case 18: {
        if (tag == 145) {
         parse_CalDriftLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &caldriftlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_CalDriftHighQC;
        break;
      }

      // optional double CalDriftHighQC = 19;
      case 19: {
        if (tag == 153) {
         parse_CalDriftHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &caldrifthighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_CalSecondLowQC;
        break;
      }

      // optional double CalSecondLowQC = 20;
      case 20: {
        if (tag == 161) {
         parse_CalSecondLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calsecondlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_CalSecondHighQC;
        break;
      }

      // optional double CalSecondHighQC = 21;
      case 21: {
        if (tag == 169) {
         parse_CalSecondHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calsecondhighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_CalNoiseHighQC;
        break;
      }

      // optional double CalNoiseHighQC = 22;
      case 22: {
        if (tag == 177) {
         parse_CalNoiseHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &calnoisehighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_SampleMeanLowQC;
        break;
      }

      // optional double SampleMeanLowQC = 23;
      case 23: {
        if (tag == 185) {
         parse_SampleMeanLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplemeanlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_SampleMeanHighQC;
        break;
      }

      // optional double SampleMeanHighQC = 24;
      case 24: {
        if (tag == 193) {
         parse_SampleMeanHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplemeanhighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(201)) goto parse_SampleDriftLowQC;
        break;
      }

      // optional double SampleDriftLowQC = 25;
      case 25: {
        if (tag == 201) {
         parse_SampleDriftLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sampledriftlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(209)) goto parse_SampleDriftHighQC;
        break;
      }

      // optional double SampleDriftHighQC = 26;
      case 26: {
        if (tag == 209) {
         parse_SampleDriftHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sampledrifthighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(217)) goto parse_SampleSecondLowQC;
        break;
      }

      // optional double SampleSecondLowQC = 27;
      case 27: {
        if (tag == 217) {
         parse_SampleSecondLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplesecondlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(225)) goto parse_SampleSecondHighQC;
        break;
      }

      // optional double SampleSecondHighQC = 28;
      case 28: {
        if (tag == 225) {
         parse_SampleSecondHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplesecondhighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(233)) goto parse_SampleNoiseHighQC;
        break;
      }

      // optional double SampleNoiseHighQC = 29;
      case 29: {
        if (tag == 233) {
         parse_SampleNoiseHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &samplenoisehighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(241)) goto parse_PostMeanLowQC;
        break;
      }

      // optional double PostMeanLowQC = 30;
      case 30: {
        if (tag == 241) {
         parse_PostMeanLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postmeanlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(249)) goto parse_PostMeanHighQC;
        break;
      }

      // optional double PostMeanHighQC = 31;
      case 31: {
        if (tag == 249) {
         parse_PostMeanHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postmeanhighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(257)) goto parse_PostDriftLowQC;
        break;
      }

      // optional double PostDriftLowQC = 32;
      case 32: {
        if (tag == 257) {
         parse_PostDriftLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postdriftlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(265)) goto parse_PostDriftHighQC;
        break;
      }

      // optional double PostDriftHighQC = 33;
      case 33: {
        if (tag == 265) {
         parse_PostDriftHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postdrifthighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(273)) goto parse_PostSecondLowQC;
        break;
      }

      // optional double PostSecondLowQC = 34;
      case 34: {
        if (tag == 273) {
         parse_PostSecondLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postsecondlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(281)) goto parse_PostSecondHighQC;
        break;
      }

      // optional double PostSecondHighQC = 35;
      case 35: {
        if (tag == 281) {
         parse_PostSecondHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postsecondhighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(289)) goto parse_PostNoiseHighQC;
        break;
      }

      // optional double PostNoiseHighQC = 36;
      case 36: {
        if (tag == 289) {
         parse_PostNoiseHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postnoisehighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(297)) goto parse_DeltaDriftLowQC;
        break;
      }

      // optional double DeltaDriftLowQC = 37;
      case 37: {
        if (tag == 297) {
         parse_DeltaDriftLowQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deltadriftlowqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(305)) goto parse_DeltaDriftHighQC;
        break;
      }

      // optional double DeltaDriftHighQC = 38;
      case 38: {
        if (tag == 305) {
         parse_DeltaDriftHighQC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deltadrifthighqc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(313)) goto parse_param1;
        break;
      }

      // optional double param1 = 39;
      case 39: {
        if (tag == 313) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(321)) goto parse_param2;
        break;
      }

      // optional double param2 = 40;
      case 40: {
        if (tag == 321) {
         parse_param2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(329)) goto parse_param3;
        break;
      }

      // optional double param3 = 41;
      case 41: {
        if (tag == 329) {
         parse_param3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(337)) goto parse_param4;
        break;
      }

      // optional double param4 = 42;
      case 42: {
        if (tag == 337) {
         parse_param4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(345)) goto parse_param5;
        break;
      }

      // optional double param5 = 43;
      case 43: {
        if (tag == 345) {
         parse_param5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(353)) goto parse_param6;
        break;
      }

      // optional double param6 = 44;
      case 44: {
        if (tag == 353) {
         parse_param6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param6_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(361)) goto parse_param7;
        break;
      }

      // optional double param7 = 45;
      case 45: {
        if (tag == 361) {
         parse_param7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param7_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(369)) goto parse_param8;
        break;
      }

      // optional double param8 = 46;
      case 46: {
        if (tag == 369) {
         parse_param8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param8_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(377)) goto parse_param9;
        break;
      }

      // optional double param9 = 47;
      case 47: {
        if (tag == 377) {
         parse_param9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param9_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(385)) goto parse_param10;
        break;
      }

      // optional double param10 = 48;
      case 48: {
        if (tag == 385) {
         parse_param10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param10_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(393)) goto parse_param11;
        break;
      }

      // optional double param11 = 49;
      case 49: {
        if (tag == 393) {
         parse_param11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param11_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(401)) goto parse_param12;
        break;
      }

      // optional double param12 = 50;
      case 50: {
        if (tag == 401) {
         parse_param12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param12_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(409)) goto parse_param13;
        break;
      }

      // optional double param13 = 51;
      case 51: {
        if (tag == 409) {
         parse_param13:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param13_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(417)) goto parse_param14;
        break;
      }

      // optional double param14 = 52;
      case 52: {
        if (tag == 417) {
         parse_param14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param14_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(425)) goto parse_param15;
        break;
      }

      // optional double param15 = 53;
      case 53: {
        if (tag == 425) {
         parse_param15:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param15_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(433)) goto parse_param16;
        break;
      }

      // optional double param16 = 54;
      case 54: {
        if (tag == 433) {
         parse_param16:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param16_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(441)) goto parse_param17;
        break;
      }

      // optional double param17 = 55;
      case 55: {
        if (tag == 441) {
         parse_param17:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param17_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(449)) goto parse_param18;
        break;
      }

      // optional double param18 = 56;
      case 56: {
        if (tag == 449) {
         parse_param18:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param18_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(457)) goto parse_param19;
        break;
      }

      // optional double param19 = 57;
      case 57: {
        if (tag == 457) {
         parse_param19:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param19_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(465)) goto parse_param20;
        break;
      }

      // optional double param20 = 58;
      case 58: {
        if (tag == 465) {
         parse_param20:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param20_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(473)) goto parse_param21;
        break;
      }

      // optional double param21 = 59;
      case 59: {
        if (tag == 473) {
         parse_param21:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param21_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(481)) goto parse_param22;
        break;
      }

      // optional double param22 = 60;
      case 60: {
        if (tag == 481) {
         parse_param22:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param22_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(489)) goto parse_param23;
        break;
      }

      // optional double param23 = 61;
      case 61: {
        if (tag == 489) {
         parse_param23:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param23_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(497)) goto parse_param24;
        break;
      }

      // optional double param24 = 62;
      case 62: {
        if (tag == 497) {
         parse_param24:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param24_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(505)) goto parse_param25;
        break;
      }

      // optional double param25 = 63;
      case 63: {
        if (tag == 505) {
         parse_param25:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param25_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(513)) goto parse_param26;
        break;
      }

      // optional double param26 = 64;
      case 64: {
        if (tag == 513) {
         parse_param26:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param26_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(521)) goto parse_param27;
        break;
      }

      // optional double param27 = 65;
      case 65: {
        if (tag == 521) {
         parse_param27:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param27_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(529)) goto parse_param28;
        break;
      }

      // optional double param28 = 66;
      case 66: {
        if (tag == 529) {
         parse_param28:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param28_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(537)) goto parse_param29;
        break;
      }

      // optional double param29 = 67;
      case 67: {
        if (tag == 537) {
         parse_param29:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param29_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(545)) goto parse_param30;
        break;
      }

      // optional double param30 = 68;
      case 68: {
        if (tag == 545) {
         parse_param30:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param30_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(553)) goto parse_param31;
        break;
      }

      // optional double param31 = 69;
      case 69: {
        if (tag == 553) {
         parse_param31:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param31_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(561)) goto parse_param32;
        break;
      }

      // optional double param32 = 70;
      case 70: {
        if (tag == 561) {
         parse_param32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(569)) goto parse_param33;
        break;
      }

      // optional double param33 = 71;
      case 71: {
        if (tag == 569) {
         parse_param33:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param33_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(577)) goto parse_param34;
        break;
      }

      // optional double param34 = 72;
      case 72: {
        if (tag == 577) {
         parse_param34:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param34_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(585)) goto parse_param35;
        break;
      }

      // optional double param35 = 73;
      case 73: {
        if (tag == 585) {
         parse_param35:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param35_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(593)) goto parse_param36;
        break;
      }

      // optional double param36 = 74;
      case 74: {
        if (tag == 593) {
         parse_param36:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param36_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(601)) goto parse_param37;
        break;
      }

      // optional double param37 = 75;
      case 75: {
        if (tag == 601) {
         parse_param37:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param37_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(609)) goto parse_param38;
        break;
      }

      // optional double param38 = 76;
      case 76: {
        if (tag == 609) {
         parse_param38:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param38_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(617)) goto parse_param39;
        break;
      }

      // optional double param39 = 77;
      case 77: {
        if (tag == 617) {
         parse_param39:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param39_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(625)) goto parse_param40;
        break;
      }

      // optional double param40 = 78;
      case 78: {
        if (tag == 625) {
         parse_param40:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param40_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(633)) goto parse_param41;
        break;
      }

      // optional double param41 = 79;
      case 79: {
        if (tag == 633) {
         parse_param41:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param41_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(641)) goto parse_param42;
        break;
      }

      // optional double param42 = 80;
      case 80: {
        if (tag == 641) {
         parse_param42:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param42_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(649)) goto parse_param43;
        break;
      }

      // optional double param43 = 81;
      case 81: {
        if (tag == 649) {
         parse_param43:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param43_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(657)) goto parse_param44;
        break;
      }

      // optional double param44 = 82;
      case 82: {
        if (tag == 657) {
         parse_param44:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param44_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(665)) goto parse_param45;
        break;
      }

      // optional double param45 = 83;
      case 83: {
        if (tag == 665) {
         parse_param45:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param45_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(673)) goto parse_param46;
        break;
      }

      // optional double param46 = 84;
      case 84: {
        if (tag == 673) {
         parse_param46:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param46_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(681)) goto parse_param47;
        break;
      }

      // optional double param47 = 85;
      case 85: {
        if (tag == 681) {
         parse_param47:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param47_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(689)) goto parse_param48;
        break;
      }

      // optional double param48 = 86;
      case 86: {
        if (tag == 689) {
         parse_param48:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param48_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(697)) goto parse_param49;
        break;
      }

      // optional double param49 = 87;
      case 87: {
        if (tag == 697) {
         parse_param49:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param49_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(705)) goto parse_param50;
        break;
      }

      // optional double param50 = 88;
      case 88: {
        if (tag == 705) {
         parse_param50:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param50_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(713)) goto parse_param51;
        break;
      }

      // optional double param51 = 89;
      case 89: {
        if (tag == 713) {
         parse_param51:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param51_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(721)) goto parse_param52;
        break;
      }

      // optional double param52 = 90;
      case 90: {
        if (tag == 721) {
         parse_param52:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param52_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(729)) goto parse_param53;
        break;
      }

      // optional double param53 = 91;
      case 91: {
        if (tag == 729) {
         parse_param53:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param53_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(737)) goto parse_param54;
        break;
      }

      // optional double param54 = 92;
      case 92: {
        if (tag == 737) {
         parse_param54:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param54_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(745)) goto parse_param55;
        break;
      }

      // optional double param55 = 93;
      case 93: {
        if (tag == 745) {
         parse_param55:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param55_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(753)) goto parse_param56;
        break;
      }

      // optional double param56 = 94;
      case 94: {
        if (tag == 753) {
         parse_param56:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param56_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(761)) goto parse_param57;
        break;
      }

      // optional double param57 = 95;
      case 95: {
        if (tag == 761) {
         parse_param57:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param57_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(769)) goto parse_param58;
        break;
      }

      // optional double param58 = 96;
      case 96: {
        if (tag == 769) {
         parse_param58:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param58_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(777)) goto parse_param59;
        break;
      }

      // optional double param59 = 97;
      case 97: {
        if (tag == 777) {
         parse_param59:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param59_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(785)) goto parse_param60;
        break;
      }

      // optional double param60 = 98;
      case 98: {
        if (tag == 785) {
         parse_param60:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param60_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(793)) goto parse_param61;
        break;
      }

      // optional double param61 = 99;
      case 99: {
        if (tag == 793) {
         parse_param61:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param61_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(801)) goto parse_param62;
        break;
      }

      // optional double param62 = 100;
      case 100: {
        if (tag == 801) {
         parse_param62:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param62_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(809)) goto parse_param63;
        break;
      }

      // optional double param63 = 101;
      case 101: {
        if (tag == 809) {
         parse_param63:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param63_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(817)) goto parse_param64;
        break;
      }

      // optional double param64 = 102;
      case 102: {
        if (tag == 817) {
         parse_param64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(825)) goto parse_param65;
        break;
      }

      // optional double param65 = 103;
      case 103: {
        if (tag == 825) {
         parse_param65:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param65_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(833)) goto parse_param66;
        break;
      }

      // optional double param66 = 104;
      case 104: {
        if (tag == 833) {
         parse_param66:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param66_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(841)) goto parse_param67;
        break;
      }

      // optional double param67 = 105;
      case 105: {
        if (tag == 841) {
         parse_param67:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param67_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(849)) goto parse_param68;
        break;
      }

      // optional double param68 = 106;
      case 106: {
        if (tag == 849) {
         parse_param68:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param68_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(857)) goto parse_param69;
        break;
      }

      // optional double param69 = 107;
      case 107: {
        if (tag == 857) {
         parse_param69:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param69_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(865)) goto parse_param70;
        break;
      }

      // optional double param70 = 108;
      case 108: {
        if (tag == 865) {
         parse_param70:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param70_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(873)) goto parse_param71;
        break;
      }

      // optional double param71 = 109;
      case 109: {
        if (tag == 873) {
         parse_param71:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param71_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(881)) goto parse_param72;
        break;
      }

      // optional double param72 = 110;
      case 110: {
        if (tag == 881) {
         parse_param72:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param72_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(889)) goto parse_param73;
        break;
      }

      // optional double param73 = 111;
      case 111: {
        if (tag == 889) {
         parse_param73:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param73_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(897)) goto parse_param74;
        break;
      }

      // optional double param74 = 112;
      case 112: {
        if (tag == 897) {
         parse_param74:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param74_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(905)) goto parse_param75;
        break;
      }

      // optional double param75 = 113;
      case 113: {
        if (tag == 905) {
         parse_param75:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param75_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(913)) goto parse_param76;
        break;
      }

      // optional double param76 = 114;
      case 114: {
        if (tag == 913) {
         parse_param76:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param76_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(921)) goto parse_param77;
        break;
      }

      // optional double param77 = 115;
      case 115: {
        if (tag == 921) {
         parse_param77:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param77_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(929)) goto parse_param78;
        break;
      }

      // optional double param78 = 116;
      case 116: {
        if (tag == 929) {
         parse_param78:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param78_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(937)) goto parse_param79;
        break;
      }

      // optional double param79 = 117;
      case 117: {
        if (tag == 937) {
         parse_param79:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param79_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(945)) goto parse_param80;
        break;
      }

      // optional double param80 = 118;
      case 118: {
        if (tag == 945) {
         parse_param80:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param80_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(953)) goto parse_param81;
        break;
      }

      // optional double param81 = 119;
      case 119: {
        if (tag == 953) {
         parse_param81:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param81_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(961)) goto parse_param82;
        break;
      }

      // optional double param82 = 120;
      case 120: {
        if (tag == 961) {
         parse_param82:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param82_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(969)) goto parse_param83;
        break;
      }

      // optional double param83 = 121;
      case 121: {
        if (tag == 969) {
         parse_param83:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param83_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(977)) goto parse_param84;
        break;
      }

      // optional double param84 = 122;
      case 122: {
        if (tag == 977) {
         parse_param84:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param84_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(985)) goto parse_param85;
        break;
      }

      // optional double param85 = 123;
      case 123: {
        if (tag == 985) {
         parse_param85:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param85_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(993)) goto parse_param86;
        break;
      }

      // optional double param86 = 124;
      case 124: {
        if (tag == 993) {
         parse_param86:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param86_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1001)) goto parse_param87;
        break;
      }

      // optional double param87 = 125;
      case 125: {
        if (tag == 1001) {
         parse_param87:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param87_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1009)) goto parse_param88;
        break;
      }

      // optional double param88 = 126;
      case 126: {
        if (tag == 1009) {
         parse_param88:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param88_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1017)) goto parse_param89;
        break;
      }

      // optional double param89 = 127;
      case 127: {
        if (tag == 1017) {
         parse_param89:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param89_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1025)) goto parse_param90;
        break;
      }

      // optional double param90 = 128;
      case 128: {
        if (tag == 1025) {
         parse_param90:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param90_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1033)) goto parse_param91;
        break;
      }

      // optional double param91 = 129;
      case 129: {
        if (tag == 1033) {
         parse_param91:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param91_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1041)) goto parse_param92;
        break;
      }

      // optional double param92 = 130;
      case 130: {
        if (tag == 1041) {
         parse_param92:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param92_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1049)) goto parse_param93;
        break;
      }

      // optional double param93 = 131;
      case 131: {
        if (tag == 1049) {
         parse_param93:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param93_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1057)) goto parse_param94;
        break;
      }

      // optional double param94 = 132;
      case 132: {
        if (tag == 1057) {
         parse_param94:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param94_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1065)) goto parse_param95;
        break;
      }

      // optional double param95 = 133;
      case 133: {
        if (tag == 1065) {
         parse_param95:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param95_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1073)) goto parse_param96;
        break;
      }

      // optional double param96 = 134;
      case 134: {
        if (tag == 1073) {
         parse_param96:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param96_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1081)) goto parse_param97;
        break;
      }

      // optional double param97 = 135;
      case 135: {
        if (tag == 1081) {
         parse_param97:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param97_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1089)) goto parse_param98;
        break;
      }

      // optional double param98 = 136;
      case 136: {
        if (tag == 1089) {
         parse_param98:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param98_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1097)) goto parse_param99;
        break;
      }

      // optional double param99 = 137;
      case 137: {
        if (tag == 1097) {
         parse_param99:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param99_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1105)) goto parse_param100;
        break;
      }

      // optional double param100 = 138;
      case 138: {
        if (tag == 1105) {
         parse_param100:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &param100_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1117)) goto parse_readerMeanLow;
        break;
      }

      // optional float readerMeanLow = 139;
      case 139: {
        if (tag == 1117) {
         parse_readerMeanLow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &readermeanlow_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1125)) goto parse_readerMeanHigh;
        break;
      }

      // optional float readerMeanHigh = 140;
      case 140: {
        if (tag == 1125) {
         parse_readerMeanHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &readermeanhigh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1133)) goto parse_readerDriftLow;
        break;
      }

      // optional float readerDriftLow = 141;
      case 141: {
        if (tag == 1133) {
         parse_readerDriftLow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &readerdriftlow_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1141)) goto parse_readerDriftHigh;
        break;
      }

      // optional float readerDriftHigh = 142;
      case 142: {
        if (tag == 1141) {
         parse_readerDriftHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &readerdrifthigh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1149)) goto parse_readerNoiseLow;
        break;
      }

      // optional float readerNoiseLow = 143;
      case 143: {
        if (tag == 1149) {
         parse_readerNoiseLow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &readernoiselow_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1157)) goto parse_readerNoiseHigh;
        break;
      }

      // optional float readerNoiseHigh = 144;
      case 144: {
        if (tag == 1157) {
         parse_readerNoiseHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &readernoisehigh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1161)) goto parse_tMinus;
        break;
      }

      // optional double tMinus = 145;
      case 145: {
        if (tag == 1161) {
         parse_tMinus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tminus_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1169)) goto parse_tPlus;
        break;
      }

      // optional double tPlus = 146;
      case 146: {
        if (tag == 1169) {
         parse_tPlus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tplus_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1177)) goto parse_postCurvatureWeight;
        break;
      }

      // optional double postCurvatureWeight = 147;
      case 147: {
        if (tag == 1177) {
         parse_postCurvatureWeight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &postcurvatureweight_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1184)) goto parse_bloodPointsToSkip;
        break;
      }

      // optional int32 bloodPointsToSkip = 148;
      case 148: {
        if (tag == 1184) {
         parse_bloodPointsToSkip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bloodpointstoskip_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1192)) goto parse_bloodPointsInWindow;
        break;
      }

      // optional int32 bloodPointsInWindow = 149;
      case 149: {
        if (tag == 1192) {
         parse_bloodPointsInWindow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bloodpointsinwindow_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1201)) goto parse_bloodNoiseHigh;
        break;
      }

      // optional double bloodNoiseHigh = 150;
      case 150: {
        if (tag == 1201) {
         parse_bloodNoiseHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bloodnoisehigh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1208)) goto parse_aqPointsToSkip;
        break;
      }

      // optional int32 aqPointsToSkip = 151;
      case 151: {
        if (tag == 1208) {
         parse_aqPointsToSkip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aqpointstoskip_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1216)) goto parse_aqPointsInWindow;
        break;
      }

      // optional int32 aqPointsInWindow = 152;
      case 152: {
        if (tag == 1216) {
         parse_aqPointsInWindow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aqpointsinwindow_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1225)) goto parse_aqNoiseHigh;
        break;
      }

      // optional double aqNoiseHigh = 153;
      case 153: {
        if (tag == 1225) {
         parse_aqNoiseHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &aqnoisehigh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1232)) goto parse_lateBloodPointsToSkip;
        break;
      }

      // optional int32 lateBloodPointsToSkip = 154;
      case 154: {
        if (tag == 1232) {
         parse_lateBloodPointsToSkip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &latebloodpointstoskip_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1240)) goto parse_lateBloodPointsInWindow;
        break;
      }

      // optional int32 lateBloodPointsInWindow = 155;
      case 155: {
        if (tag == 1240) {
         parse_lateBloodPointsInWindow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &latebloodpointsinwindow_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1249)) goto parse_lateBloodNoiseHigh;
        break;
      }

      // optional double lateBloodNoiseHigh = 156;
      case 156: {
        if (tag == 1249) {
         parse_lateBloodNoiseHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latebloodnoisehigh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1256)) goto parse_lateAqPointsToSkip;
        break;
      }

      // optional int32 lateAqPointsToSkip = 157;
      case 157: {
        if (tag == 1256) {
         parse_lateAqPointsToSkip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lateaqpointstoskip_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1264)) goto parse_lateAqPointsInWindow;
        break;
      }

      // optional int32 lateAqPointsInWindow = 158;
      case 158: {
        if (tag == 1264) {
         parse_lateAqPointsInWindow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lateaqpointsinwindow_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1273)) goto parse_lateAqNoiseHigh;
        break;
      }

      // optional double lateAqNoiseHigh = 159;
      case 159: {
        if (tag == 1273) {
         parse_lateAqNoiseHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lateaqnoisehigh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1281)) goto parse_rtPointLimitLow;
        break;
      }

      // optional double rtPointLimitLow = 160;
      case 160: {
        if (tag == 1281) {
         parse_rtPointLimitLow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rtpointlimitlow_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1289)) goto parse_rtPointLimitHigh;
        break;
      }

      // optional double rtPointLimitHigh = 161;
      case 161: {
        if (tag == 1289) {
         parse_rtPointLimitHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rtpointlimithigh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1297)) goto parse_d1Low;
        break;
      }

      // optional double d1Low = 162;
      case 162: {
        if (tag == 1297) {
         parse_d1Low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &d1low_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1305)) goto parse_d1High;
        break;
      }

      // optional double d1High = 163;
      case 163: {
        if (tag == 1305) {
         parse_d1High:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &d1high_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1313)) goto parse_p1d2Low;
        break;
      }

      // optional double p1d2Low = 164;
      case 164: {
        if (tag == 1313) {
         parse_p1d2Low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p1d2low_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1321)) goto parse_p1d2High;
        break;
      }

      // optional double p1d2High = 165;
      case 165: {
        if (tag == 1321) {
         parse_p1d2High:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p1d2high_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1329)) goto parse_p2d2Low;
        break;
      }

      // optional double p2d2Low = 166;
      case 166: {
        if (tag == 1329) {
         parse_p2d2Low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p2d2low_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1337)) goto parse_p2d2High;
        break;
      }

      // optional double p2d2High = 167;
      case 167: {
        if (tag == 1337) {
         parse_p2d2High:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p2d2high_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1345)) goto parse_p3d2Low;
        break;
      }

      // optional double p3d2Low = 168;
      case 168: {
        if (tag == 1345) {
         parse_p3d2Low:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p3d2low_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1353)) goto parse_p3d2High;
        break;
      }

      // optional double p3d2High = 169;
      case 169: {
        if (tag == 1353) {
         parse_p3d2High:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &p3d2high_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1361)) goto parse_A;
        break;
      }

      // optional double A = 170;
      case 170: {
        if (tag == 1361) {
         parse_A:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1369)) goto parse_B;
        break;
      }

      // optional double B = 171;
      case 171: {
        if (tag == 1369) {
         parse_B:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &b_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1377)) goto parse_C;
        break;
      }

      // optional double C = 172;
      case 172: {
        if (tag == 1377) {
         parse_C:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &c_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1385)) goto parse_D;
        break;
      }

      // optional double D = 173;
      case 173: {
        if (tag == 1385) {
         parse_D:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &d_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1393)) goto parse_F;
        break;
      }

      // optional double F = 174;
      case 174: {
        if (tag == 1393) {
         parse_F:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1401)) goto parse_G;
        break;
      }

      // optional double G = 175;
      case 175: {
        if (tag == 1401) {
         parse_G:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &g_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1409)) goto parse_TAmbOffset;
        break;
      }

      // optional double TAmbOffset = 176;
      case 176: {
        if (tag == 1409) {
         parse_TAmbOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tamboffset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1417)) goto parse_InjectionTimeOffset;
        break;
      }

      // optional double InjectionTimeOffset = 177;
      case 177: {
        if (tag == 1417) {
         parse_InjectionTimeOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &injectiontimeoffset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1425)) goto parse_AgeOffset;
        break;
      }

      // optional double AgeOffset = 178;
      case 178: {
        if (tag == 1425) {
         parse_AgeOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ageoffset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1433)) goto parse_PowerOffset;
        break;
      }

      // optional double PowerOffset = 179;
      case 179: {
        if (tag == 1433) {
         parse_PowerOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &poweroffset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1442)) goto parse_NeuralNetBlood;
        break;
      }

      // optional string NeuralNetBlood = 180;
      case 180: {
        if (tag == 1442) {
         parse_NeuralNetBlood:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_neuralnetblood()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->neuralnetblood().data(), this->neuralnetblood().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "to.SensorInfo.NeuralNetBlood"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1450)) goto parse_NeuralNetAQ;
        break;
      }

      // optional string NeuralNetAQ = 181;
      case 181: {
        if (tag == 1450) {
         parse_NeuralNetAQ:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_neuralnetaq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->neuralnetaq().data(), this->neuralnetaq().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "to.SensorInfo.NeuralNetAQ"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:to.SensorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:to.SensorInfo)
  return false;
#undef DO_
}

void SensorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:to.SensorInfo)
  // optional int32 channelType = 1;
  if (this->channeltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->channeltype(), output);
  }

  // optional int32 sensorType = 2;
  if (this->sensortype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sensortype(), output);
  }

  // optional int32 sensorDescriptorNumber = 3;
  if (this->sensordescriptornumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sensordescriptornumber(), output);
  }

  // optional double calDelimit = 4;
  if (this->caldelimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->caldelimit(), output);
  }

  // optional double sampleDelimit = 5;
  if (this->sampledelimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->sampledelimit(), output);
  }

  // optional double postDelimit = 6;
  if (this->postdelimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->postdelimit(), output);
  }

  // optional double extrapolation = 7;
  if (this->extrapolation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->extrapolation(), output);
  }

  // optional double calWindowSize = 8;
  if (this->calwindowsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->calwindowsize(), output);
  }

  // optional double sampleWindowSize = 9;
  if (this->samplewindowsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->samplewindowsize(), output);
  }

  // optional double postWindowSize = 10;
  if (this->postwindowsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->postwindowsize(), output);
  }

  // optional double calCurveWeight = 11;
  if (this->calcurveweight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->calcurveweight(), output);
  }

  // optional double sampleCurveWeight = 12;
  if (this->samplecurveweight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->samplecurveweight(), output);
  }

  // optional double calConcentration = 13;
  if (this->calconcentration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->calconcentration(), output);
  }

  // optional double offset = 14;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->offset(), output);
  }

  // optional double slopeFactor = 15;
  if (this->slopefactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->slopefactor(), output);
  }

  // optional double CalMeanLowQC = 16;
  if (this->calmeanlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->calmeanlowqc(), output);
  }

  // optional double CalMeanHighQC = 17;
  if (this->calmeanhighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->calmeanhighqc(), output);
  }

  // optional double CalDriftLowQC = 18;
  if (this->caldriftlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->caldriftlowqc(), output);
  }

  // optional double CalDriftHighQC = 19;
  if (this->caldrifthighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->caldrifthighqc(), output);
  }

  // optional double CalSecondLowQC = 20;
  if (this->calsecondlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->calsecondlowqc(), output);
  }

  // optional double CalSecondHighQC = 21;
  if (this->calsecondhighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->calsecondhighqc(), output);
  }

  // optional double CalNoiseHighQC = 22;
  if (this->calnoisehighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->calnoisehighqc(), output);
  }

  // optional double SampleMeanLowQC = 23;
  if (this->samplemeanlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->samplemeanlowqc(), output);
  }

  // optional double SampleMeanHighQC = 24;
  if (this->samplemeanhighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->samplemeanhighqc(), output);
  }

  // optional double SampleDriftLowQC = 25;
  if (this->sampledriftlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->sampledriftlowqc(), output);
  }

  // optional double SampleDriftHighQC = 26;
  if (this->sampledrifthighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->sampledrifthighqc(), output);
  }

  // optional double SampleSecondLowQC = 27;
  if (this->samplesecondlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->samplesecondlowqc(), output);
  }

  // optional double SampleSecondHighQC = 28;
  if (this->samplesecondhighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(28, this->samplesecondhighqc(), output);
  }

  // optional double SampleNoiseHighQC = 29;
  if (this->samplenoisehighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->samplenoisehighqc(), output);
  }

  // optional double PostMeanLowQC = 30;
  if (this->postmeanlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(30, this->postmeanlowqc(), output);
  }

  // optional double PostMeanHighQC = 31;
  if (this->postmeanhighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->postmeanhighqc(), output);
  }

  // optional double PostDriftLowQC = 32;
  if (this->postdriftlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(32, this->postdriftlowqc(), output);
  }

  // optional double PostDriftHighQC = 33;
  if (this->postdrifthighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(33, this->postdrifthighqc(), output);
  }

  // optional double PostSecondLowQC = 34;
  if (this->postsecondlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(34, this->postsecondlowqc(), output);
  }

  // optional double PostSecondHighQC = 35;
  if (this->postsecondhighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(35, this->postsecondhighqc(), output);
  }

  // optional double PostNoiseHighQC = 36;
  if (this->postnoisehighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(36, this->postnoisehighqc(), output);
  }

  // optional double DeltaDriftLowQC = 37;
  if (this->deltadriftlowqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(37, this->deltadriftlowqc(), output);
  }

  // optional double DeltaDriftHighQC = 38;
  if (this->deltadrifthighqc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(38, this->deltadrifthighqc(), output);
  }

  // optional double param1 = 39;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(39, this->param1(), output);
  }

  // optional double param2 = 40;
  if (this->param2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(40, this->param2(), output);
  }

  // optional double param3 = 41;
  if (this->param3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(41, this->param3(), output);
  }

  // optional double param4 = 42;
  if (this->param4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(42, this->param4(), output);
  }

  // optional double param5 = 43;
  if (this->param5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(43, this->param5(), output);
  }

  // optional double param6 = 44;
  if (this->param6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(44, this->param6(), output);
  }

  // optional double param7 = 45;
  if (this->param7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(45, this->param7(), output);
  }

  // optional double param8 = 46;
  if (this->param8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(46, this->param8(), output);
  }

  // optional double param9 = 47;
  if (this->param9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(47, this->param9(), output);
  }

  // optional double param10 = 48;
  if (this->param10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(48, this->param10(), output);
  }

  // optional double param11 = 49;
  if (this->param11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(49, this->param11(), output);
  }

  // optional double param12 = 50;
  if (this->param12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(50, this->param12(), output);
  }

  // optional double param13 = 51;
  if (this->param13() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(51, this->param13(), output);
  }

  // optional double param14 = 52;
  if (this->param14() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(52, this->param14(), output);
  }

  // optional double param15 = 53;
  if (this->param15() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(53, this->param15(), output);
  }

  // optional double param16 = 54;
  if (this->param16() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(54, this->param16(), output);
  }

  // optional double param17 = 55;
  if (this->param17() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(55, this->param17(), output);
  }

  // optional double param18 = 56;
  if (this->param18() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(56, this->param18(), output);
  }

  // optional double param19 = 57;
  if (this->param19() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(57, this->param19(), output);
  }

  // optional double param20 = 58;
  if (this->param20() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(58, this->param20(), output);
  }

  // optional double param21 = 59;
  if (this->param21() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(59, this->param21(), output);
  }

  // optional double param22 = 60;
  if (this->param22() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(60, this->param22(), output);
  }

  // optional double param23 = 61;
  if (this->param23() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(61, this->param23(), output);
  }

  // optional double param24 = 62;
  if (this->param24() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(62, this->param24(), output);
  }

  // optional double param25 = 63;
  if (this->param25() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(63, this->param25(), output);
  }

  // optional double param26 = 64;
  if (this->param26() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(64, this->param26(), output);
  }

  // optional double param27 = 65;
  if (this->param27() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(65, this->param27(), output);
  }

  // optional double param28 = 66;
  if (this->param28() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(66, this->param28(), output);
  }

  // optional double param29 = 67;
  if (this->param29() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(67, this->param29(), output);
  }

  // optional double param30 = 68;
  if (this->param30() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(68, this->param30(), output);
  }

  // optional double param31 = 69;
  if (this->param31() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(69, this->param31(), output);
  }

  // optional double param32 = 70;
  if (this->param32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(70, this->param32(), output);
  }

  // optional double param33 = 71;
  if (this->param33() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(71, this->param33(), output);
  }

  // optional double param34 = 72;
  if (this->param34() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(72, this->param34(), output);
  }

  // optional double param35 = 73;
  if (this->param35() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(73, this->param35(), output);
  }

  // optional double param36 = 74;
  if (this->param36() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(74, this->param36(), output);
  }

  // optional double param37 = 75;
  if (this->param37() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(75, this->param37(), output);
  }

  // optional double param38 = 76;
  if (this->param38() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(76, this->param38(), output);
  }

  // optional double param39 = 77;
  if (this->param39() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(77, this->param39(), output);
  }

  // optional double param40 = 78;
  if (this->param40() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(78, this->param40(), output);
  }

  // optional double param41 = 79;
  if (this->param41() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(79, this->param41(), output);
  }

  // optional double param42 = 80;
  if (this->param42() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(80, this->param42(), output);
  }

  // optional double param43 = 81;
  if (this->param43() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(81, this->param43(), output);
  }

  // optional double param44 = 82;
  if (this->param44() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(82, this->param44(), output);
  }

  // optional double param45 = 83;
  if (this->param45() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(83, this->param45(), output);
  }

  // optional double param46 = 84;
  if (this->param46() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(84, this->param46(), output);
  }

  // optional double param47 = 85;
  if (this->param47() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(85, this->param47(), output);
  }

  // optional double param48 = 86;
  if (this->param48() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(86, this->param48(), output);
  }

  // optional double param49 = 87;
  if (this->param49() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(87, this->param49(), output);
  }

  // optional double param50 = 88;
  if (this->param50() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(88, this->param50(), output);
  }

  // optional double param51 = 89;
  if (this->param51() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(89, this->param51(), output);
  }

  // optional double param52 = 90;
  if (this->param52() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(90, this->param52(), output);
  }

  // optional double param53 = 91;
  if (this->param53() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(91, this->param53(), output);
  }

  // optional double param54 = 92;
  if (this->param54() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(92, this->param54(), output);
  }

  // optional double param55 = 93;
  if (this->param55() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(93, this->param55(), output);
  }

  // optional double param56 = 94;
  if (this->param56() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(94, this->param56(), output);
  }

  // optional double param57 = 95;
  if (this->param57() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(95, this->param57(), output);
  }

  // optional double param58 = 96;
  if (this->param58() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(96, this->param58(), output);
  }

  // optional double param59 = 97;
  if (this->param59() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(97, this->param59(), output);
  }

  // optional double param60 = 98;
  if (this->param60() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(98, this->param60(), output);
  }

  // optional double param61 = 99;
  if (this->param61() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(99, this->param61(), output);
  }

  // optional double param62 = 100;
  if (this->param62() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(100, this->param62(), output);
  }

  // optional double param63 = 101;
  if (this->param63() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(101, this->param63(), output);
  }

  // optional double param64 = 102;
  if (this->param64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(102, this->param64(), output);
  }

  // optional double param65 = 103;
  if (this->param65() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(103, this->param65(), output);
  }

  // optional double param66 = 104;
  if (this->param66() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(104, this->param66(), output);
  }

  // optional double param67 = 105;
  if (this->param67() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(105, this->param67(), output);
  }

  // optional double param68 = 106;
  if (this->param68() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(106, this->param68(), output);
  }

  // optional double param69 = 107;
  if (this->param69() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(107, this->param69(), output);
  }

  // optional double param70 = 108;
  if (this->param70() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(108, this->param70(), output);
  }

  // optional double param71 = 109;
  if (this->param71() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(109, this->param71(), output);
  }

  // optional double param72 = 110;
  if (this->param72() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(110, this->param72(), output);
  }

  // optional double param73 = 111;
  if (this->param73() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(111, this->param73(), output);
  }

  // optional double param74 = 112;
  if (this->param74() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(112, this->param74(), output);
  }

  // optional double param75 = 113;
  if (this->param75() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(113, this->param75(), output);
  }

  // optional double param76 = 114;
  if (this->param76() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(114, this->param76(), output);
  }

  // optional double param77 = 115;
  if (this->param77() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(115, this->param77(), output);
  }

  // optional double param78 = 116;
  if (this->param78() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(116, this->param78(), output);
  }

  // optional double param79 = 117;
  if (this->param79() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(117, this->param79(), output);
  }

  // optional double param80 = 118;
  if (this->param80() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(118, this->param80(), output);
  }

  // optional double param81 = 119;
  if (this->param81() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(119, this->param81(), output);
  }

  // optional double param82 = 120;
  if (this->param82() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(120, this->param82(), output);
  }

  // optional double param83 = 121;
  if (this->param83() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(121, this->param83(), output);
  }

  // optional double param84 = 122;
  if (this->param84() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(122, this->param84(), output);
  }

  // optional double param85 = 123;
  if (this->param85() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(123, this->param85(), output);
  }

  // optional double param86 = 124;
  if (this->param86() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(124, this->param86(), output);
  }

  // optional double param87 = 125;
  if (this->param87() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(125, this->param87(), output);
  }

  // optional double param88 = 126;
  if (this->param88() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(126, this->param88(), output);
  }

  // optional double param89 = 127;
  if (this->param89() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(127, this->param89(), output);
  }

  // optional double param90 = 128;
  if (this->param90() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(128, this->param90(), output);
  }

  // optional double param91 = 129;
  if (this->param91() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(129, this->param91(), output);
  }

  // optional double param92 = 130;
  if (this->param92() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(130, this->param92(), output);
  }

  // optional double param93 = 131;
  if (this->param93() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(131, this->param93(), output);
  }

  // optional double param94 = 132;
  if (this->param94() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(132, this->param94(), output);
  }

  // optional double param95 = 133;
  if (this->param95() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(133, this->param95(), output);
  }

  // optional double param96 = 134;
  if (this->param96() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(134, this->param96(), output);
  }

  // optional double param97 = 135;
  if (this->param97() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(135, this->param97(), output);
  }

  // optional double param98 = 136;
  if (this->param98() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(136, this->param98(), output);
  }

  // optional double param99 = 137;
  if (this->param99() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(137, this->param99(), output);
  }

  // optional double param100 = 138;
  if (this->param100() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(138, this->param100(), output);
  }

  // optional float readerMeanLow = 139;
  if (this->readermeanlow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(139, this->readermeanlow(), output);
  }

  // optional float readerMeanHigh = 140;
  if (this->readermeanhigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(140, this->readermeanhigh(), output);
  }

  // optional float readerDriftLow = 141;
  if (this->readerdriftlow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(141, this->readerdriftlow(), output);
  }

  // optional float readerDriftHigh = 142;
  if (this->readerdrifthigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(142, this->readerdrifthigh(), output);
  }

  // optional float readerNoiseLow = 143;
  if (this->readernoiselow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(143, this->readernoiselow(), output);
  }

  // optional float readerNoiseHigh = 144;
  if (this->readernoisehigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(144, this->readernoisehigh(), output);
  }

  // optional double tMinus = 145;
  if (this->tminus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(145, this->tminus(), output);
  }

  // optional double tPlus = 146;
  if (this->tplus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(146, this->tplus(), output);
  }

  // optional double postCurvatureWeight = 147;
  if (this->postcurvatureweight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(147, this->postcurvatureweight(), output);
  }

  // optional int32 bloodPointsToSkip = 148;
  if (this->bloodpointstoskip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(148, this->bloodpointstoskip(), output);
  }

  // optional int32 bloodPointsInWindow = 149;
  if (this->bloodpointsinwindow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(149, this->bloodpointsinwindow(), output);
  }

  // optional double bloodNoiseHigh = 150;
  if (this->bloodnoisehigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(150, this->bloodnoisehigh(), output);
  }

  // optional int32 aqPointsToSkip = 151;
  if (this->aqpointstoskip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(151, this->aqpointstoskip(), output);
  }

  // optional int32 aqPointsInWindow = 152;
  if (this->aqpointsinwindow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(152, this->aqpointsinwindow(), output);
  }

  // optional double aqNoiseHigh = 153;
  if (this->aqnoisehigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(153, this->aqnoisehigh(), output);
  }

  // optional int32 lateBloodPointsToSkip = 154;
  if (this->latebloodpointstoskip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(154, this->latebloodpointstoskip(), output);
  }

  // optional int32 lateBloodPointsInWindow = 155;
  if (this->latebloodpointsinwindow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(155, this->latebloodpointsinwindow(), output);
  }

  // optional double lateBloodNoiseHigh = 156;
  if (this->latebloodnoisehigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(156, this->latebloodnoisehigh(), output);
  }

  // optional int32 lateAqPointsToSkip = 157;
  if (this->lateaqpointstoskip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(157, this->lateaqpointstoskip(), output);
  }

  // optional int32 lateAqPointsInWindow = 158;
  if (this->lateaqpointsinwindow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(158, this->lateaqpointsinwindow(), output);
  }

  // optional double lateAqNoiseHigh = 159;
  if (this->lateaqnoisehigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(159, this->lateaqnoisehigh(), output);
  }

  // optional double rtPointLimitLow = 160;
  if (this->rtpointlimitlow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(160, this->rtpointlimitlow(), output);
  }

  // optional double rtPointLimitHigh = 161;
  if (this->rtpointlimithigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(161, this->rtpointlimithigh(), output);
  }

  // optional double d1Low = 162;
  if (this->d1low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(162, this->d1low(), output);
  }

  // optional double d1High = 163;
  if (this->d1high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(163, this->d1high(), output);
  }

  // optional double p1d2Low = 164;
  if (this->p1d2low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(164, this->p1d2low(), output);
  }

  // optional double p1d2High = 165;
  if (this->p1d2high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(165, this->p1d2high(), output);
  }

  // optional double p2d2Low = 166;
  if (this->p2d2low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(166, this->p2d2low(), output);
  }

  // optional double p2d2High = 167;
  if (this->p2d2high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(167, this->p2d2high(), output);
  }

  // optional double p3d2Low = 168;
  if (this->p3d2low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(168, this->p3d2low(), output);
  }

  // optional double p3d2High = 169;
  if (this->p3d2high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(169, this->p3d2high(), output);
  }

  // optional double A = 170;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(170, this->a(), output);
  }

  // optional double B = 171;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(171, this->b(), output);
  }

  // optional double C = 172;
  if (this->c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(172, this->c(), output);
  }

  // optional double D = 173;
  if (this->d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(173, this->d(), output);
  }

  // optional double F = 174;
  if (this->f() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(174, this->f(), output);
  }

  // optional double G = 175;
  if (this->g() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(175, this->g(), output);
  }

  // optional double TAmbOffset = 176;
  if (this->tamboffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(176, this->tamboffset(), output);
  }

  // optional double InjectionTimeOffset = 177;
  if (this->injectiontimeoffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(177, this->injectiontimeoffset(), output);
  }

  // optional double AgeOffset = 178;
  if (this->ageoffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(178, this->ageoffset(), output);
  }

  // optional double PowerOffset = 179;
  if (this->poweroffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(179, this->poweroffset(), output);
  }

  // optional string NeuralNetBlood = 180;
  if (this->neuralnetblood().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->neuralnetblood().data(), this->neuralnetblood().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "to.SensorInfo.NeuralNetBlood");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      180, this->neuralnetblood(), output);
  }

  // optional string NeuralNetAQ = 181;
  if (this->neuralnetaq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->neuralnetaq().data(), this->neuralnetaq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "to.SensorInfo.NeuralNetAQ");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      181, this->neuralnetaq(), output);
  }

  // @@protoc_insertion_point(serialize_end:to.SensorInfo)
}

int SensorInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:to.SensorInfo)
  int total_size = 0;

  // optional int32 channelType = 1;
  if (this->channeltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channeltype());
  }

  // optional int32 sensorType = 2;
  if (this->sensortype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sensortype());
  }

  // optional int32 sensorDescriptorNumber = 3;
  if (this->sensordescriptornumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sensordescriptornumber());
  }

  // optional double calDelimit = 4;
  if (this->caldelimit() != 0) {
    total_size += 1 + 8;
  }

  // optional double sampleDelimit = 5;
  if (this->sampledelimit() != 0) {
    total_size += 1 + 8;
  }

  // optional double postDelimit = 6;
  if (this->postdelimit() != 0) {
    total_size += 1 + 8;
  }

  // optional double extrapolation = 7;
  if (this->extrapolation() != 0) {
    total_size += 1 + 8;
  }

  // optional double calWindowSize = 8;
  if (this->calwindowsize() != 0) {
    total_size += 1 + 8;
  }

  // optional double sampleWindowSize = 9;
  if (this->samplewindowsize() != 0) {
    total_size += 1 + 8;
  }

  // optional double postWindowSize = 10;
  if (this->postwindowsize() != 0) {
    total_size += 1 + 8;
  }

  // optional double calCurveWeight = 11;
  if (this->calcurveweight() != 0) {
    total_size += 1 + 8;
  }

  // optional double sampleCurveWeight = 12;
  if (this->samplecurveweight() != 0) {
    total_size += 1 + 8;
  }

  // optional double calConcentration = 13;
  if (this->calconcentration() != 0) {
    total_size += 1 + 8;
  }

  // optional double offset = 14;
  if (this->offset() != 0) {
    total_size += 1 + 8;
  }

  // optional double slopeFactor = 15;
  if (this->slopefactor() != 0) {
    total_size += 1 + 8;
  }

  // optional double CalMeanLowQC = 16;
  if (this->calmeanlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double CalMeanHighQC = 17;
  if (this->calmeanhighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double CalDriftLowQC = 18;
  if (this->caldriftlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double CalDriftHighQC = 19;
  if (this->caldrifthighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double CalSecondLowQC = 20;
  if (this->calsecondlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double CalSecondHighQC = 21;
  if (this->calsecondhighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double CalNoiseHighQC = 22;
  if (this->calnoisehighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double SampleMeanLowQC = 23;
  if (this->samplemeanlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double SampleMeanHighQC = 24;
  if (this->samplemeanhighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double SampleDriftLowQC = 25;
  if (this->sampledriftlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double SampleDriftHighQC = 26;
  if (this->sampledrifthighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double SampleSecondLowQC = 27;
  if (this->samplesecondlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double SampleSecondHighQC = 28;
  if (this->samplesecondhighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double SampleNoiseHighQC = 29;
  if (this->samplenoisehighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double PostMeanLowQC = 30;
  if (this->postmeanlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double PostMeanHighQC = 31;
  if (this->postmeanhighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double PostDriftLowQC = 32;
  if (this->postdriftlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double PostDriftHighQC = 33;
  if (this->postdrifthighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double PostSecondLowQC = 34;
  if (this->postsecondlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double PostSecondHighQC = 35;
  if (this->postsecondhighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double PostNoiseHighQC = 36;
  if (this->postnoisehighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double DeltaDriftLowQC = 37;
  if (this->deltadriftlowqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double DeltaDriftHighQC = 38;
  if (this->deltadrifthighqc() != 0) {
    total_size += 2 + 8;
  }

  // optional double param1 = 39;
  if (this->param1() != 0) {
    total_size += 2 + 8;
  }

  // optional double param2 = 40;
  if (this->param2() != 0) {
    total_size += 2 + 8;
  }

  // optional double param3 = 41;
  if (this->param3() != 0) {
    total_size += 2 + 8;
  }

  // optional double param4 = 42;
  if (this->param4() != 0) {
    total_size += 2 + 8;
  }

  // optional double param5 = 43;
  if (this->param5() != 0) {
    total_size += 2 + 8;
  }

  // optional double param6 = 44;
  if (this->param6() != 0) {
    total_size += 2 + 8;
  }

  // optional double param7 = 45;
  if (this->param7() != 0) {
    total_size += 2 + 8;
  }

  // optional double param8 = 46;
  if (this->param8() != 0) {
    total_size += 2 + 8;
  }

  // optional double param9 = 47;
  if (this->param9() != 0) {
    total_size += 2 + 8;
  }

  // optional double param10 = 48;
  if (this->param10() != 0) {
    total_size += 2 + 8;
  }

  // optional double param11 = 49;
  if (this->param11() != 0) {
    total_size += 2 + 8;
  }

  // optional double param12 = 50;
  if (this->param12() != 0) {
    total_size += 2 + 8;
  }

  // optional double param13 = 51;
  if (this->param13() != 0) {
    total_size += 2 + 8;
  }

  // optional double param14 = 52;
  if (this->param14() != 0) {
    total_size += 2 + 8;
  }

  // optional double param15 = 53;
  if (this->param15() != 0) {
    total_size += 2 + 8;
  }

  // optional double param16 = 54;
  if (this->param16() != 0) {
    total_size += 2 + 8;
  }

  // optional double param17 = 55;
  if (this->param17() != 0) {
    total_size += 2 + 8;
  }

  // optional double param18 = 56;
  if (this->param18() != 0) {
    total_size += 2 + 8;
  }

  // optional double param19 = 57;
  if (this->param19() != 0) {
    total_size += 2 + 8;
  }

  // optional double param20 = 58;
  if (this->param20() != 0) {
    total_size += 2 + 8;
  }

  // optional double param21 = 59;
  if (this->param21() != 0) {
    total_size += 2 + 8;
  }

  // optional double param22 = 60;
  if (this->param22() != 0) {
    total_size += 2 + 8;
  }

  // optional double param23 = 61;
  if (this->param23() != 0) {
    total_size += 2 + 8;
  }

  // optional double param24 = 62;
  if (this->param24() != 0) {
    total_size += 2 + 8;
  }

  // optional double param25 = 63;
  if (this->param25() != 0) {
    total_size += 2 + 8;
  }

  // optional double param26 = 64;
  if (this->param26() != 0) {
    total_size += 2 + 8;
  }

  // optional double param27 = 65;
  if (this->param27() != 0) {
    total_size += 2 + 8;
  }

  // optional double param28 = 66;
  if (this->param28() != 0) {
    total_size += 2 + 8;
  }

  // optional double param29 = 67;
  if (this->param29() != 0) {
    total_size += 2 + 8;
  }

  // optional double param30 = 68;
  if (this->param30() != 0) {
    total_size += 2 + 8;
  }

  // optional double param31 = 69;
  if (this->param31() != 0) {
    total_size += 2 + 8;
  }

  // optional double param32 = 70;
  if (this->param32() != 0) {
    total_size += 2 + 8;
  }

  // optional double param33 = 71;
  if (this->param33() != 0) {
    total_size += 2 + 8;
  }

  // optional double param34 = 72;
  if (this->param34() != 0) {
    total_size += 2 + 8;
  }

  // optional double param35 = 73;
  if (this->param35() != 0) {
    total_size += 2 + 8;
  }

  // optional double param36 = 74;
  if (this->param36() != 0) {
    total_size += 2 + 8;
  }

  // optional double param37 = 75;
  if (this->param37() != 0) {
    total_size += 2 + 8;
  }

  // optional double param38 = 76;
  if (this->param38() != 0) {
    total_size += 2 + 8;
  }

  // optional double param39 = 77;
  if (this->param39() != 0) {
    total_size += 2 + 8;
  }

  // optional double param40 = 78;
  if (this->param40() != 0) {
    total_size += 2 + 8;
  }

  // optional double param41 = 79;
  if (this->param41() != 0) {
    total_size += 2 + 8;
  }

  // optional double param42 = 80;
  if (this->param42() != 0) {
    total_size += 2 + 8;
  }

  // optional double param43 = 81;
  if (this->param43() != 0) {
    total_size += 2 + 8;
  }

  // optional double param44 = 82;
  if (this->param44() != 0) {
    total_size += 2 + 8;
  }

  // optional double param45 = 83;
  if (this->param45() != 0) {
    total_size += 2 + 8;
  }

  // optional double param46 = 84;
  if (this->param46() != 0) {
    total_size += 2 + 8;
  }

  // optional double param47 = 85;
  if (this->param47() != 0) {
    total_size += 2 + 8;
  }

  // optional double param48 = 86;
  if (this->param48() != 0) {
    total_size += 2 + 8;
  }

  // optional double param49 = 87;
  if (this->param49() != 0) {
    total_size += 2 + 8;
  }

  // optional double param50 = 88;
  if (this->param50() != 0) {
    total_size += 2 + 8;
  }

  // optional double param51 = 89;
  if (this->param51() != 0) {
    total_size += 2 + 8;
  }

  // optional double param52 = 90;
  if (this->param52() != 0) {
    total_size += 2 + 8;
  }

  // optional double param53 = 91;
  if (this->param53() != 0) {
    total_size += 2 + 8;
  }

  // optional double param54 = 92;
  if (this->param54() != 0) {
    total_size += 2 + 8;
  }

  // optional double param55 = 93;
  if (this->param55() != 0) {
    total_size += 2 + 8;
  }

  // optional double param56 = 94;
  if (this->param56() != 0) {
    total_size += 2 + 8;
  }

  // optional double param57 = 95;
  if (this->param57() != 0) {
    total_size += 2 + 8;
  }

  // optional double param58 = 96;
  if (this->param58() != 0) {
    total_size += 2 + 8;
  }

  // optional double param59 = 97;
  if (this->param59() != 0) {
    total_size += 2 + 8;
  }

  // optional double param60 = 98;
  if (this->param60() != 0) {
    total_size += 2 + 8;
  }

  // optional double param61 = 99;
  if (this->param61() != 0) {
    total_size += 2 + 8;
  }

  // optional double param62 = 100;
  if (this->param62() != 0) {
    total_size += 2 + 8;
  }

  // optional double param63 = 101;
  if (this->param63() != 0) {
    total_size += 2 + 8;
  }

  // optional double param64 = 102;
  if (this->param64() != 0) {
    total_size += 2 + 8;
  }

  // optional double param65 = 103;
  if (this->param65() != 0) {
    total_size += 2 + 8;
  }

  // optional double param66 = 104;
  if (this->param66() != 0) {
    total_size += 2 + 8;
  }

  // optional double param67 = 105;
  if (this->param67() != 0) {
    total_size += 2 + 8;
  }

  // optional double param68 = 106;
  if (this->param68() != 0) {
    total_size += 2 + 8;
  }

  // optional double param69 = 107;
  if (this->param69() != 0) {
    total_size += 2 + 8;
  }

  // optional double param70 = 108;
  if (this->param70() != 0) {
    total_size += 2 + 8;
  }

  // optional double param71 = 109;
  if (this->param71() != 0) {
    total_size += 2 + 8;
  }

  // optional double param72 = 110;
  if (this->param72() != 0) {
    total_size += 2 + 8;
  }

  // optional double param73 = 111;
  if (this->param73() != 0) {
    total_size += 2 + 8;
  }

  // optional double param74 = 112;
  if (this->param74() != 0) {
    total_size += 2 + 8;
  }

  // optional double param75 = 113;
  if (this->param75() != 0) {
    total_size += 2 + 8;
  }

  // optional double param76 = 114;
  if (this->param76() != 0) {
    total_size += 2 + 8;
  }

  // optional double param77 = 115;
  if (this->param77() != 0) {
    total_size += 2 + 8;
  }

  // optional double param78 = 116;
  if (this->param78() != 0) {
    total_size += 2 + 8;
  }

  // optional double param79 = 117;
  if (this->param79() != 0) {
    total_size += 2 + 8;
  }

  // optional double param80 = 118;
  if (this->param80() != 0) {
    total_size += 2 + 8;
  }

  // optional double param81 = 119;
  if (this->param81() != 0) {
    total_size += 2 + 8;
  }

  // optional double param82 = 120;
  if (this->param82() != 0) {
    total_size += 2 + 8;
  }

  // optional double param83 = 121;
  if (this->param83() != 0) {
    total_size += 2 + 8;
  }

  // optional double param84 = 122;
  if (this->param84() != 0) {
    total_size += 2 + 8;
  }

  // optional double param85 = 123;
  if (this->param85() != 0) {
    total_size += 2 + 8;
  }

  // optional double param86 = 124;
  if (this->param86() != 0) {
    total_size += 2 + 8;
  }

  // optional double param87 = 125;
  if (this->param87() != 0) {
    total_size += 2 + 8;
  }

  // optional double param88 = 126;
  if (this->param88() != 0) {
    total_size += 2 + 8;
  }

  // optional double param89 = 127;
  if (this->param89() != 0) {
    total_size += 2 + 8;
  }

  // optional double param90 = 128;
  if (this->param90() != 0) {
    total_size += 2 + 8;
  }

  // optional double param91 = 129;
  if (this->param91() != 0) {
    total_size += 2 + 8;
  }

  // optional double param92 = 130;
  if (this->param92() != 0) {
    total_size += 2 + 8;
  }

  // optional double param93 = 131;
  if (this->param93() != 0) {
    total_size += 2 + 8;
  }

  // optional double param94 = 132;
  if (this->param94() != 0) {
    total_size += 2 + 8;
  }

  // optional double param95 = 133;
  if (this->param95() != 0) {
    total_size += 2 + 8;
  }

  // optional double param96 = 134;
  if (this->param96() != 0) {
    total_size += 2 + 8;
  }

  // optional double param97 = 135;
  if (this->param97() != 0) {
    total_size += 2 + 8;
  }

  // optional double param98 = 136;
  if (this->param98() != 0) {
    total_size += 2 + 8;
  }

  // optional double param99 = 137;
  if (this->param99() != 0) {
    total_size += 2 + 8;
  }

  // optional double param100 = 138;
  if (this->param100() != 0) {
    total_size += 2 + 8;
  }

  // optional float readerMeanLow = 139;
  if (this->readermeanlow() != 0) {
    total_size += 2 + 4;
  }

  // optional float readerMeanHigh = 140;
  if (this->readermeanhigh() != 0) {
    total_size += 2 + 4;
  }

  // optional float readerDriftLow = 141;
  if (this->readerdriftlow() != 0) {
    total_size += 2 + 4;
  }

  // optional float readerDriftHigh = 142;
  if (this->readerdrifthigh() != 0) {
    total_size += 2 + 4;
  }

  // optional float readerNoiseLow = 143;
  if (this->readernoiselow() != 0) {
    total_size += 2 + 4;
  }

  // optional float readerNoiseHigh = 144;
  if (this->readernoisehigh() != 0) {
    total_size += 2 + 4;
  }

  // optional double tMinus = 145;
  if (this->tminus() != 0) {
    total_size += 2 + 8;
  }

  // optional double tPlus = 146;
  if (this->tplus() != 0) {
    total_size += 2 + 8;
  }

  // optional double postCurvatureWeight = 147;
  if (this->postcurvatureweight() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 bloodPointsToSkip = 148;
  if (this->bloodpointstoskip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bloodpointstoskip());
  }

  // optional int32 bloodPointsInWindow = 149;
  if (this->bloodpointsinwindow() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bloodpointsinwindow());
  }

  // optional double bloodNoiseHigh = 150;
  if (this->bloodnoisehigh() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 aqPointsToSkip = 151;
  if (this->aqpointstoskip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aqpointstoskip());
  }

  // optional int32 aqPointsInWindow = 152;
  if (this->aqpointsinwindow() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aqpointsinwindow());
  }

  // optional double aqNoiseHigh = 153;
  if (this->aqnoisehigh() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 lateBloodPointsToSkip = 154;
  if (this->latebloodpointstoskip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->latebloodpointstoskip());
  }

  // optional int32 lateBloodPointsInWindow = 155;
  if (this->latebloodpointsinwindow() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->latebloodpointsinwindow());
  }

  // optional double lateBloodNoiseHigh = 156;
  if (this->latebloodnoisehigh() != 0) {
    total_size += 2 + 8;
  }

  // optional int32 lateAqPointsToSkip = 157;
  if (this->lateaqpointstoskip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lateaqpointstoskip());
  }

  // optional int32 lateAqPointsInWindow = 158;
  if (this->lateaqpointsinwindow() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lateaqpointsinwindow());
  }

  // optional double lateAqNoiseHigh = 159;
  if (this->lateaqnoisehigh() != 0) {
    total_size += 2 + 8;
  }

  // optional double rtPointLimitLow = 160;
  if (this->rtpointlimitlow() != 0) {
    total_size += 2 + 8;
  }

  // optional double rtPointLimitHigh = 161;
  if (this->rtpointlimithigh() != 0) {
    total_size += 2 + 8;
  }

  // optional double d1Low = 162;
  if (this->d1low() != 0) {
    total_size += 2 + 8;
  }

  // optional double d1High = 163;
  if (this->d1high() != 0) {
    total_size += 2 + 8;
  }

  // optional double p1d2Low = 164;
  if (this->p1d2low() != 0) {
    total_size += 2 + 8;
  }

  // optional double p1d2High = 165;
  if (this->p1d2high() != 0) {
    total_size += 2 + 8;
  }

  // optional double p2d2Low = 166;
  if (this->p2d2low() != 0) {
    total_size += 2 + 8;
  }

  // optional double p2d2High = 167;
  if (this->p2d2high() != 0) {
    total_size += 2 + 8;
  }

  // optional double p3d2Low = 168;
  if (this->p3d2low() != 0) {
    total_size += 2 + 8;
  }

  // optional double p3d2High = 169;
  if (this->p3d2high() != 0) {
    total_size += 2 + 8;
  }

  // optional double A = 170;
  if (this->a() != 0) {
    total_size += 2 + 8;
  }

  // optional double B = 171;
  if (this->b() != 0) {
    total_size += 2 + 8;
  }

  // optional double C = 172;
  if (this->c() != 0) {
    total_size += 2 + 8;
  }

  // optional double D = 173;
  if (this->d() != 0) {
    total_size += 2 + 8;
  }

  // optional double F = 174;
  if (this->f() != 0) {
    total_size += 2 + 8;
  }

  // optional double G = 175;
  if (this->g() != 0) {
    total_size += 2 + 8;
  }

  // optional double TAmbOffset = 176;
  if (this->tamboffset() != 0) {
    total_size += 2 + 8;
  }

  // optional double InjectionTimeOffset = 177;
  if (this->injectiontimeoffset() != 0) {
    total_size += 2 + 8;
  }

  // optional double AgeOffset = 178;
  if (this->ageoffset() != 0) {
    total_size += 2 + 8;
  }

  // optional double PowerOffset = 179;
  if (this->poweroffset() != 0) {
    total_size += 2 + 8;
  }

  // optional string NeuralNetBlood = 180;
  if (this->neuralnetblood().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->neuralnetblood());
  }

  // optional string NeuralNetAQ = 181;
  if (this->neuralnetaq().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->neuralnetaq());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SensorInfo*>(&from));
}

void SensorInfo::MergeFrom(const SensorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:to.SensorInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.channeltype() != 0) {
    set_channeltype(from.channeltype());
  }
  if (from.sensortype() != 0) {
    set_sensortype(from.sensortype());
  }
  if (from.sensordescriptornumber() != 0) {
    set_sensordescriptornumber(from.sensordescriptornumber());
  }
  if (from.caldelimit() != 0) {
    set_caldelimit(from.caldelimit());
  }
  if (from.sampledelimit() != 0) {
    set_sampledelimit(from.sampledelimit());
  }
  if (from.postdelimit() != 0) {
    set_postdelimit(from.postdelimit());
  }
  if (from.extrapolation() != 0) {
    set_extrapolation(from.extrapolation());
  }
  if (from.calwindowsize() != 0) {
    set_calwindowsize(from.calwindowsize());
  }
  if (from.samplewindowsize() != 0) {
    set_samplewindowsize(from.samplewindowsize());
  }
  if (from.postwindowsize() != 0) {
    set_postwindowsize(from.postwindowsize());
  }
  if (from.calcurveweight() != 0) {
    set_calcurveweight(from.calcurveweight());
  }
  if (from.samplecurveweight() != 0) {
    set_samplecurveweight(from.samplecurveweight());
  }
  if (from.calconcentration() != 0) {
    set_calconcentration(from.calconcentration());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.slopefactor() != 0) {
    set_slopefactor(from.slopefactor());
  }
  if (from.calmeanlowqc() != 0) {
    set_calmeanlowqc(from.calmeanlowqc());
  }
  if (from.calmeanhighqc() != 0) {
    set_calmeanhighqc(from.calmeanhighqc());
  }
  if (from.caldriftlowqc() != 0) {
    set_caldriftlowqc(from.caldriftlowqc());
  }
  if (from.caldrifthighqc() != 0) {
    set_caldrifthighqc(from.caldrifthighqc());
  }
  if (from.calsecondlowqc() != 0) {
    set_calsecondlowqc(from.calsecondlowqc());
  }
  if (from.calsecondhighqc() != 0) {
    set_calsecondhighqc(from.calsecondhighqc());
  }
  if (from.calnoisehighqc() != 0) {
    set_calnoisehighqc(from.calnoisehighqc());
  }
  if (from.samplemeanlowqc() != 0) {
    set_samplemeanlowqc(from.samplemeanlowqc());
  }
  if (from.samplemeanhighqc() != 0) {
    set_samplemeanhighqc(from.samplemeanhighqc());
  }
  if (from.sampledriftlowqc() != 0) {
    set_sampledriftlowqc(from.sampledriftlowqc());
  }
  if (from.sampledrifthighqc() != 0) {
    set_sampledrifthighqc(from.sampledrifthighqc());
  }
  if (from.samplesecondlowqc() != 0) {
    set_samplesecondlowqc(from.samplesecondlowqc());
  }
  if (from.samplesecondhighqc() != 0) {
    set_samplesecondhighqc(from.samplesecondhighqc());
  }
  if (from.samplenoisehighqc() != 0) {
    set_samplenoisehighqc(from.samplenoisehighqc());
  }
  if (from.postmeanlowqc() != 0) {
    set_postmeanlowqc(from.postmeanlowqc());
  }
  if (from.postmeanhighqc() != 0) {
    set_postmeanhighqc(from.postmeanhighqc());
  }
  if (from.postdriftlowqc() != 0) {
    set_postdriftlowqc(from.postdriftlowqc());
  }
  if (from.postdrifthighqc() != 0) {
    set_postdrifthighqc(from.postdrifthighqc());
  }
  if (from.postsecondlowqc() != 0) {
    set_postsecondlowqc(from.postsecondlowqc());
  }
  if (from.postsecondhighqc() != 0) {
    set_postsecondhighqc(from.postsecondhighqc());
  }
  if (from.postnoisehighqc() != 0) {
    set_postnoisehighqc(from.postnoisehighqc());
  }
  if (from.deltadriftlowqc() != 0) {
    set_deltadriftlowqc(from.deltadriftlowqc());
  }
  if (from.deltadrifthighqc() != 0) {
    set_deltadrifthighqc(from.deltadrifthighqc());
  }
  if (from.param1() != 0) {
    set_param1(from.param1());
  }
  if (from.param2() != 0) {
    set_param2(from.param2());
  }
  if (from.param3() != 0) {
    set_param3(from.param3());
  }
  if (from.param4() != 0) {
    set_param4(from.param4());
  }
  if (from.param5() != 0) {
    set_param5(from.param5());
  }
  if (from.param6() != 0) {
    set_param6(from.param6());
  }
  if (from.param7() != 0) {
    set_param7(from.param7());
  }
  if (from.param8() != 0) {
    set_param8(from.param8());
  }
  if (from.param9() != 0) {
    set_param9(from.param9());
  }
  if (from.param10() != 0) {
    set_param10(from.param10());
  }
  if (from.param11() != 0) {
    set_param11(from.param11());
  }
  if (from.param12() != 0) {
    set_param12(from.param12());
  }
  if (from.param13() != 0) {
    set_param13(from.param13());
  }
  if (from.param14() != 0) {
    set_param14(from.param14());
  }
  if (from.param15() != 0) {
    set_param15(from.param15());
  }
  if (from.param16() != 0) {
    set_param16(from.param16());
  }
  if (from.param17() != 0) {
    set_param17(from.param17());
  }
  if (from.param18() != 0) {
    set_param18(from.param18());
  }
  if (from.param19() != 0) {
    set_param19(from.param19());
  }
  if (from.param20() != 0) {
    set_param20(from.param20());
  }
  if (from.param21() != 0) {
    set_param21(from.param21());
  }
  if (from.param22() != 0) {
    set_param22(from.param22());
  }
  if (from.param23() != 0) {
    set_param23(from.param23());
  }
  if (from.param24() != 0) {
    set_param24(from.param24());
  }
  if (from.param25() != 0) {
    set_param25(from.param25());
  }
  if (from.param26() != 0) {
    set_param26(from.param26());
  }
  if (from.param27() != 0) {
    set_param27(from.param27());
  }
  if (from.param28() != 0) {
    set_param28(from.param28());
  }
  if (from.param29() != 0) {
    set_param29(from.param29());
  }
  if (from.param30() != 0) {
    set_param30(from.param30());
  }
  if (from.param31() != 0) {
    set_param31(from.param31());
  }
  if (from.param32() != 0) {
    set_param32(from.param32());
  }
  if (from.param33() != 0) {
    set_param33(from.param33());
  }
  if (from.param34() != 0) {
    set_param34(from.param34());
  }
  if (from.param35() != 0) {
    set_param35(from.param35());
  }
  if (from.param36() != 0) {
    set_param36(from.param36());
  }
  if (from.param37() != 0) {
    set_param37(from.param37());
  }
  if (from.param38() != 0) {
    set_param38(from.param38());
  }
  if (from.param39() != 0) {
    set_param39(from.param39());
  }
  if (from.param40() != 0) {
    set_param40(from.param40());
  }
  if (from.param41() != 0) {
    set_param41(from.param41());
  }
  if (from.param42() != 0) {
    set_param42(from.param42());
  }
  if (from.param43() != 0) {
    set_param43(from.param43());
  }
  if (from.param44() != 0) {
    set_param44(from.param44());
  }
  if (from.param45() != 0) {
    set_param45(from.param45());
  }
  if (from.param46() != 0) {
    set_param46(from.param46());
  }
  if (from.param47() != 0) {
    set_param47(from.param47());
  }
  if (from.param48() != 0) {
    set_param48(from.param48());
  }
  if (from.param49() != 0) {
    set_param49(from.param49());
  }
  if (from.param50() != 0) {
    set_param50(from.param50());
  }
  if (from.param51() != 0) {
    set_param51(from.param51());
  }
  if (from.param52() != 0) {
    set_param52(from.param52());
  }
  if (from.param53() != 0) {
    set_param53(from.param53());
  }
  if (from.param54() != 0) {
    set_param54(from.param54());
  }
  if (from.param55() != 0) {
    set_param55(from.param55());
  }
  if (from.param56() != 0) {
    set_param56(from.param56());
  }
  if (from.param57() != 0) {
    set_param57(from.param57());
  }
  if (from.param58() != 0) {
    set_param58(from.param58());
  }
  if (from.param59() != 0) {
    set_param59(from.param59());
  }
  if (from.param60() != 0) {
    set_param60(from.param60());
  }
  if (from.param61() != 0) {
    set_param61(from.param61());
  }
  if (from.param62() != 0) {
    set_param62(from.param62());
  }
  if (from.param63() != 0) {
    set_param63(from.param63());
  }
  if (from.param64() != 0) {
    set_param64(from.param64());
  }
  if (from.param65() != 0) {
    set_param65(from.param65());
  }
  if (from.param66() != 0) {
    set_param66(from.param66());
  }
  if (from.param67() != 0) {
    set_param67(from.param67());
  }
  if (from.param68() != 0) {
    set_param68(from.param68());
  }
  if (from.param69() != 0) {
    set_param69(from.param69());
  }
  if (from.param70() != 0) {
    set_param70(from.param70());
  }
  if (from.param71() != 0) {
    set_param71(from.param71());
  }
  if (from.param72() != 0) {
    set_param72(from.param72());
  }
  if (from.param73() != 0) {
    set_param73(from.param73());
  }
  if (from.param74() != 0) {
    set_param74(from.param74());
  }
  if (from.param75() != 0) {
    set_param75(from.param75());
  }
  if (from.param76() != 0) {
    set_param76(from.param76());
  }
  if (from.param77() != 0) {
    set_param77(from.param77());
  }
  if (from.param78() != 0) {
    set_param78(from.param78());
  }
  if (from.param79() != 0) {
    set_param79(from.param79());
  }
  if (from.param80() != 0) {
    set_param80(from.param80());
  }
  if (from.param81() != 0) {
    set_param81(from.param81());
  }
  if (from.param82() != 0) {
    set_param82(from.param82());
  }
  if (from.param83() != 0) {
    set_param83(from.param83());
  }
  if (from.param84() != 0) {
    set_param84(from.param84());
  }
  if (from.param85() != 0) {
    set_param85(from.param85());
  }
  if (from.param86() != 0) {
    set_param86(from.param86());
  }
  if (from.param87() != 0) {
    set_param87(from.param87());
  }
  if (from.param88() != 0) {
    set_param88(from.param88());
  }
  if (from.param89() != 0) {
    set_param89(from.param89());
  }
  if (from.param90() != 0) {
    set_param90(from.param90());
  }
  if (from.param91() != 0) {
    set_param91(from.param91());
  }
  if (from.param92() != 0) {
    set_param92(from.param92());
  }
  if (from.param93() != 0) {
    set_param93(from.param93());
  }
  if (from.param94() != 0) {
    set_param94(from.param94());
  }
  if (from.param95() != 0) {
    set_param95(from.param95());
  }
  if (from.param96() != 0) {
    set_param96(from.param96());
  }
  if (from.param97() != 0) {
    set_param97(from.param97());
  }
  if (from.param98() != 0) {
    set_param98(from.param98());
  }
  if (from.param99() != 0) {
    set_param99(from.param99());
  }
  if (from.param100() != 0) {
    set_param100(from.param100());
  }
  if (from.readermeanlow() != 0) {
    set_readermeanlow(from.readermeanlow());
  }
  if (from.readermeanhigh() != 0) {
    set_readermeanhigh(from.readermeanhigh());
  }
  if (from.readerdriftlow() != 0) {
    set_readerdriftlow(from.readerdriftlow());
  }
  if (from.readerdrifthigh() != 0) {
    set_readerdrifthigh(from.readerdrifthigh());
  }
  if (from.readernoiselow() != 0) {
    set_readernoiselow(from.readernoiselow());
  }
  if (from.readernoisehigh() != 0) {
    set_readernoisehigh(from.readernoisehigh());
  }
  if (from.tminus() != 0) {
    set_tminus(from.tminus());
  }
  if (from.tplus() != 0) {
    set_tplus(from.tplus());
  }
  if (from.postcurvatureweight() != 0) {
    set_postcurvatureweight(from.postcurvatureweight());
  }
  if (from.bloodpointstoskip() != 0) {
    set_bloodpointstoskip(from.bloodpointstoskip());
  }
  if (from.bloodpointsinwindow() != 0) {
    set_bloodpointsinwindow(from.bloodpointsinwindow());
  }
  if (from.bloodnoisehigh() != 0) {
    set_bloodnoisehigh(from.bloodnoisehigh());
  }
  if (from.aqpointstoskip() != 0) {
    set_aqpointstoskip(from.aqpointstoskip());
  }
  if (from.aqpointsinwindow() != 0) {
    set_aqpointsinwindow(from.aqpointsinwindow());
  }
  if (from.aqnoisehigh() != 0) {
    set_aqnoisehigh(from.aqnoisehigh());
  }
  if (from.latebloodpointstoskip() != 0) {
    set_latebloodpointstoskip(from.latebloodpointstoskip());
  }
  if (from.latebloodpointsinwindow() != 0) {
    set_latebloodpointsinwindow(from.latebloodpointsinwindow());
  }
  if (from.latebloodnoisehigh() != 0) {
    set_latebloodnoisehigh(from.latebloodnoisehigh());
  }
  if (from.lateaqpointstoskip() != 0) {
    set_lateaqpointstoskip(from.lateaqpointstoskip());
  }
  if (from.lateaqpointsinwindow() != 0) {
    set_lateaqpointsinwindow(from.lateaqpointsinwindow());
  }
  if (from.lateaqnoisehigh() != 0) {
    set_lateaqnoisehigh(from.lateaqnoisehigh());
  }
  if (from.rtpointlimitlow() != 0) {
    set_rtpointlimitlow(from.rtpointlimitlow());
  }
  if (from.rtpointlimithigh() != 0) {
    set_rtpointlimithigh(from.rtpointlimithigh());
  }
  if (from.d1low() != 0) {
    set_d1low(from.d1low());
  }
  if (from.d1high() != 0) {
    set_d1high(from.d1high());
  }
  if (from.p1d2low() != 0) {
    set_p1d2low(from.p1d2low());
  }
  if (from.p1d2high() != 0) {
    set_p1d2high(from.p1d2high());
  }
  if (from.p2d2low() != 0) {
    set_p2d2low(from.p2d2low());
  }
  if (from.p2d2high() != 0) {
    set_p2d2high(from.p2d2high());
  }
  if (from.p3d2low() != 0) {
    set_p3d2low(from.p3d2low());
  }
  if (from.p3d2high() != 0) {
    set_p3d2high(from.p3d2high());
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
  if (from.c() != 0) {
    set_c(from.c());
  }
  if (from.d() != 0) {
    set_d(from.d());
  }
  if (from.f() != 0) {
    set_f(from.f());
  }
  if (from.g() != 0) {
    set_g(from.g());
  }
  if (from.tamboffset() != 0) {
    set_tamboffset(from.tamboffset());
  }
  if (from.injectiontimeoffset() != 0) {
    set_injectiontimeoffset(from.injectiontimeoffset());
  }
  if (from.ageoffset() != 0) {
    set_ageoffset(from.ageoffset());
  }
  if (from.poweroffset() != 0) {
    set_poweroffset(from.poweroffset());
  }
  if (from.neuralnetblood().size() > 0) {

    neuralnetblood_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.neuralnetblood_);
  }
  if (from.neuralnetaq().size() > 0) {

    neuralnetaq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.neuralnetaq_);
  }
}

void SensorInfo::CopyFrom(const SensorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to.SensorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorInfo::IsInitialized() const {

  return true;
}

void SensorInfo::Swap(SensorInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorInfo::InternalSwap(SensorInfo* other) {
  std::swap(channeltype_, other->channeltype_);
  std::swap(sensortype_, other->sensortype_);
  std::swap(sensordescriptornumber_, other->sensordescriptornumber_);
  std::swap(caldelimit_, other->caldelimit_);
  std::swap(sampledelimit_, other->sampledelimit_);
  std::swap(postdelimit_, other->postdelimit_);
  std::swap(extrapolation_, other->extrapolation_);
  std::swap(calwindowsize_, other->calwindowsize_);
  std::swap(samplewindowsize_, other->samplewindowsize_);
  std::swap(postwindowsize_, other->postwindowsize_);
  std::swap(calcurveweight_, other->calcurveweight_);
  std::swap(samplecurveweight_, other->samplecurveweight_);
  std::swap(calconcentration_, other->calconcentration_);
  std::swap(offset_, other->offset_);
  std::swap(slopefactor_, other->slopefactor_);
  std::swap(calmeanlowqc_, other->calmeanlowqc_);
  std::swap(calmeanhighqc_, other->calmeanhighqc_);
  std::swap(caldriftlowqc_, other->caldriftlowqc_);
  std::swap(caldrifthighqc_, other->caldrifthighqc_);
  std::swap(calsecondlowqc_, other->calsecondlowqc_);
  std::swap(calsecondhighqc_, other->calsecondhighqc_);
  std::swap(calnoisehighqc_, other->calnoisehighqc_);
  std::swap(samplemeanlowqc_, other->samplemeanlowqc_);
  std::swap(samplemeanhighqc_, other->samplemeanhighqc_);
  std::swap(sampledriftlowqc_, other->sampledriftlowqc_);
  std::swap(sampledrifthighqc_, other->sampledrifthighqc_);
  std::swap(samplesecondlowqc_, other->samplesecondlowqc_);
  std::swap(samplesecondhighqc_, other->samplesecondhighqc_);
  std::swap(samplenoisehighqc_, other->samplenoisehighqc_);
  std::swap(postmeanlowqc_, other->postmeanlowqc_);
  std::swap(postmeanhighqc_, other->postmeanhighqc_);
  std::swap(postdriftlowqc_, other->postdriftlowqc_);
  std::swap(postdrifthighqc_, other->postdrifthighqc_);
  std::swap(postsecondlowqc_, other->postsecondlowqc_);
  std::swap(postsecondhighqc_, other->postsecondhighqc_);
  std::swap(postnoisehighqc_, other->postnoisehighqc_);
  std::swap(deltadriftlowqc_, other->deltadriftlowqc_);
  std::swap(deltadrifthighqc_, other->deltadrifthighqc_);
  std::swap(param1_, other->param1_);
  std::swap(param2_, other->param2_);
  std::swap(param3_, other->param3_);
  std::swap(param4_, other->param4_);
  std::swap(param5_, other->param5_);
  std::swap(param6_, other->param6_);
  std::swap(param7_, other->param7_);
  std::swap(param8_, other->param8_);
  std::swap(param9_, other->param9_);
  std::swap(param10_, other->param10_);
  std::swap(param11_, other->param11_);
  std::swap(param12_, other->param12_);
  std::swap(param13_, other->param13_);
  std::swap(param14_, other->param14_);
  std::swap(param15_, other->param15_);
  std::swap(param16_, other->param16_);
  std::swap(param17_, other->param17_);
  std::swap(param18_, other->param18_);
  std::swap(param19_, other->param19_);
  std::swap(param20_, other->param20_);
  std::swap(param21_, other->param21_);
  std::swap(param22_, other->param22_);
  std::swap(param23_, other->param23_);
  std::swap(param24_, other->param24_);
  std::swap(param25_, other->param25_);
  std::swap(param26_, other->param26_);
  std::swap(param27_, other->param27_);
  std::swap(param28_, other->param28_);
  std::swap(param29_, other->param29_);
  std::swap(param30_, other->param30_);
  std::swap(param31_, other->param31_);
  std::swap(param32_, other->param32_);
  std::swap(param33_, other->param33_);
  std::swap(param34_, other->param34_);
  std::swap(param35_, other->param35_);
  std::swap(param36_, other->param36_);
  std::swap(param37_, other->param37_);
  std::swap(param38_, other->param38_);
  std::swap(param39_, other->param39_);
  std::swap(param40_, other->param40_);
  std::swap(param41_, other->param41_);
  std::swap(param42_, other->param42_);
  std::swap(param43_, other->param43_);
  std::swap(param44_, other->param44_);
  std::swap(param45_, other->param45_);
  std::swap(param46_, other->param46_);
  std::swap(param47_, other->param47_);
  std::swap(param48_, other->param48_);
  std::swap(param49_, other->param49_);
  std::swap(param50_, other->param50_);
  std::swap(param51_, other->param51_);
  std::swap(param52_, other->param52_);
  std::swap(param53_, other->param53_);
  std::swap(param54_, other->param54_);
  std::swap(param55_, other->param55_);
  std::swap(param56_, other->param56_);
  std::swap(param57_, other->param57_);
  std::swap(param58_, other->param58_);
  std::swap(param59_, other->param59_);
  std::swap(param60_, other->param60_);
  std::swap(param61_, other->param61_);
  std::swap(param62_, other->param62_);
  std::swap(param63_, other->param63_);
  std::swap(param64_, other->param64_);
  std::swap(param65_, other->param65_);
  std::swap(param66_, other->param66_);
  std::swap(param67_, other->param67_);
  std::swap(param68_, other->param68_);
  std::swap(param69_, other->param69_);
  std::swap(param70_, other->param70_);
  std::swap(param71_, other->param71_);
  std::swap(param72_, other->param72_);
  std::swap(param73_, other->param73_);
  std::swap(param74_, other->param74_);
  std::swap(param75_, other->param75_);
  std::swap(param76_, other->param76_);
  std::swap(param77_, other->param77_);
  std::swap(param78_, other->param78_);
  std::swap(param79_, other->param79_);
  std::swap(param80_, other->param80_);
  std::swap(param81_, other->param81_);
  std::swap(param82_, other->param82_);
  std::swap(param83_, other->param83_);
  std::swap(param84_, other->param84_);
  std::swap(param85_, other->param85_);
  std::swap(param86_, other->param86_);
  std::swap(param87_, other->param87_);
  std::swap(param88_, other->param88_);
  std::swap(param89_, other->param89_);
  std::swap(param90_, other->param90_);
  std::swap(param91_, other->param91_);
  std::swap(param92_, other->param92_);
  std::swap(param93_, other->param93_);
  std::swap(param94_, other->param94_);
  std::swap(param95_, other->param95_);
  std::swap(param96_, other->param96_);
  std::swap(param97_, other->param97_);
  std::swap(param98_, other->param98_);
  std::swap(param99_, other->param99_);
  std::swap(param100_, other->param100_);
  std::swap(readermeanlow_, other->readermeanlow_);
  std::swap(readermeanhigh_, other->readermeanhigh_);
  std::swap(readerdriftlow_, other->readerdriftlow_);
  std::swap(readerdrifthigh_, other->readerdrifthigh_);
  std::swap(readernoiselow_, other->readernoiselow_);
  std::swap(readernoisehigh_, other->readernoisehigh_);
  std::swap(tminus_, other->tminus_);
  std::swap(tplus_, other->tplus_);
  std::swap(postcurvatureweight_, other->postcurvatureweight_);
  std::swap(bloodpointstoskip_, other->bloodpointstoskip_);
  std::swap(bloodpointsinwindow_, other->bloodpointsinwindow_);
  std::swap(bloodnoisehigh_, other->bloodnoisehigh_);
  std::swap(aqpointstoskip_, other->aqpointstoskip_);
  std::swap(aqpointsinwindow_, other->aqpointsinwindow_);
  std::swap(aqnoisehigh_, other->aqnoisehigh_);
  std::swap(latebloodpointstoskip_, other->latebloodpointstoskip_);
  std::swap(latebloodpointsinwindow_, other->latebloodpointsinwindow_);
  std::swap(latebloodnoisehigh_, other->latebloodnoisehigh_);
  std::swap(lateaqpointstoskip_, other->lateaqpointstoskip_);
  std::swap(lateaqpointsinwindow_, other->lateaqpointsinwindow_);
  std::swap(lateaqnoisehigh_, other->lateaqnoisehigh_);
  std::swap(rtpointlimitlow_, other->rtpointlimitlow_);
  std::swap(rtpointlimithigh_, other->rtpointlimithigh_);
  std::swap(d1low_, other->d1low_);
  std::swap(d1high_, other->d1high_);
  std::swap(p1d2low_, other->p1d2low_);
  std::swap(p1d2high_, other->p1d2high_);
  std::swap(p2d2low_, other->p2d2low_);
  std::swap(p2d2high_, other->p2d2high_);
  std::swap(p3d2low_, other->p3d2low_);
  std::swap(p3d2high_, other->p3d2high_);
  std::swap(a_, other->a_);
  std::swap(b_, other->b_);
  std::swap(c_, other->c_);
  std::swap(d_, other->d_);
  std::swap(f_, other->f_);
  std::swap(g_, other->g_);
  std::swap(tamboffset_, other->tamboffset_);
  std::swap(injectiontimeoffset_, other->injectiontimeoffset_);
  std::swap(ageoffset_, other->ageoffset_);
  std::swap(poweroffset_, other->poweroffset_);
  neuralnetblood_.Swap(&other->neuralnetblood_);
  neuralnetaq_.Swap(&other->neuralnetaq_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SensorInfo::GetTypeName() const {
  return "to.SensorInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SensorInfo

// optional int32 channelType = 1;
void SensorInfo::clear_channeltype() {
  channeltype_ = 0;
}
 ::google::protobuf::int32 SensorInfo::channeltype() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.channelType)
  return channeltype_;
}
 void SensorInfo::set_channeltype(::google::protobuf::int32 value) {
  
  channeltype_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.channelType)
}

// optional int32 sensorType = 2;
void SensorInfo::clear_sensortype() {
  sensortype_ = 0;
}
 ::google::protobuf::int32 SensorInfo::sensortype() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.sensorType)
  return sensortype_;
}
 void SensorInfo::set_sensortype(::google::protobuf::int32 value) {
  
  sensortype_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.sensorType)
}

// optional int32 sensorDescriptorNumber = 3;
void SensorInfo::clear_sensordescriptornumber() {
  sensordescriptornumber_ = 0;
}
 ::google::protobuf::int32 SensorInfo::sensordescriptornumber() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.sensorDescriptorNumber)
  return sensordescriptornumber_;
}
 void SensorInfo::set_sensordescriptornumber(::google::protobuf::int32 value) {
  
  sensordescriptornumber_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.sensorDescriptorNumber)
}

// optional double calDelimit = 4;
void SensorInfo::clear_caldelimit() {
  caldelimit_ = 0;
}
 double SensorInfo::caldelimit() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.calDelimit)
  return caldelimit_;
}
 void SensorInfo::set_caldelimit(double value) {
  
  caldelimit_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.calDelimit)
}

// optional double sampleDelimit = 5;
void SensorInfo::clear_sampledelimit() {
  sampledelimit_ = 0;
}
 double SensorInfo::sampledelimit() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.sampleDelimit)
  return sampledelimit_;
}
 void SensorInfo::set_sampledelimit(double value) {
  
  sampledelimit_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.sampleDelimit)
}

// optional double postDelimit = 6;
void SensorInfo::clear_postdelimit() {
  postdelimit_ = 0;
}
 double SensorInfo::postdelimit() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.postDelimit)
  return postdelimit_;
}
 void SensorInfo::set_postdelimit(double value) {
  
  postdelimit_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.postDelimit)
}

// optional double extrapolation = 7;
void SensorInfo::clear_extrapolation() {
  extrapolation_ = 0;
}
 double SensorInfo::extrapolation() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.extrapolation)
  return extrapolation_;
}
 void SensorInfo::set_extrapolation(double value) {
  
  extrapolation_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.extrapolation)
}

// optional double calWindowSize = 8;
void SensorInfo::clear_calwindowsize() {
  calwindowsize_ = 0;
}
 double SensorInfo::calwindowsize() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.calWindowSize)
  return calwindowsize_;
}
 void SensorInfo::set_calwindowsize(double value) {
  
  calwindowsize_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.calWindowSize)
}

// optional double sampleWindowSize = 9;
void SensorInfo::clear_samplewindowsize() {
  samplewindowsize_ = 0;
}
 double SensorInfo::samplewindowsize() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.sampleWindowSize)
  return samplewindowsize_;
}
 void SensorInfo::set_samplewindowsize(double value) {
  
  samplewindowsize_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.sampleWindowSize)
}

// optional double postWindowSize = 10;
void SensorInfo::clear_postwindowsize() {
  postwindowsize_ = 0;
}
 double SensorInfo::postwindowsize() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.postWindowSize)
  return postwindowsize_;
}
 void SensorInfo::set_postwindowsize(double value) {
  
  postwindowsize_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.postWindowSize)
}

// optional double calCurveWeight = 11;
void SensorInfo::clear_calcurveweight() {
  calcurveweight_ = 0;
}
 double SensorInfo::calcurveweight() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.calCurveWeight)
  return calcurveweight_;
}
 void SensorInfo::set_calcurveweight(double value) {
  
  calcurveweight_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.calCurveWeight)
}

// optional double sampleCurveWeight = 12;
void SensorInfo::clear_samplecurveweight() {
  samplecurveweight_ = 0;
}
 double SensorInfo::samplecurveweight() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.sampleCurveWeight)
  return samplecurveweight_;
}
 void SensorInfo::set_samplecurveweight(double value) {
  
  samplecurveweight_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.sampleCurveWeight)
}

// optional double calConcentration = 13;
void SensorInfo::clear_calconcentration() {
  calconcentration_ = 0;
}
 double SensorInfo::calconcentration() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.calConcentration)
  return calconcentration_;
}
 void SensorInfo::set_calconcentration(double value) {
  
  calconcentration_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.calConcentration)
}

// optional double offset = 14;
void SensorInfo::clear_offset() {
  offset_ = 0;
}
 double SensorInfo::offset() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.offset)
  return offset_;
}
 void SensorInfo::set_offset(double value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.offset)
}

// optional double slopeFactor = 15;
void SensorInfo::clear_slopefactor() {
  slopefactor_ = 0;
}
 double SensorInfo::slopefactor() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.slopeFactor)
  return slopefactor_;
}
 void SensorInfo::set_slopefactor(double value) {
  
  slopefactor_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.slopeFactor)
}

// optional double CalMeanLowQC = 16;
void SensorInfo::clear_calmeanlowqc() {
  calmeanlowqc_ = 0;
}
 double SensorInfo::calmeanlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.CalMeanLowQC)
  return calmeanlowqc_;
}
 void SensorInfo::set_calmeanlowqc(double value) {
  
  calmeanlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.CalMeanLowQC)
}

// optional double CalMeanHighQC = 17;
void SensorInfo::clear_calmeanhighqc() {
  calmeanhighqc_ = 0;
}
 double SensorInfo::calmeanhighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.CalMeanHighQC)
  return calmeanhighqc_;
}
 void SensorInfo::set_calmeanhighqc(double value) {
  
  calmeanhighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.CalMeanHighQC)
}

// optional double CalDriftLowQC = 18;
void SensorInfo::clear_caldriftlowqc() {
  caldriftlowqc_ = 0;
}
 double SensorInfo::caldriftlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.CalDriftLowQC)
  return caldriftlowqc_;
}
 void SensorInfo::set_caldriftlowqc(double value) {
  
  caldriftlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.CalDriftLowQC)
}

// optional double CalDriftHighQC = 19;
void SensorInfo::clear_caldrifthighqc() {
  caldrifthighqc_ = 0;
}
 double SensorInfo::caldrifthighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.CalDriftHighQC)
  return caldrifthighqc_;
}
 void SensorInfo::set_caldrifthighqc(double value) {
  
  caldrifthighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.CalDriftHighQC)
}

// optional double CalSecondLowQC = 20;
void SensorInfo::clear_calsecondlowqc() {
  calsecondlowqc_ = 0;
}
 double SensorInfo::calsecondlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.CalSecondLowQC)
  return calsecondlowqc_;
}
 void SensorInfo::set_calsecondlowqc(double value) {
  
  calsecondlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.CalSecondLowQC)
}

// optional double CalSecondHighQC = 21;
void SensorInfo::clear_calsecondhighqc() {
  calsecondhighqc_ = 0;
}
 double SensorInfo::calsecondhighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.CalSecondHighQC)
  return calsecondhighqc_;
}
 void SensorInfo::set_calsecondhighqc(double value) {
  
  calsecondhighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.CalSecondHighQC)
}

// optional double CalNoiseHighQC = 22;
void SensorInfo::clear_calnoisehighqc() {
  calnoisehighqc_ = 0;
}
 double SensorInfo::calnoisehighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.CalNoiseHighQC)
  return calnoisehighqc_;
}
 void SensorInfo::set_calnoisehighqc(double value) {
  
  calnoisehighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.CalNoiseHighQC)
}

// optional double SampleMeanLowQC = 23;
void SensorInfo::clear_samplemeanlowqc() {
  samplemeanlowqc_ = 0;
}
 double SensorInfo::samplemeanlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.SampleMeanLowQC)
  return samplemeanlowqc_;
}
 void SensorInfo::set_samplemeanlowqc(double value) {
  
  samplemeanlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.SampleMeanLowQC)
}

// optional double SampleMeanHighQC = 24;
void SensorInfo::clear_samplemeanhighqc() {
  samplemeanhighqc_ = 0;
}
 double SensorInfo::samplemeanhighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.SampleMeanHighQC)
  return samplemeanhighqc_;
}
 void SensorInfo::set_samplemeanhighqc(double value) {
  
  samplemeanhighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.SampleMeanHighQC)
}

// optional double SampleDriftLowQC = 25;
void SensorInfo::clear_sampledriftlowqc() {
  sampledriftlowqc_ = 0;
}
 double SensorInfo::sampledriftlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.SampleDriftLowQC)
  return sampledriftlowqc_;
}
 void SensorInfo::set_sampledriftlowqc(double value) {
  
  sampledriftlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.SampleDriftLowQC)
}

// optional double SampleDriftHighQC = 26;
void SensorInfo::clear_sampledrifthighqc() {
  sampledrifthighqc_ = 0;
}
 double SensorInfo::sampledrifthighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.SampleDriftHighQC)
  return sampledrifthighqc_;
}
 void SensorInfo::set_sampledrifthighqc(double value) {
  
  sampledrifthighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.SampleDriftHighQC)
}

// optional double SampleSecondLowQC = 27;
void SensorInfo::clear_samplesecondlowqc() {
  samplesecondlowqc_ = 0;
}
 double SensorInfo::samplesecondlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.SampleSecondLowQC)
  return samplesecondlowqc_;
}
 void SensorInfo::set_samplesecondlowqc(double value) {
  
  samplesecondlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.SampleSecondLowQC)
}

// optional double SampleSecondHighQC = 28;
void SensorInfo::clear_samplesecondhighqc() {
  samplesecondhighqc_ = 0;
}
 double SensorInfo::samplesecondhighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.SampleSecondHighQC)
  return samplesecondhighqc_;
}
 void SensorInfo::set_samplesecondhighqc(double value) {
  
  samplesecondhighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.SampleSecondHighQC)
}

// optional double SampleNoiseHighQC = 29;
void SensorInfo::clear_samplenoisehighqc() {
  samplenoisehighqc_ = 0;
}
 double SensorInfo::samplenoisehighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.SampleNoiseHighQC)
  return samplenoisehighqc_;
}
 void SensorInfo::set_samplenoisehighqc(double value) {
  
  samplenoisehighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.SampleNoiseHighQC)
}

// optional double PostMeanLowQC = 30;
void SensorInfo::clear_postmeanlowqc() {
  postmeanlowqc_ = 0;
}
 double SensorInfo::postmeanlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.PostMeanLowQC)
  return postmeanlowqc_;
}
 void SensorInfo::set_postmeanlowqc(double value) {
  
  postmeanlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.PostMeanLowQC)
}

// optional double PostMeanHighQC = 31;
void SensorInfo::clear_postmeanhighqc() {
  postmeanhighqc_ = 0;
}
 double SensorInfo::postmeanhighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.PostMeanHighQC)
  return postmeanhighqc_;
}
 void SensorInfo::set_postmeanhighqc(double value) {
  
  postmeanhighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.PostMeanHighQC)
}

// optional double PostDriftLowQC = 32;
void SensorInfo::clear_postdriftlowqc() {
  postdriftlowqc_ = 0;
}
 double SensorInfo::postdriftlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.PostDriftLowQC)
  return postdriftlowqc_;
}
 void SensorInfo::set_postdriftlowqc(double value) {
  
  postdriftlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.PostDriftLowQC)
}

// optional double PostDriftHighQC = 33;
void SensorInfo::clear_postdrifthighqc() {
  postdrifthighqc_ = 0;
}
 double SensorInfo::postdrifthighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.PostDriftHighQC)
  return postdrifthighqc_;
}
 void SensorInfo::set_postdrifthighqc(double value) {
  
  postdrifthighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.PostDriftHighQC)
}

// optional double PostSecondLowQC = 34;
void SensorInfo::clear_postsecondlowqc() {
  postsecondlowqc_ = 0;
}
 double SensorInfo::postsecondlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.PostSecondLowQC)
  return postsecondlowqc_;
}
 void SensorInfo::set_postsecondlowqc(double value) {
  
  postsecondlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.PostSecondLowQC)
}

// optional double PostSecondHighQC = 35;
void SensorInfo::clear_postsecondhighqc() {
  postsecondhighqc_ = 0;
}
 double SensorInfo::postsecondhighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.PostSecondHighQC)
  return postsecondhighqc_;
}
 void SensorInfo::set_postsecondhighqc(double value) {
  
  postsecondhighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.PostSecondHighQC)
}

// optional double PostNoiseHighQC = 36;
void SensorInfo::clear_postnoisehighqc() {
  postnoisehighqc_ = 0;
}
 double SensorInfo::postnoisehighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.PostNoiseHighQC)
  return postnoisehighqc_;
}
 void SensorInfo::set_postnoisehighqc(double value) {
  
  postnoisehighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.PostNoiseHighQC)
}

// optional double DeltaDriftLowQC = 37;
void SensorInfo::clear_deltadriftlowqc() {
  deltadriftlowqc_ = 0;
}
 double SensorInfo::deltadriftlowqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.DeltaDriftLowQC)
  return deltadriftlowqc_;
}
 void SensorInfo::set_deltadriftlowqc(double value) {
  
  deltadriftlowqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.DeltaDriftLowQC)
}

// optional double DeltaDriftHighQC = 38;
void SensorInfo::clear_deltadrifthighqc() {
  deltadrifthighqc_ = 0;
}
 double SensorInfo::deltadrifthighqc() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.DeltaDriftHighQC)
  return deltadrifthighqc_;
}
 void SensorInfo::set_deltadrifthighqc(double value) {
  
  deltadrifthighqc_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.DeltaDriftHighQC)
}

// optional double param1 = 39;
void SensorInfo::clear_param1() {
  param1_ = 0;
}
 double SensorInfo::param1() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param1)
  return param1_;
}
 void SensorInfo::set_param1(double value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param1)
}

// optional double param2 = 40;
void SensorInfo::clear_param2() {
  param2_ = 0;
}
 double SensorInfo::param2() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param2)
  return param2_;
}
 void SensorInfo::set_param2(double value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param2)
}

// optional double param3 = 41;
void SensorInfo::clear_param3() {
  param3_ = 0;
}
 double SensorInfo::param3() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param3)
  return param3_;
}
 void SensorInfo::set_param3(double value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param3)
}

// optional double param4 = 42;
void SensorInfo::clear_param4() {
  param4_ = 0;
}
 double SensorInfo::param4() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param4)
  return param4_;
}
 void SensorInfo::set_param4(double value) {
  
  param4_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param4)
}

// optional double param5 = 43;
void SensorInfo::clear_param5() {
  param5_ = 0;
}
 double SensorInfo::param5() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param5)
  return param5_;
}
 void SensorInfo::set_param5(double value) {
  
  param5_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param5)
}

// optional double param6 = 44;
void SensorInfo::clear_param6() {
  param6_ = 0;
}
 double SensorInfo::param6() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param6)
  return param6_;
}
 void SensorInfo::set_param6(double value) {
  
  param6_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param6)
}

// optional double param7 = 45;
void SensorInfo::clear_param7() {
  param7_ = 0;
}
 double SensorInfo::param7() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param7)
  return param7_;
}
 void SensorInfo::set_param7(double value) {
  
  param7_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param7)
}

// optional double param8 = 46;
void SensorInfo::clear_param8() {
  param8_ = 0;
}
 double SensorInfo::param8() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param8)
  return param8_;
}
 void SensorInfo::set_param8(double value) {
  
  param8_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param8)
}

// optional double param9 = 47;
void SensorInfo::clear_param9() {
  param9_ = 0;
}
 double SensorInfo::param9() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param9)
  return param9_;
}
 void SensorInfo::set_param9(double value) {
  
  param9_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param9)
}

// optional double param10 = 48;
void SensorInfo::clear_param10() {
  param10_ = 0;
}
 double SensorInfo::param10() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param10)
  return param10_;
}
 void SensorInfo::set_param10(double value) {
  
  param10_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param10)
}

// optional double param11 = 49;
void SensorInfo::clear_param11() {
  param11_ = 0;
}
 double SensorInfo::param11() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param11)
  return param11_;
}
 void SensorInfo::set_param11(double value) {
  
  param11_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param11)
}

// optional double param12 = 50;
void SensorInfo::clear_param12() {
  param12_ = 0;
}
 double SensorInfo::param12() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param12)
  return param12_;
}
 void SensorInfo::set_param12(double value) {
  
  param12_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param12)
}

// optional double param13 = 51;
void SensorInfo::clear_param13() {
  param13_ = 0;
}
 double SensorInfo::param13() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param13)
  return param13_;
}
 void SensorInfo::set_param13(double value) {
  
  param13_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param13)
}

// optional double param14 = 52;
void SensorInfo::clear_param14() {
  param14_ = 0;
}
 double SensorInfo::param14() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param14)
  return param14_;
}
 void SensorInfo::set_param14(double value) {
  
  param14_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param14)
}

// optional double param15 = 53;
void SensorInfo::clear_param15() {
  param15_ = 0;
}
 double SensorInfo::param15() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param15)
  return param15_;
}
 void SensorInfo::set_param15(double value) {
  
  param15_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param15)
}

// optional double param16 = 54;
void SensorInfo::clear_param16() {
  param16_ = 0;
}
 double SensorInfo::param16() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param16)
  return param16_;
}
 void SensorInfo::set_param16(double value) {
  
  param16_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param16)
}

// optional double param17 = 55;
void SensorInfo::clear_param17() {
  param17_ = 0;
}
 double SensorInfo::param17() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param17)
  return param17_;
}
 void SensorInfo::set_param17(double value) {
  
  param17_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param17)
}

// optional double param18 = 56;
void SensorInfo::clear_param18() {
  param18_ = 0;
}
 double SensorInfo::param18() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param18)
  return param18_;
}
 void SensorInfo::set_param18(double value) {
  
  param18_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param18)
}

// optional double param19 = 57;
void SensorInfo::clear_param19() {
  param19_ = 0;
}
 double SensorInfo::param19() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param19)
  return param19_;
}
 void SensorInfo::set_param19(double value) {
  
  param19_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param19)
}

// optional double param20 = 58;
void SensorInfo::clear_param20() {
  param20_ = 0;
}
 double SensorInfo::param20() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param20)
  return param20_;
}
 void SensorInfo::set_param20(double value) {
  
  param20_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param20)
}

// optional double param21 = 59;
void SensorInfo::clear_param21() {
  param21_ = 0;
}
 double SensorInfo::param21() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param21)
  return param21_;
}
 void SensorInfo::set_param21(double value) {
  
  param21_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param21)
}

// optional double param22 = 60;
void SensorInfo::clear_param22() {
  param22_ = 0;
}
 double SensorInfo::param22() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param22)
  return param22_;
}
 void SensorInfo::set_param22(double value) {
  
  param22_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param22)
}

// optional double param23 = 61;
void SensorInfo::clear_param23() {
  param23_ = 0;
}
 double SensorInfo::param23() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param23)
  return param23_;
}
 void SensorInfo::set_param23(double value) {
  
  param23_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param23)
}

// optional double param24 = 62;
void SensorInfo::clear_param24() {
  param24_ = 0;
}
 double SensorInfo::param24() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param24)
  return param24_;
}
 void SensorInfo::set_param24(double value) {
  
  param24_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param24)
}

// optional double param25 = 63;
void SensorInfo::clear_param25() {
  param25_ = 0;
}
 double SensorInfo::param25() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param25)
  return param25_;
}
 void SensorInfo::set_param25(double value) {
  
  param25_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param25)
}

// optional double param26 = 64;
void SensorInfo::clear_param26() {
  param26_ = 0;
}
 double SensorInfo::param26() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param26)
  return param26_;
}
 void SensorInfo::set_param26(double value) {
  
  param26_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param26)
}

// optional double param27 = 65;
void SensorInfo::clear_param27() {
  param27_ = 0;
}
 double SensorInfo::param27() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param27)
  return param27_;
}
 void SensorInfo::set_param27(double value) {
  
  param27_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param27)
}

// optional double param28 = 66;
void SensorInfo::clear_param28() {
  param28_ = 0;
}
 double SensorInfo::param28() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param28)
  return param28_;
}
 void SensorInfo::set_param28(double value) {
  
  param28_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param28)
}

// optional double param29 = 67;
void SensorInfo::clear_param29() {
  param29_ = 0;
}
 double SensorInfo::param29() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param29)
  return param29_;
}
 void SensorInfo::set_param29(double value) {
  
  param29_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param29)
}

// optional double param30 = 68;
void SensorInfo::clear_param30() {
  param30_ = 0;
}
 double SensorInfo::param30() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param30)
  return param30_;
}
 void SensorInfo::set_param30(double value) {
  
  param30_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param30)
}

// optional double param31 = 69;
void SensorInfo::clear_param31() {
  param31_ = 0;
}
 double SensorInfo::param31() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param31)
  return param31_;
}
 void SensorInfo::set_param31(double value) {
  
  param31_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param31)
}

// optional double param32 = 70;
void SensorInfo::clear_param32() {
  param32_ = 0;
}
 double SensorInfo::param32() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param32)
  return param32_;
}
 void SensorInfo::set_param32(double value) {
  
  param32_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param32)
}

// optional double param33 = 71;
void SensorInfo::clear_param33() {
  param33_ = 0;
}
 double SensorInfo::param33() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param33)
  return param33_;
}
 void SensorInfo::set_param33(double value) {
  
  param33_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param33)
}

// optional double param34 = 72;
void SensorInfo::clear_param34() {
  param34_ = 0;
}
 double SensorInfo::param34() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param34)
  return param34_;
}
 void SensorInfo::set_param34(double value) {
  
  param34_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param34)
}

// optional double param35 = 73;
void SensorInfo::clear_param35() {
  param35_ = 0;
}
 double SensorInfo::param35() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param35)
  return param35_;
}
 void SensorInfo::set_param35(double value) {
  
  param35_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param35)
}

// optional double param36 = 74;
void SensorInfo::clear_param36() {
  param36_ = 0;
}
 double SensorInfo::param36() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param36)
  return param36_;
}
 void SensorInfo::set_param36(double value) {
  
  param36_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param36)
}

// optional double param37 = 75;
void SensorInfo::clear_param37() {
  param37_ = 0;
}
 double SensorInfo::param37() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param37)
  return param37_;
}
 void SensorInfo::set_param37(double value) {
  
  param37_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param37)
}

// optional double param38 = 76;
void SensorInfo::clear_param38() {
  param38_ = 0;
}
 double SensorInfo::param38() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param38)
  return param38_;
}
 void SensorInfo::set_param38(double value) {
  
  param38_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param38)
}

// optional double param39 = 77;
void SensorInfo::clear_param39() {
  param39_ = 0;
}
 double SensorInfo::param39() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param39)
  return param39_;
}
 void SensorInfo::set_param39(double value) {
  
  param39_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param39)
}

// optional double param40 = 78;
void SensorInfo::clear_param40() {
  param40_ = 0;
}
 double SensorInfo::param40() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param40)
  return param40_;
}
 void SensorInfo::set_param40(double value) {
  
  param40_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param40)
}

// optional double param41 = 79;
void SensorInfo::clear_param41() {
  param41_ = 0;
}
 double SensorInfo::param41() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param41)
  return param41_;
}
 void SensorInfo::set_param41(double value) {
  
  param41_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param41)
}

// optional double param42 = 80;
void SensorInfo::clear_param42() {
  param42_ = 0;
}
 double SensorInfo::param42() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param42)
  return param42_;
}
 void SensorInfo::set_param42(double value) {
  
  param42_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param42)
}

// optional double param43 = 81;
void SensorInfo::clear_param43() {
  param43_ = 0;
}
 double SensorInfo::param43() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param43)
  return param43_;
}
 void SensorInfo::set_param43(double value) {
  
  param43_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param43)
}

// optional double param44 = 82;
void SensorInfo::clear_param44() {
  param44_ = 0;
}
 double SensorInfo::param44() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param44)
  return param44_;
}
 void SensorInfo::set_param44(double value) {
  
  param44_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param44)
}

// optional double param45 = 83;
void SensorInfo::clear_param45() {
  param45_ = 0;
}
 double SensorInfo::param45() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param45)
  return param45_;
}
 void SensorInfo::set_param45(double value) {
  
  param45_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param45)
}

// optional double param46 = 84;
void SensorInfo::clear_param46() {
  param46_ = 0;
}
 double SensorInfo::param46() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param46)
  return param46_;
}
 void SensorInfo::set_param46(double value) {
  
  param46_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param46)
}

// optional double param47 = 85;
void SensorInfo::clear_param47() {
  param47_ = 0;
}
 double SensorInfo::param47() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param47)
  return param47_;
}
 void SensorInfo::set_param47(double value) {
  
  param47_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param47)
}

// optional double param48 = 86;
void SensorInfo::clear_param48() {
  param48_ = 0;
}
 double SensorInfo::param48() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param48)
  return param48_;
}
 void SensorInfo::set_param48(double value) {
  
  param48_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param48)
}

// optional double param49 = 87;
void SensorInfo::clear_param49() {
  param49_ = 0;
}
 double SensorInfo::param49() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param49)
  return param49_;
}
 void SensorInfo::set_param49(double value) {
  
  param49_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param49)
}

// optional double param50 = 88;
void SensorInfo::clear_param50() {
  param50_ = 0;
}
 double SensorInfo::param50() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param50)
  return param50_;
}
 void SensorInfo::set_param50(double value) {
  
  param50_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param50)
}

// optional double param51 = 89;
void SensorInfo::clear_param51() {
  param51_ = 0;
}
 double SensorInfo::param51() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param51)
  return param51_;
}
 void SensorInfo::set_param51(double value) {
  
  param51_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param51)
}

// optional double param52 = 90;
void SensorInfo::clear_param52() {
  param52_ = 0;
}
 double SensorInfo::param52() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param52)
  return param52_;
}
 void SensorInfo::set_param52(double value) {
  
  param52_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param52)
}

// optional double param53 = 91;
void SensorInfo::clear_param53() {
  param53_ = 0;
}
 double SensorInfo::param53() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param53)
  return param53_;
}
 void SensorInfo::set_param53(double value) {
  
  param53_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param53)
}

// optional double param54 = 92;
void SensorInfo::clear_param54() {
  param54_ = 0;
}
 double SensorInfo::param54() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param54)
  return param54_;
}
 void SensorInfo::set_param54(double value) {
  
  param54_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param54)
}

// optional double param55 = 93;
void SensorInfo::clear_param55() {
  param55_ = 0;
}
 double SensorInfo::param55() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param55)
  return param55_;
}
 void SensorInfo::set_param55(double value) {
  
  param55_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param55)
}

// optional double param56 = 94;
void SensorInfo::clear_param56() {
  param56_ = 0;
}
 double SensorInfo::param56() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param56)
  return param56_;
}
 void SensorInfo::set_param56(double value) {
  
  param56_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param56)
}

// optional double param57 = 95;
void SensorInfo::clear_param57() {
  param57_ = 0;
}
 double SensorInfo::param57() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param57)
  return param57_;
}
 void SensorInfo::set_param57(double value) {
  
  param57_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param57)
}

// optional double param58 = 96;
void SensorInfo::clear_param58() {
  param58_ = 0;
}
 double SensorInfo::param58() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param58)
  return param58_;
}
 void SensorInfo::set_param58(double value) {
  
  param58_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param58)
}

// optional double param59 = 97;
void SensorInfo::clear_param59() {
  param59_ = 0;
}
 double SensorInfo::param59() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param59)
  return param59_;
}
 void SensorInfo::set_param59(double value) {
  
  param59_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param59)
}

// optional double param60 = 98;
void SensorInfo::clear_param60() {
  param60_ = 0;
}
 double SensorInfo::param60() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param60)
  return param60_;
}
 void SensorInfo::set_param60(double value) {
  
  param60_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param60)
}

// optional double param61 = 99;
void SensorInfo::clear_param61() {
  param61_ = 0;
}
 double SensorInfo::param61() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param61)
  return param61_;
}
 void SensorInfo::set_param61(double value) {
  
  param61_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param61)
}

// optional double param62 = 100;
void SensorInfo::clear_param62() {
  param62_ = 0;
}
 double SensorInfo::param62() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param62)
  return param62_;
}
 void SensorInfo::set_param62(double value) {
  
  param62_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param62)
}

// optional double param63 = 101;
void SensorInfo::clear_param63() {
  param63_ = 0;
}
 double SensorInfo::param63() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param63)
  return param63_;
}
 void SensorInfo::set_param63(double value) {
  
  param63_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param63)
}

// optional double param64 = 102;
void SensorInfo::clear_param64() {
  param64_ = 0;
}
 double SensorInfo::param64() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param64)
  return param64_;
}
 void SensorInfo::set_param64(double value) {
  
  param64_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param64)
}

// optional double param65 = 103;
void SensorInfo::clear_param65() {
  param65_ = 0;
}
 double SensorInfo::param65() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param65)
  return param65_;
}
 void SensorInfo::set_param65(double value) {
  
  param65_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param65)
}

// optional double param66 = 104;
void SensorInfo::clear_param66() {
  param66_ = 0;
}
 double SensorInfo::param66() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param66)
  return param66_;
}
 void SensorInfo::set_param66(double value) {
  
  param66_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param66)
}

// optional double param67 = 105;
void SensorInfo::clear_param67() {
  param67_ = 0;
}
 double SensorInfo::param67() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param67)
  return param67_;
}
 void SensorInfo::set_param67(double value) {
  
  param67_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param67)
}

// optional double param68 = 106;
void SensorInfo::clear_param68() {
  param68_ = 0;
}
 double SensorInfo::param68() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param68)
  return param68_;
}
 void SensorInfo::set_param68(double value) {
  
  param68_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param68)
}

// optional double param69 = 107;
void SensorInfo::clear_param69() {
  param69_ = 0;
}
 double SensorInfo::param69() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param69)
  return param69_;
}
 void SensorInfo::set_param69(double value) {
  
  param69_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param69)
}

// optional double param70 = 108;
void SensorInfo::clear_param70() {
  param70_ = 0;
}
 double SensorInfo::param70() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param70)
  return param70_;
}
 void SensorInfo::set_param70(double value) {
  
  param70_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param70)
}

// optional double param71 = 109;
void SensorInfo::clear_param71() {
  param71_ = 0;
}
 double SensorInfo::param71() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param71)
  return param71_;
}
 void SensorInfo::set_param71(double value) {
  
  param71_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param71)
}

// optional double param72 = 110;
void SensorInfo::clear_param72() {
  param72_ = 0;
}
 double SensorInfo::param72() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param72)
  return param72_;
}
 void SensorInfo::set_param72(double value) {
  
  param72_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param72)
}

// optional double param73 = 111;
void SensorInfo::clear_param73() {
  param73_ = 0;
}
 double SensorInfo::param73() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param73)
  return param73_;
}
 void SensorInfo::set_param73(double value) {
  
  param73_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param73)
}

// optional double param74 = 112;
void SensorInfo::clear_param74() {
  param74_ = 0;
}
 double SensorInfo::param74() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param74)
  return param74_;
}
 void SensorInfo::set_param74(double value) {
  
  param74_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param74)
}

// optional double param75 = 113;
void SensorInfo::clear_param75() {
  param75_ = 0;
}
 double SensorInfo::param75() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param75)
  return param75_;
}
 void SensorInfo::set_param75(double value) {
  
  param75_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param75)
}

// optional double param76 = 114;
void SensorInfo::clear_param76() {
  param76_ = 0;
}
 double SensorInfo::param76() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param76)
  return param76_;
}
 void SensorInfo::set_param76(double value) {
  
  param76_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param76)
}

// optional double param77 = 115;
void SensorInfo::clear_param77() {
  param77_ = 0;
}
 double SensorInfo::param77() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param77)
  return param77_;
}
 void SensorInfo::set_param77(double value) {
  
  param77_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param77)
}

// optional double param78 = 116;
void SensorInfo::clear_param78() {
  param78_ = 0;
}
 double SensorInfo::param78() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param78)
  return param78_;
}
 void SensorInfo::set_param78(double value) {
  
  param78_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param78)
}

// optional double param79 = 117;
void SensorInfo::clear_param79() {
  param79_ = 0;
}
 double SensorInfo::param79() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param79)
  return param79_;
}
 void SensorInfo::set_param79(double value) {
  
  param79_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param79)
}

// optional double param80 = 118;
void SensorInfo::clear_param80() {
  param80_ = 0;
}
 double SensorInfo::param80() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param80)
  return param80_;
}
 void SensorInfo::set_param80(double value) {
  
  param80_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param80)
}

// optional double param81 = 119;
void SensorInfo::clear_param81() {
  param81_ = 0;
}
 double SensorInfo::param81() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param81)
  return param81_;
}
 void SensorInfo::set_param81(double value) {
  
  param81_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param81)
}

// optional double param82 = 120;
void SensorInfo::clear_param82() {
  param82_ = 0;
}
 double SensorInfo::param82() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param82)
  return param82_;
}
 void SensorInfo::set_param82(double value) {
  
  param82_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param82)
}

// optional double param83 = 121;
void SensorInfo::clear_param83() {
  param83_ = 0;
}
 double SensorInfo::param83() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param83)
  return param83_;
}
 void SensorInfo::set_param83(double value) {
  
  param83_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param83)
}

// optional double param84 = 122;
void SensorInfo::clear_param84() {
  param84_ = 0;
}
 double SensorInfo::param84() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param84)
  return param84_;
}
 void SensorInfo::set_param84(double value) {
  
  param84_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param84)
}

// optional double param85 = 123;
void SensorInfo::clear_param85() {
  param85_ = 0;
}
 double SensorInfo::param85() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param85)
  return param85_;
}
 void SensorInfo::set_param85(double value) {
  
  param85_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param85)
}

// optional double param86 = 124;
void SensorInfo::clear_param86() {
  param86_ = 0;
}
 double SensorInfo::param86() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param86)
  return param86_;
}
 void SensorInfo::set_param86(double value) {
  
  param86_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param86)
}

// optional double param87 = 125;
void SensorInfo::clear_param87() {
  param87_ = 0;
}
 double SensorInfo::param87() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param87)
  return param87_;
}
 void SensorInfo::set_param87(double value) {
  
  param87_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param87)
}

// optional double param88 = 126;
void SensorInfo::clear_param88() {
  param88_ = 0;
}
 double SensorInfo::param88() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param88)
  return param88_;
}
 void SensorInfo::set_param88(double value) {
  
  param88_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param88)
}

// optional double param89 = 127;
void SensorInfo::clear_param89() {
  param89_ = 0;
}
 double SensorInfo::param89() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param89)
  return param89_;
}
 void SensorInfo::set_param89(double value) {
  
  param89_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param89)
}

// optional double param90 = 128;
void SensorInfo::clear_param90() {
  param90_ = 0;
}
 double SensorInfo::param90() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param90)
  return param90_;
}
 void SensorInfo::set_param90(double value) {
  
  param90_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param90)
}

// optional double param91 = 129;
void SensorInfo::clear_param91() {
  param91_ = 0;
}
 double SensorInfo::param91() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param91)
  return param91_;
}
 void SensorInfo::set_param91(double value) {
  
  param91_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param91)
}

// optional double param92 = 130;
void SensorInfo::clear_param92() {
  param92_ = 0;
}
 double SensorInfo::param92() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param92)
  return param92_;
}
 void SensorInfo::set_param92(double value) {
  
  param92_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param92)
}

// optional double param93 = 131;
void SensorInfo::clear_param93() {
  param93_ = 0;
}
 double SensorInfo::param93() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param93)
  return param93_;
}
 void SensorInfo::set_param93(double value) {
  
  param93_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param93)
}

// optional double param94 = 132;
void SensorInfo::clear_param94() {
  param94_ = 0;
}
 double SensorInfo::param94() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param94)
  return param94_;
}
 void SensorInfo::set_param94(double value) {
  
  param94_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param94)
}

// optional double param95 = 133;
void SensorInfo::clear_param95() {
  param95_ = 0;
}
 double SensorInfo::param95() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param95)
  return param95_;
}
 void SensorInfo::set_param95(double value) {
  
  param95_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param95)
}

// optional double param96 = 134;
void SensorInfo::clear_param96() {
  param96_ = 0;
}
 double SensorInfo::param96() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param96)
  return param96_;
}
 void SensorInfo::set_param96(double value) {
  
  param96_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param96)
}

// optional double param97 = 135;
void SensorInfo::clear_param97() {
  param97_ = 0;
}
 double SensorInfo::param97() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param97)
  return param97_;
}
 void SensorInfo::set_param97(double value) {
  
  param97_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param97)
}

// optional double param98 = 136;
void SensorInfo::clear_param98() {
  param98_ = 0;
}
 double SensorInfo::param98() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param98)
  return param98_;
}
 void SensorInfo::set_param98(double value) {
  
  param98_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param98)
}

// optional double param99 = 137;
void SensorInfo::clear_param99() {
  param99_ = 0;
}
 double SensorInfo::param99() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param99)
  return param99_;
}
 void SensorInfo::set_param99(double value) {
  
  param99_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param99)
}

// optional double param100 = 138;
void SensorInfo::clear_param100() {
  param100_ = 0;
}
 double SensorInfo::param100() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.param100)
  return param100_;
}
 void SensorInfo::set_param100(double value) {
  
  param100_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.param100)
}

// optional float readerMeanLow = 139;
void SensorInfo::clear_readermeanlow() {
  readermeanlow_ = 0;
}
 float SensorInfo::readermeanlow() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.readerMeanLow)
  return readermeanlow_;
}
 void SensorInfo::set_readermeanlow(float value) {
  
  readermeanlow_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.readerMeanLow)
}

// optional float readerMeanHigh = 140;
void SensorInfo::clear_readermeanhigh() {
  readermeanhigh_ = 0;
}
 float SensorInfo::readermeanhigh() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.readerMeanHigh)
  return readermeanhigh_;
}
 void SensorInfo::set_readermeanhigh(float value) {
  
  readermeanhigh_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.readerMeanHigh)
}

// optional float readerDriftLow = 141;
void SensorInfo::clear_readerdriftlow() {
  readerdriftlow_ = 0;
}
 float SensorInfo::readerdriftlow() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.readerDriftLow)
  return readerdriftlow_;
}
 void SensorInfo::set_readerdriftlow(float value) {
  
  readerdriftlow_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.readerDriftLow)
}

// optional float readerDriftHigh = 142;
void SensorInfo::clear_readerdrifthigh() {
  readerdrifthigh_ = 0;
}
 float SensorInfo::readerdrifthigh() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.readerDriftHigh)
  return readerdrifthigh_;
}
 void SensorInfo::set_readerdrifthigh(float value) {
  
  readerdrifthigh_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.readerDriftHigh)
}

// optional float readerNoiseLow = 143;
void SensorInfo::clear_readernoiselow() {
  readernoiselow_ = 0;
}
 float SensorInfo::readernoiselow() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.readerNoiseLow)
  return readernoiselow_;
}
 void SensorInfo::set_readernoiselow(float value) {
  
  readernoiselow_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.readerNoiseLow)
}

// optional float readerNoiseHigh = 144;
void SensorInfo::clear_readernoisehigh() {
  readernoisehigh_ = 0;
}
 float SensorInfo::readernoisehigh() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.readerNoiseHigh)
  return readernoisehigh_;
}
 void SensorInfo::set_readernoisehigh(float value) {
  
  readernoisehigh_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.readerNoiseHigh)
}

// optional double tMinus = 145;
void SensorInfo::clear_tminus() {
  tminus_ = 0;
}
 double SensorInfo::tminus() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.tMinus)
  return tminus_;
}
 void SensorInfo::set_tminus(double value) {
  
  tminus_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.tMinus)
}

// optional double tPlus = 146;
void SensorInfo::clear_tplus() {
  tplus_ = 0;
}
 double SensorInfo::tplus() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.tPlus)
  return tplus_;
}
 void SensorInfo::set_tplus(double value) {
  
  tplus_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.tPlus)
}

// optional double postCurvatureWeight = 147;
void SensorInfo::clear_postcurvatureweight() {
  postcurvatureweight_ = 0;
}
 double SensorInfo::postcurvatureweight() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.postCurvatureWeight)
  return postcurvatureweight_;
}
 void SensorInfo::set_postcurvatureweight(double value) {
  
  postcurvatureweight_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.postCurvatureWeight)
}

// optional int32 bloodPointsToSkip = 148;
void SensorInfo::clear_bloodpointstoskip() {
  bloodpointstoskip_ = 0;
}
 ::google::protobuf::int32 SensorInfo::bloodpointstoskip() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.bloodPointsToSkip)
  return bloodpointstoskip_;
}
 void SensorInfo::set_bloodpointstoskip(::google::protobuf::int32 value) {
  
  bloodpointstoskip_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.bloodPointsToSkip)
}

// optional int32 bloodPointsInWindow = 149;
void SensorInfo::clear_bloodpointsinwindow() {
  bloodpointsinwindow_ = 0;
}
 ::google::protobuf::int32 SensorInfo::bloodpointsinwindow() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.bloodPointsInWindow)
  return bloodpointsinwindow_;
}
 void SensorInfo::set_bloodpointsinwindow(::google::protobuf::int32 value) {
  
  bloodpointsinwindow_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.bloodPointsInWindow)
}

// optional double bloodNoiseHigh = 150;
void SensorInfo::clear_bloodnoisehigh() {
  bloodnoisehigh_ = 0;
}
 double SensorInfo::bloodnoisehigh() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.bloodNoiseHigh)
  return bloodnoisehigh_;
}
 void SensorInfo::set_bloodnoisehigh(double value) {
  
  bloodnoisehigh_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.bloodNoiseHigh)
}

// optional int32 aqPointsToSkip = 151;
void SensorInfo::clear_aqpointstoskip() {
  aqpointstoskip_ = 0;
}
 ::google::protobuf::int32 SensorInfo::aqpointstoskip() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.aqPointsToSkip)
  return aqpointstoskip_;
}
 void SensorInfo::set_aqpointstoskip(::google::protobuf::int32 value) {
  
  aqpointstoskip_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.aqPointsToSkip)
}

// optional int32 aqPointsInWindow = 152;
void SensorInfo::clear_aqpointsinwindow() {
  aqpointsinwindow_ = 0;
}
 ::google::protobuf::int32 SensorInfo::aqpointsinwindow() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.aqPointsInWindow)
  return aqpointsinwindow_;
}
 void SensorInfo::set_aqpointsinwindow(::google::protobuf::int32 value) {
  
  aqpointsinwindow_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.aqPointsInWindow)
}

// optional double aqNoiseHigh = 153;
void SensorInfo::clear_aqnoisehigh() {
  aqnoisehigh_ = 0;
}
 double SensorInfo::aqnoisehigh() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.aqNoiseHigh)
  return aqnoisehigh_;
}
 void SensorInfo::set_aqnoisehigh(double value) {
  
  aqnoisehigh_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.aqNoiseHigh)
}

// optional int32 lateBloodPointsToSkip = 154;
void SensorInfo::clear_latebloodpointstoskip() {
  latebloodpointstoskip_ = 0;
}
 ::google::protobuf::int32 SensorInfo::latebloodpointstoskip() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.lateBloodPointsToSkip)
  return latebloodpointstoskip_;
}
 void SensorInfo::set_latebloodpointstoskip(::google::protobuf::int32 value) {
  
  latebloodpointstoskip_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.lateBloodPointsToSkip)
}

// optional int32 lateBloodPointsInWindow = 155;
void SensorInfo::clear_latebloodpointsinwindow() {
  latebloodpointsinwindow_ = 0;
}
 ::google::protobuf::int32 SensorInfo::latebloodpointsinwindow() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.lateBloodPointsInWindow)
  return latebloodpointsinwindow_;
}
 void SensorInfo::set_latebloodpointsinwindow(::google::protobuf::int32 value) {
  
  latebloodpointsinwindow_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.lateBloodPointsInWindow)
}

// optional double lateBloodNoiseHigh = 156;
void SensorInfo::clear_latebloodnoisehigh() {
  latebloodnoisehigh_ = 0;
}
 double SensorInfo::latebloodnoisehigh() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.lateBloodNoiseHigh)
  return latebloodnoisehigh_;
}
 void SensorInfo::set_latebloodnoisehigh(double value) {
  
  latebloodnoisehigh_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.lateBloodNoiseHigh)
}

// optional int32 lateAqPointsToSkip = 157;
void SensorInfo::clear_lateaqpointstoskip() {
  lateaqpointstoskip_ = 0;
}
 ::google::protobuf::int32 SensorInfo::lateaqpointstoskip() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.lateAqPointsToSkip)
  return lateaqpointstoskip_;
}
 void SensorInfo::set_lateaqpointstoskip(::google::protobuf::int32 value) {
  
  lateaqpointstoskip_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.lateAqPointsToSkip)
}

// optional int32 lateAqPointsInWindow = 158;
void SensorInfo::clear_lateaqpointsinwindow() {
  lateaqpointsinwindow_ = 0;
}
 ::google::protobuf::int32 SensorInfo::lateaqpointsinwindow() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.lateAqPointsInWindow)
  return lateaqpointsinwindow_;
}
 void SensorInfo::set_lateaqpointsinwindow(::google::protobuf::int32 value) {
  
  lateaqpointsinwindow_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.lateAqPointsInWindow)
}

// optional double lateAqNoiseHigh = 159;
void SensorInfo::clear_lateaqnoisehigh() {
  lateaqnoisehigh_ = 0;
}
 double SensorInfo::lateaqnoisehigh() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.lateAqNoiseHigh)
  return lateaqnoisehigh_;
}
 void SensorInfo::set_lateaqnoisehigh(double value) {
  
  lateaqnoisehigh_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.lateAqNoiseHigh)
}

// optional double rtPointLimitLow = 160;
void SensorInfo::clear_rtpointlimitlow() {
  rtpointlimitlow_ = 0;
}
 double SensorInfo::rtpointlimitlow() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.rtPointLimitLow)
  return rtpointlimitlow_;
}
 void SensorInfo::set_rtpointlimitlow(double value) {
  
  rtpointlimitlow_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.rtPointLimitLow)
}

// optional double rtPointLimitHigh = 161;
void SensorInfo::clear_rtpointlimithigh() {
  rtpointlimithigh_ = 0;
}
 double SensorInfo::rtpointlimithigh() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.rtPointLimitHigh)
  return rtpointlimithigh_;
}
 void SensorInfo::set_rtpointlimithigh(double value) {
  
  rtpointlimithigh_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.rtPointLimitHigh)
}

// optional double d1Low = 162;
void SensorInfo::clear_d1low() {
  d1low_ = 0;
}
 double SensorInfo::d1low() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.d1Low)
  return d1low_;
}
 void SensorInfo::set_d1low(double value) {
  
  d1low_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.d1Low)
}

// optional double d1High = 163;
void SensorInfo::clear_d1high() {
  d1high_ = 0;
}
 double SensorInfo::d1high() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.d1High)
  return d1high_;
}
 void SensorInfo::set_d1high(double value) {
  
  d1high_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.d1High)
}

// optional double p1d2Low = 164;
void SensorInfo::clear_p1d2low() {
  p1d2low_ = 0;
}
 double SensorInfo::p1d2low() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.p1d2Low)
  return p1d2low_;
}
 void SensorInfo::set_p1d2low(double value) {
  
  p1d2low_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.p1d2Low)
}

// optional double p1d2High = 165;
void SensorInfo::clear_p1d2high() {
  p1d2high_ = 0;
}
 double SensorInfo::p1d2high() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.p1d2High)
  return p1d2high_;
}
 void SensorInfo::set_p1d2high(double value) {
  
  p1d2high_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.p1d2High)
}

// optional double p2d2Low = 166;
void SensorInfo::clear_p2d2low() {
  p2d2low_ = 0;
}
 double SensorInfo::p2d2low() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.p2d2Low)
  return p2d2low_;
}
 void SensorInfo::set_p2d2low(double value) {
  
  p2d2low_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.p2d2Low)
}

// optional double p2d2High = 167;
void SensorInfo::clear_p2d2high() {
  p2d2high_ = 0;
}
 double SensorInfo::p2d2high() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.p2d2High)
  return p2d2high_;
}
 void SensorInfo::set_p2d2high(double value) {
  
  p2d2high_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.p2d2High)
}

// optional double p3d2Low = 168;
void SensorInfo::clear_p3d2low() {
  p3d2low_ = 0;
}
 double SensorInfo::p3d2low() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.p3d2Low)
  return p3d2low_;
}
 void SensorInfo::set_p3d2low(double value) {
  
  p3d2low_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.p3d2Low)
}

// optional double p3d2High = 169;
void SensorInfo::clear_p3d2high() {
  p3d2high_ = 0;
}
 double SensorInfo::p3d2high() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.p3d2High)
  return p3d2high_;
}
 void SensorInfo::set_p3d2high(double value) {
  
  p3d2high_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.p3d2High)
}

// optional double A = 170;
void SensorInfo::clear_a() {
  a_ = 0;
}
 double SensorInfo::a() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.A)
  return a_;
}
 void SensorInfo::set_a(double value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.A)
}

// optional double B = 171;
void SensorInfo::clear_b() {
  b_ = 0;
}
 double SensorInfo::b() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.B)
  return b_;
}
 void SensorInfo::set_b(double value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.B)
}

// optional double C = 172;
void SensorInfo::clear_c() {
  c_ = 0;
}
 double SensorInfo::c() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.C)
  return c_;
}
 void SensorInfo::set_c(double value) {
  
  c_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.C)
}

// optional double D = 173;
void SensorInfo::clear_d() {
  d_ = 0;
}
 double SensorInfo::d() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.D)
  return d_;
}
 void SensorInfo::set_d(double value) {
  
  d_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.D)
}

// optional double F = 174;
void SensorInfo::clear_f() {
  f_ = 0;
}
 double SensorInfo::f() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.F)
  return f_;
}
 void SensorInfo::set_f(double value) {
  
  f_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.F)
}

// optional double G = 175;
void SensorInfo::clear_g() {
  g_ = 0;
}
 double SensorInfo::g() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.G)
  return g_;
}
 void SensorInfo::set_g(double value) {
  
  g_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.G)
}

// optional double TAmbOffset = 176;
void SensorInfo::clear_tamboffset() {
  tamboffset_ = 0;
}
 double SensorInfo::tamboffset() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.TAmbOffset)
  return tamboffset_;
}
 void SensorInfo::set_tamboffset(double value) {
  
  tamboffset_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.TAmbOffset)
}

// optional double InjectionTimeOffset = 177;
void SensorInfo::clear_injectiontimeoffset() {
  injectiontimeoffset_ = 0;
}
 double SensorInfo::injectiontimeoffset() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.InjectionTimeOffset)
  return injectiontimeoffset_;
}
 void SensorInfo::set_injectiontimeoffset(double value) {
  
  injectiontimeoffset_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.InjectionTimeOffset)
}

// optional double AgeOffset = 178;
void SensorInfo::clear_ageoffset() {
  ageoffset_ = 0;
}
 double SensorInfo::ageoffset() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.AgeOffset)
  return ageoffset_;
}
 void SensorInfo::set_ageoffset(double value) {
  
  ageoffset_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.AgeOffset)
}

// optional double PowerOffset = 179;
void SensorInfo::clear_poweroffset() {
  poweroffset_ = 0;
}
 double SensorInfo::poweroffset() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.PowerOffset)
  return poweroffset_;
}
 void SensorInfo::set_poweroffset(double value) {
  
  poweroffset_ = value;
  // @@protoc_insertion_point(field_set:to.SensorInfo.PowerOffset)
}

// optional string NeuralNetBlood = 180;
void SensorInfo::clear_neuralnetblood() {
  neuralnetblood_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SensorInfo::neuralnetblood() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.NeuralNetBlood)
  return neuralnetblood_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SensorInfo::set_neuralnetblood(const ::std::string& value) {
  
  neuralnetblood_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:to.SensorInfo.NeuralNetBlood)
}
 void SensorInfo::set_neuralnetblood(const char* value) {
  
  neuralnetblood_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:to.SensorInfo.NeuralNetBlood)
}
 void SensorInfo::set_neuralnetblood(const char* value, size_t size) {
  
  neuralnetblood_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:to.SensorInfo.NeuralNetBlood)
}
 ::std::string* SensorInfo::mutable_neuralnetblood() {
  
  // @@protoc_insertion_point(field_mutable:to.SensorInfo.NeuralNetBlood)
  return neuralnetblood_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SensorInfo::release_neuralnetblood() {
  // @@protoc_insertion_point(field_release:to.SensorInfo.NeuralNetBlood)
  
  return neuralnetblood_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SensorInfo::set_allocated_neuralnetblood(::std::string* neuralnetblood) {
  if (neuralnetblood != NULL) {
    
  } else {
    
  }
  neuralnetblood_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), neuralnetblood);
  // @@protoc_insertion_point(field_set_allocated:to.SensorInfo.NeuralNetBlood)
}

// optional string NeuralNetAQ = 181;
void SensorInfo::clear_neuralnetaq() {
  neuralnetaq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SensorInfo::neuralnetaq() const {
  // @@protoc_insertion_point(field_get:to.SensorInfo.NeuralNetAQ)
  return neuralnetaq_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SensorInfo::set_neuralnetaq(const ::std::string& value) {
  
  neuralnetaq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:to.SensorInfo.NeuralNetAQ)
}
 void SensorInfo::set_neuralnetaq(const char* value) {
  
  neuralnetaq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:to.SensorInfo.NeuralNetAQ)
}
 void SensorInfo::set_neuralnetaq(const char* value, size_t size) {
  
  neuralnetaq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:to.SensorInfo.NeuralNetAQ)
}
 ::std::string* SensorInfo::mutable_neuralnetaq() {
  
  // @@protoc_insertion_point(field_mutable:to.SensorInfo.NeuralNetAQ)
  return neuralnetaq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SensorInfo::release_neuralnetaq() {
  // @@protoc_insertion_point(field_release:to.SensorInfo.NeuralNetAQ)
  
  return neuralnetaq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SensorInfo::set_allocated_neuralnetaq(::std::string* neuralnetaq) {
  if (neuralnetaq != NULL) {
    
  } else {
    
  }
  neuralnetaq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), neuralnetaq);
  // @@protoc_insertion_point(field_set_allocated:to.SensorInfo.NeuralNetAQ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace to

// @@protoc_insertion_point(global_scope)
